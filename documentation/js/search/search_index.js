var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.465,1,1.083]],["body/components/AppComponent.html",[0,0.757,1,1.556,2,0.414,3,0.414,4,0.895,5,1.033,6,1.033,7,0.299,8,2.735,9,0.558,10,4.554,11,3.914,12,1.899,13,3.178,14,4.554,15,3.914,16,2.118,17,1.157,18,2.665,19,3.914,20,3.914,21,1.033,22,2.406,23,2.293,24,2.927,25,1.478,26,4.554,27,1.478,28,4.554,29,1.295,30,2.441,31,3.241,32,2.184,33,3.314,34,2.532,35,4.325,36,3.314,37,0.775,38,3.182,39,3.037,40,4.554,41,3.493,42,2.382,43,5.317,44,2.404,45,1.646,46,3.178,47,0.484,48,0.998,49,3.493,50,3.914,51,3.178,52,2.382,53,3.562,54,2.382,55,3.174,56,2.539,57,4.554,58,4.554,59,2.243,60,2.243,61,1.483,62,0.67,63,0.019,64,0.734,65,0.414,66,0.593,67,0.734,68,1.258,69,1.884,70,2.078,71,1.569,72,1.047,73,2.287,74,2.382,75,2.243,76,2.539,77,1.109,78,1.007,79,3.493,80,3.914,81,1.22,82,2.718,83,0.856,84,0.638,85,3.465,86,5.317,87,3.182,88,1.26,89,1.197,90,1.899,91,2.735,92,1.4,93,2.045,94,0.366,95,0.343,96,1.483,97,1.774,98,2.432,99,3.182,100,3.914,101,4.554,102,0.606,103,3.182,104,3.182,105,2.539,106,3.914,107,4.554,108,2.703,109,4.554,110,3.182,111,2.045,112,2.735,113,4.989,114,3.914,115,5.279,116,2.735,117,3.914,118,3.182,119,2.735,120,1.197,121,2.441,122,2.441,123,3.182,124,3.182,125,2.004,126,3.182,127,2.735,128,3.182,129,3.182,130,2.735,131,0.547,132,3.182,133,3.182,134,3.182,135,1.567,136,2.441,137,0.934,138,0.366,139,4.079,140,2.441,141,3.182,142,1.48,143,3.182,144,3.182,145,3.182,146,0.912,147,3.182,148,2.735,149,3.182,150,2.243,151,3.182,152,2.735,153,1.665,154,2.441,155,0.576,156,3.182,157,3.182,158,3.182,159,3.182,160,2.859,161,2.927,162,3.178,163,1.568,164,3.914,165,4.554,166,2.539,167,2.382,168,0.813,169,0.825,170,1.409,171,1.478,172,1.556,173,1.033,174,3.182,175,3.182,176,1.033,177,0.853,178,1.033,179,0.547,180,1.033,181,0.853,182,0.491,183,1.033,184,0.853,185,1.033,186,0.813,187,1.478,188,0.853,189,1.033,190,0.813,191,0.576,192,1.033,193,0.853,194,1.033,195,0.547,196,1.033,197,0.853,198,1.033,199,0.853,200,1.033,201,0.853,202,1.033,203,0.775,204,1.033,205,0.853,206,0.984,207,1.033,208,0.547,209,0.813,210,1.033,211,0.011,212,0.011]],["title/modules/AppModule.html",[213,1.446,214,2.82]],["body/modules/AppModule.html",[0,0.799,1,1.993,2,0.544,3,0.544,7,0.392,36,3.611,41,4.211,47,0.374,55,2.493,61,1.067,63,0.019,68,1.11,81,1.12,83,1.002,84,0.837,88,1.654,93,2.685,94,0.706,95,0.451,120,1.572,168,1.067,179,0.944,190,1.403,203,1.337,208,0.944,209,1.403,211,0.013,212,0.013,213,2.195,214,5.264,215,2.329,216,3.941,217,3.941,218,3.591,219,3.591,220,3.591,221,3.591,222,3.591,223,4.463,224,4.463,225,4.463,226,3.529,227,4.177,228,5.489,229,3.591,230,3.204,231,3.831,232,2.916,233,5.489,234,3.591,235,5.489,236,3.591,237,1.742,238,3.591,239,3.204,240,4.177,241,3.204,242,5.489,243,4.177,244,5.489,245,3.591,246,2.685,247,4.177,248,4.177,249,2.843,250,3.591,251,5.489,252,3.941,253,4.177,254,4.177,255,2.916,256,4.211,257,2.916,258,3.204,259,3.204,260,2.916,261,3.831,262,3.591,263,2.493,264,5.489,265,6.083,266,1.292,267,5.489,268,5.489,269,4.211,270,5.597,271,4.177,272,4.177,273,4.177,274,4.177,275,4.177,276,4.177]],["title/injectables/AuthGuardService.html",[36,1.99,277,1.685]],["body/injectables/AuthGuardService.html",[2,0.463,3,0.463,7,0.334,9,0.604,17,1.391,18,2.671,29,0.867,31,3.596,36,2.427,37,1.712,41,3.779,42,1.862,44,1.339,45,1.716,52,2.578,56,2.747,59,2.427,61,1.693,62,0.749,63,0.019,64,0.491,65,0.834,66,0.463,67,0.884,68,1.023,77,1.2,81,1.635,83,0.862,84,0.713,85,2.125,88,1.409,94,0.41,95,0.384,96,1.144,98,2.623,102,0.939,105,3.401,120,1.854,131,1.223,138,0.809,155,1.104,160,3.41,161,3.921,162,4.966,163,1.798,191,0.644,211,0.012,212,0.012,239,2.73,241,4.335,245,3.059,270,5.694,277,2.357,278,3.059,279,4.912,280,3.779,281,3.86,282,5.694,283,5.694,284,2.941,285,0.58,286,2.292,287,6.624,288,6.099,289,1.599,290,6.099,291,6.099,292,6.099,293,3.559,294,6.624,295,3.559,296,5.651,297,4.335,298,2.15,299,3.559,300,2.055,301,1.385,302,3.559,303,3.401,304,4.927,305,1.453,306,3.559,307,3.167,308,4.927,309,3.779,310,3.559,311,3.559,312,3.559,313,6.099,314,3.559,315,1.001,316,3.559,317,4.927,318,3.439,319,3.779,320,2.288,321,3.559,322,1.101,323,3.559,324,1.566,325,3.559,326,3.559,327,3.559,328,3.559,329,3.944,330,3.559,331,3.559,332,6.099,333,3.559,334,3.559,335,3.559,336,3.559,337,3.059,338,2.288,339,3.559,340,3.559,341,3.559,342,3.559,343,3.559,344,3.559,345,3.559,346,3.559,347,3.559,348,3.559,349,3.559]],["title/components/BreadcrumbsComponent.html",[0,0.465,177,1.083]],["body/components/BreadcrumbsComponent.html",[0,0.735,1,0.945,2,0.459,3,0.459,4,0.991,5,1.145,6,1.145,7,0.331,9,0.689,15,4.208,17,1.1,18,2.962,21,1.145,22,2.435,23,2.321,25,1.589,27,1.589,29,1.37,30,2.705,31,3.455,34,2.744,36,3.402,37,1.609,44,1.327,47,0.434,48,0.606,56,2.73,62,1.031,63,0.019,64,0.839,65,0.637,66,0.732,67,0.935,71,1.437,72,0.822,81,0.945,83,0.86,84,0.707,88,1.397,92,1.552,93,2.267,94,0.406,95,0.38,96,1.533,97,1.966,98,1.397,102,0.933,108,2.475,120,2.286,131,1.165,137,0.933,138,0.699,140,3.756,155,1.156,167,2.561,168,0.901,169,0.887,170,1.515,171,1.589,172,1.628,173,1.145,176,1.145,177,1.628,178,1.145,179,0.606,180,1.145,181,0.945,182,0.545,183,1.145,184,0.945,185,1.145,186,0.901,187,1.589,188,0.945,189,1.145,190,0.901,191,0.639,192,1.145,193,0.945,194,1.145,195,0.606,196,1.145,197,0.945,198,1.145,199,0.945,200,1.145,201,0.945,202,1.145,203,0.859,204,1.145,205,0.945,206,1.091,207,1.145,208,0.606,209,0.901,210,1.145,211,0.012,212,0.012,237,1.471,249,1.939,265,4.208,269,3.756,279,4.896,285,0.575,286,2.013,289,1.589,297,3.756,298,1.972,301,1.581,303,3.387,315,0.991,318,3.925,319,2.705,350,3.777,351,3.032,352,3.626,353,6.075,354,4.896,355,7.101,356,1.669,357,4.896,358,4.896,359,4.66,360,4.896,361,4.66,362,4.66,363,4.896,364,3.417,365,4.896,366,3.527,367,2.042,368,4.896,369,2.73,370,1.444,371,2.277,372,3.527,373,3.81,374,5.298,375,1.842,376,3.527,377,2.527,378,3.527,379,2.705,380,1.845,381,3.756,382,1.939,383,3.527,384,4.896,385,4.208,386,4.896,387,3.756]],["title/components/CategoriesComponent.html",[0,0.465,179,0.694]],["body/components/CategoriesComponent.html",[0,0.767,1,1.07,2,0.52,3,0.52,4,1.122,5,1.296,6,1.296,7,0.375,9,0.735,11,4.579,21,1.296,22,2.467,23,2.351,25,1.729,27,1.729,29,1.46,31,2.624,32,2.308,34,2.779,37,1.46,47,0.484,48,0.686,53,2.97,56,2.97,62,1.122,63,0.019,64,0.883,65,0.693,66,0.78,67,0.828,71,1.752,72,0.974,78,1.548,83,0.78,84,0.8,89,1.502,92,1.757,94,0.46,95,0.431,96,1.392,98,1.581,102,1.015,108,2.815,131,1.146,137,0.974,138,0.613,146,1.282,168,1.02,169,0.965,170,1.648,171,1.729,172,1.714,173,1.296,176,1.296,177,1.07,178,1.296,179,1.1,180,1.296,181,1.07,182,0.617,183,1.296,184,1.07,185,1.296,186,1.02,187,1.729,188,1.07,189,1.296,190,1.02,191,0.723,192,1.296,193,1.07,194,1.296,195,0.686,196,1.296,197,1.07,198,1.296,199,1.07,200,1.296,201,1.07,202,1.296,203,0.972,204,1.296,205,1.07,206,1.235,207,1.296,208,0.686,209,1.02,210,1.296,211,0.013,212,0.013,266,2.345,279,4.086,285,0.651,286,1.907,289,1.729,301,1.122,324,1.757,350,3.566,370,1.965,371,2.477,377,2.109,388,3.432,389,1.361,390,2.78,391,1.815,392,5.327,393,5.327,394,5.327,395,2.786,396,3.992,397,4.086,398,4.086,399,4.579,400,3.992,401,3.992,402,1.571,403,0.972,404,3.992,405,5.327,406,4.579]],["title/interfaces/Category.html",[266,1.25,407,0.77]],["body/interfaces/Category.html",[2,0.377,3,0.377,7,0.272,9,0.783,12,1.773,17,1.071,45,0.776,47,0.498,48,0.498,63,0.019,64,0.399,65,0.925,66,0.938,67,1.006,72,1.038,77,0.705,78,1.367,83,0.553,94,0.755,95,0.312,102,0.81,131,0.498,135,1.426,137,1.03,138,0.755,146,0.58,155,0.912,163,1.254,169,1.12,179,0.866,182,0.657,191,0.77,195,0.866,208,0.498,211,0.012,212,0.01,249,1.683,266,2.243,285,0.472,300,1.773,301,1.663,305,1.254,315,1.195,322,1.315,356,1.449,367,1.773,370,1.744,371,1.346,382,1.146,389,0.74,390,2.579,391,1.449,402,2.149,403,1.441,407,1.364,408,1.426,409,2.224,410,1.522,411,1.68,412,2.117,413,2.484,414,2.467,415,2.067,416,2.224,417,3.046,418,2.751,419,2.876,420,2.316,421,1.089,422,2.342,423,2.905,424,1.274,425,1.871,426,1.896,427,1.83,428,2.721,429,1.38,430,2.347,431,1.871,432,1.871,433,2.316,434,2.224,435,1.988,436,2.199,437,1.636,438,1.449,439,1.896,440,1.804,441,1.683,442,1.995,443,1.514,444,1.274,445,1.38,446,1.207,447,1.146,448,2.107,449,1.274,450,1.514,451,1.514,452,2.158,453,1.207,454,1.773,455,2.094,456,1.514,457,2.482,458,1.089,459,1.274,460,1.514,461,1.773,462,1.488,463,1.346,464,1.036,465,1.346,466,1.089,467,1.683,468,1.146,469,1.089,470,1.346,471,1.514,472,1.514,473,1.146,474,1.426,475,1.514,476,1.514,477,2.075,478,1.274,479,1.426,480,1.514,481,1.636,482,1.514,483,1.207,484,1.514,485,1.207,486,1.274,487,1.514,488,1.514,489,2.224,490,1.514,491,1.426,492,1.426,493,1.977,494,1.274,495,1.426,496,1.146,497,2.094,498,2.094,499,1.426,500,1.089]],["title/components/CodeEditorComponent.html",[0,0.465,181,1.083]],["body/components/CodeEditorComponent.html",[0,0.71,1,0.697,2,0.616,3,0.339,4,0.731,5,0.844,6,0.844,7,0.244,9,0.481,16,2.199,17,0.711,21,0.844,22,2.342,23,2.232,25,1.274,27,1.274,29,1.503,37,1.64,39,3.11,42,2.054,44,1.477,47,0.405,48,0.813,56,1.45,62,0.548,63,0.019,64,0.653,65,0.803,66,0.736,67,0.727,68,0.856,71,1.346,72,0.691,73,1.693,83,0.339,84,0.521,94,0.299,95,0.423,96,0.604,102,1.004,108,1.728,131,0.906,137,0.902,139,1.995,140,3.011,146,1.445,150,1.934,153,1.361,155,1.15,168,0.665,169,1.2,170,1.63,171,1.274,172,1.515,173,0.844,176,0.844,177,0.697,178,0.844,179,0.447,180,0.844,181,1.412,182,1.12,183,0.844,184,0.697,185,0.844,186,0.665,187,1.274,188,0.697,189,0.844,190,0.665,191,0.471,192,0.844,193,0.697,194,0.844,195,0.447,196,0.844,197,0.697,198,0.844,199,0.697,200,0.844,201,0.697,202,0.844,203,0.634,204,0.844,205,0.697,206,0.805,207,0.844,208,0.447,209,0.665,210,0.844,211,0.01,212,0.011,280,3.011,285,0.424,289,1.93,298,1.535,301,1.329,315,1.104,320,2.524,370,1.394,375,1.78,387,3.011,403,1.152,415,1.593,425,1.728,427,1.214,429,2.003,435,1.886,440,2.673,441,2.97,445,1.274,446,2.48,447,1.554,452,1.214,469,1.477,470,1.826,473,2.086,477,1.274,501,3.173,502,5.864,503,5.233,504,2.236,505,2.524,506,5.268,507,4.065,508,3.926,509,3.926,510,5.268,511,5.945,512,5.268,513,5.268,514,5.268,515,5.11,516,3.926,517,4.729,518,3.926,519,3.926,520,2.74,521,4.729,522,5.945,523,3.548,524,4.625,525,4.729,526,5.268,527,3.926,528,5.654,529,2.601,530,2.474,531,2.189,532,2.74,533,2.601,534,2.601,535,3.374,536,3.926,537,3.926,538,3.926,539,3.926,540,2.601,541,3.011,542,1.554,543,5.931,544,5.268,545,3.04,546,3.926,547,2.601,548,5.268,549,2.74,550,3.011,551,3.926,552,3.926,553,2.74,554,2.716,555,3.011,556,3.926,557,3.926,558,3.374,559,3.926,560,3.374,561,2.74,562,3.926,563,2.601,564,3.011,565,2.601,566,2.937,567,4.528,568,3.677,569,1.815,570,2.74,571,2.601,572,3.926,573,3.926,574,2.601,575,2.74,576,3.926,577,2.601,578,2.601,579,2.601,580,3.926,581,2.601,582,2.601,583,2.601,584,1.672,585,1.995,586,2.601,587,2.601,588,2.601,589,2.601,590,1.995,591,2.601,592,2.601,593,2.601,594,2.601,595,2.601,596,3.926,597,2.601,598,2.601,599,2.601,600,2.601,601,1.45,602,2.601,603,2.601,604,2.601,605,2.601,606,1.815,607,1.815,608,2.601,609,2.601,610,2.601,611,4.729,612,3.926,613,2.601,614,2.601,615,2.601,616,2.601,617,2.601,618,2.601,619,2.601,620,2.74,621,3.926,622,3.374,623,2.601,624,2.601,625,2.236,626,2.601,627,3.926,628,2.601,629,2.601,630,2.601,631,2.601,632,2.601,633,4.729,634,2.601,635,3.926,636,3.926,637,3.926]],["title/interfaces/Course.html",[72,0.59,407,0.77]],["body/interfaces/Course.html",[2,0.351,3,0.351,7,0.253,9,0.765,12,1.682,17,1.04,45,0.722,47,0.493,48,0.463,63,0.019,64,0.557,65,0.96,66,0.968,67,0.984,72,1.09,77,0.656,78,1.332,83,0.525,94,0.739,95,0.291,102,0.768,131,0.693,135,1.327,137,1.015,138,0.719,146,0.808,155,1.04,163,1.777,169,1.091,179,0.693,182,0.746,191,1.091,195,0.83,208,0.463,211,0.012,212,0.01,249,1.067,266,2.1,285,0.439,300,2.015,301,1.846,305,1.777,315,1.134,322,1.247,356,1.374,367,2.513,370,1.581,371,1.253,382,1.067,389,0.689,390,2.513,391,0.918,402,2.127,403,1.398,407,1.337,408,1.327,409,1.41,410,0.965,411,1.629,412,1.443,413,2.391,414,1.682,415,2.072,416,1.41,417,2.968,418,2.494,419,2.802,420,2.237,421,1.014,422,2.273,423,2.805,424,1.186,425,1.774,426,1.818,427,1.776,428,2.651,429,1.309,430,2.299,431,1.774,432,1.774,433,2.237,434,2.109,435,2.157,436,2.123,437,1.568,438,1.374,439,1.818,440,1.729,441,1.597,442,1.913,443,1.41,444,1.186,445,1.309,446,1.124,447,1.067,448,2.279,449,1.186,450,1.41,451,1.41,452,2.231,453,1.124,454,1.682,455,1.986,456,1.41,457,2.38,458,1.014,459,1.186,460,1.41,461,2.015,462,1.792,463,1.253,464,0.965,465,1.253,466,1.014,467,1.597,468,1.067,469,1.014,470,1.253,471,1.41,472,1.41,473,1.067,474,1.327,475,1.41,476,1.41,477,2.027,478,1.186,479,1.327,480,1.41,481,1.864,482,1.41,483,1.124,484,1.41,485,1.124,486,1.774,487,2.805,488,2.805,489,3.152,490,2.109,491,1.986,492,1.986,493,2.802,494,1.186,495,1.986,496,1.597,497,2.968,498,2.968,499,1.986,500,1.517]],["title/components/CourseChipComponent.html",[0,0.465,184,1.083]],["body/components/CourseChipComponent.html",[0,0.81,1,0.904,2,0.439,3,0.439,4,0.948,5,1.095,6,1.095,7,0.317,9,0.673,16,2.92,21,1.095,22,2.423,23,2.309,25,1.541,27,1.541,29,1.337,32,2.366,34,2.571,37,1.586,47,0.406,48,0.944,60,2.338,62,0.999,63,0.019,64,0.958,65,0.715,66,0.715,68,0.859,71,1.403,72,1.113,83,0.776,84,0.676,89,1.269,92,1.484,94,0.388,95,0.364,96,1.275,98,1.336,102,0.904,117,5.598,119,4.08,131,1.235,137,1.028,142,2.207,150,1.662,155,0.994,168,0.862,169,0.859,170,1.468,171,1.541,172,1.683,173,1.095,176,1.095,177,0.904,178,1.095,179,0.58,180,1.095,181,0.904,182,0.521,183,1.095,184,1.597,185,1.095,186,0.862,187,1.541,188,0.904,189,1.095,190,0.862,191,0.611,192,1.095,193,0.904,194,1.095,195,0.58,196,1.095,197,0.904,198,1.095,199,0.904,200,1.095,201,0.904,202,1.095,203,0.822,204,1.095,205,0.904,206,1.044,207,1.095,208,0.58,209,0.862,210,1.095,211,0.011,212,0.016,285,0.55,286,1.699,289,1.541,298,1.934,322,2.113,324,1.484,375,1.786,377,2.579,390,1.98,391,1.617,402,1.757,407,0.643,415,1.746,417,2.935,418,2.92,429,1.934,440,2.133,452,1.843,462,0.904,473,1.879,481,2.038,493,2.554,638,4.67,639,5.132,640,2.9,641,4.746,642,4.746,643,4.746,644,6.513,645,5.122,646,5.958,647,1.881,648,4.746,649,3.373,650,3.83,651,4.746,652,4.746,653,4.746,654,4.746,655,3.373,656,3.641,657,3.373,658,3.373,659,2.9,660,3.373,661,3.373,662,3.373,663,3.373,664,3.373,665,5.958,666,4.746,667,2.9,668,4.746,669,3.641,670,3.373,671,3.373,672,3.373,673,3.373,674,3.373,675,3.373,676,3.373,677,2.013,678,3.373,679,2.9,680,1.765,681,2.354,682,2.9,683,4.08,684,3.641]],["title/components/CourseSelectionComponent.html",[0,0.465,186,1.032]],["body/components/CourseSelectionComponent.html",[0,0.624,1,0.635,2,0.309,3,0.309,4,0.666,5,0.769,6,0.769,7,0.42,9,0.615,13,2.553,17,0.662,21,0.769,22,2.309,23,2.2,25,1.187,27,1.187,29,1.088,32,2.262,33,3.039,37,1.683,44,1.376,47,0.249,48,0.407,53,1.321,59,2.199,61,1.141,62,1.258,63,0.019,64,0.825,65,0.842,66,0.653,67,0.327,68,1.082,69,1.45,70,1.942,71,1.729,72,1.116,73,1.309,74,2.626,75,2.199,76,2.039,77,0.891,83,0.653,84,0.475,89,0.892,90,1.415,94,0.273,95,0.256,96,1.588,97,1.321,98,2.735,102,0.697,108,2.387,131,1.176,136,1.818,137,0.793,142,2.523,146,0.475,150,2.199,154,2.805,155,0.809,163,1.762,168,0.606,169,0.909,170,2.066,171,1.187,172,1.454,173,0.769,176,0.769,177,0.635,178,0.769,179,0.407,180,0.769,181,0.635,182,0.69,183,0.769,184,0.635,185,0.769,186,1.283,187,1.187,188,0.635,189,0.769,190,0.606,191,0.429,192,0.769,193,0.635,194,0.769,195,0.407,196,0.769,197,0.635,198,0.769,199,0.635,200,0.769,201,0.635,202,0.769,203,0.577,204,0.769,205,0.635,206,0.733,207,0.769,208,0.407,209,0.606,210,0.769,211,0.016,212,0.013,266,0.733,285,0.386,286,1.599,289,1.187,298,1.187,301,1.525,305,1.078,315,1.028,329,1.654,352,1.415,369,3.605,375,0.892,377,1.448,387,1.818,403,1.455,407,0.452,411,1.088,415,1.346,427,1.131,429,2.168,430,1.599,435,1.797,448,1.522,452,1.773,469,1.376,481,0.769,491,1.801,492,1.801,493,2.335,495,2.473,497,3.242,498,3.29,523,4.346,554,2.845,555,2.805,568,4.863,569,3.786,570,4.001,590,1.818,625,2.037,638,4.775,669,1.818,683,3.143,684,2.805,685,5.248,686,1.818,687,2.805,688,3.657,689,3.143,690,3.143,691,6.466,692,5.02,693,5.424,694,6.17,695,5.424,696,4.465,697,3.851,698,3.657,699,3.657,700,2.037,701,3.657,702,2.37,703,2.553,704,3.657,705,3.657,706,2.805,707,5.02,708,2.37,709,3.238,710,2.351,711,5.02,712,2.553,713,3.657,714,2.37,715,6.17,716,3.657,717,2.553,718,3.143,719,2.37,720,6.17,721,2.37,722,2.37,723,2.37,724,2.37,725,2.37,726,2.37,727,2.37,728,2.37,729,2.37,730,2.37,731,2.37,732,2.37,733,2.037,734,2.37,735,2.37,736,1.654,737,1.524,738,2.37,739,4.465,740,2.37,741,3.657,742,2.37,743,1.321,744,3.657,745,1.654,746,2.37,747,2.37,748,2.37,749,2.37,750,2.37,751,2.37,752,1.818,753,2.37,754,2.37,755,2.37,756,3.657,757,2.037,758,1.654,759,1.415,760,2.37,761,2.37,762,2.37,763,4.465,764,2.37,765,2.37,766,3.657,767,3.657,768,2.37,769,2.37,770,2.37,771,3.657,772,2.37,773,3.657,774,2.37,775,2.37,776,2.37,777,3.425,778,2.37,779,1.801,780,3.657,781,3.657,782,3.657,783,3.657,784,5.02,785,3.657,786,3.657,787,3.657,788,3.657,789,3.657,790,3.657,791,3.657]],["title/injectables/CourseService.html",[32,1.311,277,1.685]],["body/injectables/CourseService.html",[2,0.341,3,0.341,7,0.246,9,0.731,13,2.756,17,0.715,24,1.684,29,1.382,32,1.282,37,1.715,44,1.486,49,3.028,54,2.766,60,2.604,62,1.341,63,0.019,64,0.899,65,0.776,66,0.889,67,0.879,68,0.957,69,1.282,70,1.413,71,1.766,72,1.118,73,1.413,83,0.618,84,0.525,94,0.302,95,0.612,96,1.512,102,0.752,105,1.461,108,1.737,111,2.538,131,1.282,137,1.069,142,1.836,146,0.791,155,1.202,170,1.636,182,0.405,186,1.351,211,0.01,212,0.01,269,2.01,277,1.981,285,0.427,289,1.282,301,1.335,307,2.538,315,1.11,322,2.349,375,2.135,377,1.563,391,1.345,397,3.028,398,4.056,402,1.824,403,1.288,407,0.499,411,0.962,412,2.377,415,1.901,420,1.093,421,0.986,427,0.811,430,2.414,435,1.413,437,1.841,445,2.067,448,1.345,461,1.647,462,1.779,463,2.209,464,1.7,465,2.209,466,1.788,481,2.218,494,1.153,496,2.094,530,2.766,531,1.461,553,1.829,554,1.153,606,3.69,656,4.056,659,3.393,679,2.252,680,1.371,681,3.69,682,2.252,697,2.01,703,3.69,736,1.829,752,4.056,777,4.573,792,2.252,793,3.948,794,3.948,795,3.948,796,3.028,797,5.707,798,5.287,799,5.287,800,5.287,801,5.287,802,3.948,803,3.948,804,3.948,805,3.948,806,3.948,807,3.948,808,3.948,809,2.62,810,3.948,811,2.62,812,3.948,813,3.948,814,3.948,815,2.62,816,3.948,817,3.399,818,3.558,819,3.948,820,2.62,821,4.573,822,5.287,823,5.287,824,4.056,825,3.948,826,2.62,827,4.545,828,3.948,829,2.62,830,3.948,831,3.948,832,2.62,833,3.948,834,2.62,835,2.62,836,2.62,837,2.62,838,2.62,839,2.252,840,3.948,841,2.62,842,2.62,843,2.252,844,2.62,845,2.62,846,1.829,847,4.75,848,2.62,849,2.62,850,2.62,851,2.62,852,2.62,853,2.252,854,2.62,855,2.62,856,3.948,857,2.62,858,2.62,859,4.75,860,5.287,861,2.62,862,2.62,863,3.393,864,2.62,865,2.62,866,2.252,867,2.62,868,2.62,869,2.62,870,2.62,871,2.252,872,2.252,873,2.62,874,2.62,875,2.62,876,3.948,877,3.959,878,3.393,879,2.252,880,2.62,881,4.75,882,2.252,883,4.545,884,2.756,885,3.948,886,2.62,887,2.01,888,2.252]],["title/components/CourseSidebarComponent.html",[0,0.465,188,1.083]],["body/components/CourseSidebarComponent.html",[0,0.753,1,0.916,2,0.445,3,0.445,4,0.961,5,1.11,6,1.11,7,0.321,9,0.678,17,1.085,18,1.998,21,1.11,22,2.427,23,2.32,25,1.555,27,1.555,29,1.347,31,3.376,32,2.337,34,2.579,37,1.537,45,1.284,47,0.408,48,0.823,54,3.135,61,1.224,62,1.009,63,0.019,64,0.827,65,0.72,66,0.72,67,0.661,68,1.216,69,2.048,70,2.404,71,1.823,72,1.126,78,1.059,83,0.851,84,0.685,88,1.353,89,1.286,92,1.504,94,0.393,95,0.517,96,1.465,98,2.19,102,0.913,113,2.938,114,5.773,115,2.938,116,2.938,131,1.03,137,0.922,146,1.201,152,4.117,155,1.184,168,0.873,169,0.867,170,1.711,171,1.555,172,1.606,173,1.11,176,1.11,177,0.916,178,1.11,179,0.588,180,1.11,181,0.916,182,0.528,183,1.11,184,0.916,185,1.11,186,1.612,187,1.555,188,1.606,189,1.11,190,0.873,191,0.619,192,1.11,193,0.916,194,1.11,195,0.588,196,1.11,197,0.916,198,1.11,199,0.916,200,1.11,201,0.916,202,1.11,203,0.833,204,1.11,205,0.916,206,1.057,207,1.11,208,0.588,209,0.873,210,1.11,211,0.012,212,0.012,285,0.557,286,1.715,289,1.555,297,5.017,324,1.504,367,1.998,373,3.904,375,2.081,377,2.59,389,1.224,402,1.412,403,1.167,407,0.651,530,2.893,535,4.753,638,4.565,647,1.906,687,4.242,843,4.117,889,5.017,890,2.938,891,4.79,892,4.79,893,5.993,894,5.993,895,4.79,896,5.993,897,3.418,898,3.418,899,3.418,900,3.418,901,2.671,902,3.418,903,2.197,904,3.418,905,4.79,906,3.418,907,6.31,908,3.418,909,2.938,910,5.53,911,4.79,912,3.418,913,3.418,914,2.622,915,3.418,916,3.418]],["title/interfaces/DiscoverOption.html",[407,0.77,426,1.52]],["body/interfaces/DiscoverOption.html",[2,0.363,3,0.363,7,0.262,9,0.838,12,2.058,17,1.105,45,0.748,47,0.493,48,0.48,63,0.019,64,0.385,65,0.969,66,0.972,67,1.001,72,1.032,77,0.68,78,1.435,83,0.539,94,0.747,95,0.301,102,0.789,131,0.48,135,1.375,137,1.023,138,0.747,146,0.559,155,0.893,163,1.221,169,1.105,179,0.712,182,0.639,191,0.75,195,0.848,208,0.48,211,0.012,212,0.01,249,1.106,266,2.117,285,0.455,300,1.727,301,1.776,305,1.221,315,1.387,322,1.281,356,1.411,367,1.727,370,1.609,371,1.298,382,1.106,389,0.713,390,2.546,391,0.952,402,2.138,403,1.539,407,1.356,408,1.375,409,1.461,410,1,411,1.687,412,1.482,413,2.471,414,1.727,415,2.068,416,1.461,417,2.87,418,2.71,419,2.71,420,2.276,421,1.051,422,2.308,423,3.049,424,1.822,425,2.171,426,2.054,427,2.05,428,2.855,429,1.602,430,2.479,431,2.171,432,2.171,433,2.707,434,3.049,435,2.086,436,2.569,437,1.602,438,1.411,439,1.857,440,1.766,441,1.639,442,1.954,443,1.461,444,1.229,445,1.344,446,1.165,447,1.106,448,2.08,449,1.229,450,1.461,451,1.461,452,2.142,453,1.165,454,1.727,455,2.039,456,1.461,457,2.43,458,1.051,459,1.229,460,1.461,461,1.727,462,1.463,463,1.298,464,1,465,1.298,466,1.051,467,1.639,468,1.106,469,1.051,470,1.298,471,1.461,472,1.461,473,1.106,474,1.375,475,1.461,476,1.461,477,2.051,478,1.229,479,1.375,480,1.461,481,1.602,482,1.461,483,1.165,484,1.461,485,1.165,486,1.229,487,1.461,488,1.461,489,2.166,490,1.461,491,1.375,492,1.375,493,1.925,494,1.229,495,1.375,496,1.106,497,2.039,498,2.039,499,1.375,500,1.051]],["title/interfaces/EditorTab.html",[407,0.77,442,1.6]],["body/interfaces/EditorTab.html",[2,0.379,3,0.379,7,0.273,9,0.784,12,1.78,17,1.122,45,0.78,47,0.494,48,0.5,63,0.019,64,0.402,65,0.926,66,0.939,67,1.001,72,1.039,77,0.709,78,1.37,83,0.556,94,0.756,95,0.314,102,0.813,131,0.5,135,1.433,137,1.039,138,0.737,146,0.583,155,0.915,163,1.258,169,1.189,179,0.734,182,0.781,191,0.773,195,0.869,208,0.5,211,0.012,212,0.01,249,1.152,266,2.136,285,0.474,300,1.78,301,1.8,305,1.258,315,1.2,322,1.32,356,1.454,367,1.78,370,1.641,371,1.353,382,1.152,389,0.743,390,2.67,391,0.992,402,2.151,403,1.444,407,1.366,408,1.433,409,1.522,410,1.042,411,1.659,412,1.528,413,2.486,414,1.78,415,2.065,416,1.522,417,2.92,418,2.589,419,2.757,420,2.322,421,1.095,422,2.347,423,2.912,424,1.28,425,1.878,426,1.902,427,1.916,428,2.726,429,1.385,430,2.351,431,1.878,432,1.878,433,2.322,434,2.233,435,1.993,436,2.204,437,1.641,438,1.454,439,1.902,440,2.122,441,2.001,442,2.204,443,2.233,444,2.45,445,1.641,446,1.78,447,2.204,448,2.111,449,1.28,450,1.522,451,1.522,452,2.16,453,1.214,454,1.78,455,2.102,456,1.522,457,2.489,458,1.095,459,1.28,460,1.522,461,1.78,462,1.492,463,1.353,464,1.042,465,1.353,466,1.095,467,1.69,468,1.152,469,1.095,470,1.353,471,1.522,472,1.522,473,1.152,474,1.433,475,1.522,476,1.522,477,2.078,478,1.28,479,1.433,480,1.522,481,1.641,482,1.522,483,1.214,484,1.522,485,1.214,486,1.28,487,1.522,488,1.522,489,2.233,490,1.522,491,1.433,492,1.433,493,1.985,494,1.28,495,1.433,496,1.152,497,2.102,498,2.102,499,1.433,500,1.095]],["title/components/ErrorPageComponent.html",[0,0.465,190,1.032]],["body/components/ErrorPageComponent.html",[0,0.799,1,1.214,2,0.59,3,0.59,4,1.273,5,1.47,6,1.47,7,0.426,21,1.47,22,2.497,23,2.38,25,1.878,27,1.878,29,1.103,33,3.495,37,1.103,47,0.394,48,0.779,61,1.478,62,0.954,63,0.019,64,0.88,65,0.59,66,0.753,69,1.878,72,0.931,78,1.279,83,0.753,84,0.907,90,2.703,94,0.521,95,0.489,97,2.525,137,1.014,138,0.666,166,3.225,168,1.157,169,1.047,170,1.789,171,1.878,172,1.8,173,1.47,176,1.47,177,1.214,178,1.47,179,0.779,180,1.47,181,1.214,182,0.699,183,1.47,184,1.214,185,1.47,186,1.157,187,1.878,188,1.214,189,1.47,190,1.716,191,1.355,192,1.47,193,1.214,194,1.47,195,0.779,196,1.47,197,1.214,198,1.47,199,1.214,200,1.47,201,1.214,202,1.47,203,1.103,204,1.47,205,1.214,206,1.401,207,1.47,208,0.779,209,1.157,210,1.47,211,0.014,212,0.014,261,4.687,322,1.789,350,3.225,411,1.409,700,3.893,917,3.893,918,5.784,919,5.784,920,4.529,921,6.715,922,5.784,923,4.529,924,5.784,925,5.784,926,3.225,927,4.437,928,4.529]],["title/interfaces/FixOption.html",[407,0.77,439,1.52]],["body/interfaces/FixOption.html",[2,0.363,3,0.363,7,0.262,9,0.838,12,2.058,17,1.105,45,0.748,47,0.493,48,0.48,63,0.019,64,0.385,65,0.969,66,0.967,67,1.001,72,1.032,77,0.68,78,1.435,83,0.539,94,0.747,95,0.301,102,0.789,131,0.48,135,1.375,137,1.032,138,0.727,146,0.559,155,0.893,163,1.221,169,1.105,179,0.712,182,0.639,191,0.75,195,0.848,208,0.48,211,0.012,212,0.01,249,1.106,266,2.117,285,0.455,300,1.727,301,1.776,305,1.221,315,1.387,322,1.281,356,1.411,367,1.727,370,1.718,371,1.298,382,1.106,389,0.713,390,2.546,391,0.952,402,2.138,403,1.539,407,1.356,408,1.375,409,1.461,410,1,411,1.687,412,1.482,413,2.471,414,1.727,415,2.068,416,1.461,417,2.87,418,2.71,419,2.71,420,2.276,421,1.051,422,2.308,423,3.049,424,1.229,425,2.171,426,1.857,427,2.05,428,2.855,429,1.602,430,2.479,431,2.171,432,2.171,433,2.707,434,3.049,435,2.086,436,2.569,437,1.771,438,1.681,439,2.054,440,1.766,441,1.639,442,1.954,443,1.461,444,1.229,445,1.344,446,1.165,447,1.106,448,2.08,449,1.229,450,1.461,451,1.461,452,2.142,453,1.165,454,1.727,455,2.039,456,1.461,457,2.43,458,1.051,459,1.229,460,1.461,461,1.727,462,1.463,463,1.298,464,1,465,1.298,466,1.051,467,1.639,468,1.106,469,1.051,470,1.298,471,1.461,472,1.461,473,1.106,474,1.375,475,1.461,476,1.461,477,2.051,478,1.229,479,1.375,480,1.461,481,1.602,482,1.461,483,1.165,484,1.461,485,1.165,486,1.229,487,1.461,488,1.461,489,2.166,490,1.461,491,1.375,492,1.375,493,1.925,494,1.229,495,1.375,496,1.106,497,2.039,498,2.039,499,1.375,500,1.051]],["title/modules/HomePageModule.html",[213,1.446,223,2.597]],["body/modules/HomePageModule.html",[2,0.632,3,0.632,7,0.456,47,0.33,55,2.896,63,0.019,66,0.632,68,0.879,83,0.984,84,0.972,88,1.921,94,0.793,95,0.523,120,1.826,168,1.24,177,2.035,179,1.241,190,1.94,191,0.879,203,1.759,208,1.241,211,0.015,212,0.015,213,2.163,215,2.706,216,4.229,217,3.119,223,4.944,226,3.884,231,4.217,232,4.217,237,2.024,250,4.171,256,3.722,257,3.387,258,3.722,260,3.387,261,3.387,262,4.171,350,2.706,380,2.539,421,1.826,903,3.119,929,4.171,930,4.171,931,4.171,932,4.171,933,4.634,934,4.634,935,4.852,936,4.852,937,5.655,938,5.655]],["title/interfaces/Issue.html",[137,0.59,407,0.77]],["body/interfaces/Issue.html",[2,0.357,3,0.357,7,0.257,9,0.77,12,1.703,17,1.047,45,0.735,47,0.492,48,0.471,63,0.019,64,0.378,65,0.95,66,0.965,67,1.008,72,1.028,77,0.668,78,1.341,83,0.532,94,0.743,95,0.296,102,0.778,131,0.471,135,1.35,137,1.067,138,0.743,146,0.549,155,0.979,163,1.204,169,1.234,179,0.702,182,0.631,191,0.739,195,0.93,208,0.471,211,0.013,212,0.01,249,1.085,266,2.108,285,0.447,300,1.703,301,1.626,305,1.204,315,1.148,322,1.875,356,2.066,367,1.703,370,1.594,371,1.899,382,1.085,389,1.043,390,2.751,391,0.934,402,2.153,403,1.635,407,1.341,408,1.35,409,1.434,410,0.981,411,1.714,412,1.462,413,2.464,414,1.703,415,2.061,416,1.434,417,2.986,418,2.515,419,2.689,420,2.8,421,1.031,422,2.732,423,2.829,424,1.206,425,1.797,426,1.836,427,1.789,428,2.84,429,1.325,430,2.31,431,1.797,432,1.797,433,2.256,434,2.136,435,1.936,436,2.141,437,1.755,438,1.392,439,2.035,440,1.747,441,1.617,442,1.932,443,1.434,444,1.206,445,1.325,446,1.143,447,1.085,448,2.066,449,1.206,450,1.434,451,1.434,452,2.134,453,1.143,454,1.703,455,2.011,456,1.434,457,2.663,458,1.031,459,1.206,460,1.434,461,2.035,462,1.55,463,1.899,464,1.462,465,1.899,466,1.537,467,1.932,468,1.617,469,1.537,470,1.899,471,2.136,472,2.829,473,1.617,474,2.011,475,2.136,476,2.829,477,2.039,478,1.206,479,1.35,480,1.434,481,1.584,482,1.434,483,1.143,484,1.434,485,1.143,486,1.206,487,1.434,488,1.434,489,2.136,490,1.434,491,1.35,492,1.35,493,1.899,494,1.206,495,1.35,496,1.085,497,2.011,498,2.011,499,1.35,500,1.031]],["title/components/IssueCardComponent.html",[0,0.465,193,1.083]],["body/components/IssueCardComponent.html",[0,0.819,1,0.904,2,0.439,3,0.439,4,0.948,5,1.095,6,1.095,7,0.56,9,0.582,19,4.08,21,1.095,22,2.423,23,2.309,25,1.541,27,1.541,29,1.337,32,2.331,37,1.63,47,0.323,48,0.944,49,3.641,62,0.71,63,0.019,64,0.758,65,0.935,66,0.618,67,0.899,68,0.994,69,1.782,70,2.248,71,1.403,72,0.952,83,0.715,84,0.676,89,1.269,94,0.388,95,0.592,96,0.783,102,1.135,125,2.088,131,1.079,137,1.04,138,0.799,168,0.862,169,0.859,170,2.015,171,1.541,172,1.597,173,1.095,176,1.095,177,0.904,178,1.095,179,0.58,180,1.095,181,0.904,182,0.521,183,1.095,184,0.904,185,1.095,186,0.862,187,1.541,188,0.904,189,1.095,190,0.862,191,0.611,192,1.095,193,1.597,194,1.095,195,0.58,196,1.095,197,0.904,198,1.095,199,1.472,200,1.095,201,0.904,202,1.095,203,0.822,204,1.095,205,0.904,206,1.044,207,1.095,208,0.58,209,0.862,210,1.095,211,0.011,212,0.011,213,2.133,280,3.641,285,0.55,286,1.699,289,1.541,320,3.83,324,1.484,375,1.269,389,1.213,391,1.617,402,1.619,407,0.643,411,1.451,412,2.519,413,1.617,415,0.904,429,1.782,445,1.541,452,1.468,453,2.619,454,1.98,461,1.98,462,1.886,477,2.038,479,2.935,481,1.541,483,1.98,501,3.177,530,2.483,549,3.313,554,2.088,568,4.159,569,2.354,570,3.313,647,1.881,684,3.641,718,5.397,818,3.557,821,3.641,827,4.08,939,4.077,940,5.24,941,2.9,942,6.279,943,4.746,944,4.746,945,6.279,946,6.513,947,5.958,948,4.746,949,3.373,950,3.373,951,3.373,952,4.746,953,4.746,954,3.373,955,4.746,956,3.051,957,5.491,958,3.313,959,3.373,960,4.746,961,3.373,962,3.373,963,3.373,964,3.373,965,4.159,966,5.122,967,3.313,968,3.373,969,3.373,970,3.373,971,3.373,972,3.373,973,3.373,974,3.373,975,3.373,976,3.373,977,3.373,978,3.373,979,4.08,980,4.08,981,3.641]],["title/components/IssueContainerComponent.html",[0,0.465,195,0.694]],["body/components/IssueContainerComponent.html",[0,0.693,1,0.648,2,0.315,3,0.315,4,1.271,5,0.785,6,0.785,7,0.227,9,0.671,21,0.785,22,2.316,23,2.23,25,1.206,27,1.206,29,1.102,32,2.016,34,2.265,37,1.611,44,1.398,47,0.393,48,0.416,54,1.943,61,0.949,62,1.068,63,0.019,64,0.857,65,0.713,66,0.829,67,0.857,68,1.046,69,1.647,70,2.223,71,0.949,72,0.879,78,1.122,83,0.713,84,0.485,89,0.91,92,1.064,94,0.278,95,0.724,96,1.342,97,1.349,98,0.958,102,0.708,131,1.227,137,1.107,142,1.125,146,1.017,150,1.191,153,1.265,155,0.919,168,0.618,169,0.919,170,1.788,171,1.206,172,1.36,173,0.785,176,0.785,177,0.648,178,0.785,179,0.416,180,0.785,181,0.648,182,0.699,183,0.785,184,0.648,185,0.785,186,0.618,187,1.206,188,0.648,189,0.785,190,0.618,191,0.438,192,0.785,193,0.648,194,0.785,195,0.872,196,0.785,197,0.648,198,0.785,199,0.648,200,0.785,201,0.648,202,0.785,203,0.589,204,0.785,205,0.648,206,0.748,207,0.785,208,0.416,209,0.618,210,0.785,211,0.009,212,0.009,281,2.071,285,0.942,289,1.206,298,1.468,301,1.271,320,2.388,322,2.076,352,3.029,356,1.266,364,3.821,369,2.071,370,1.496,375,1.702,389,1.477,391,1.266,395,1.688,397,2.85,398,2.85,402,1.614,403,1.102,407,0.461,411,1.584,412,1.33,413,1.541,415,1.743,419,1.728,422,0.958,427,1.149,428,2.233,429,1.468,430,1.619,435,1.817,437,2.206,439,0.91,440,1.817,441,2.288,445,1.647,447,0.958,448,1.266,457,1.191,461,1.55,463,2.36,464,2.28,465,2.962,466,2.265,470,2.103,477,1.206,481,1.206,499,1.83,501,3.121,507,3.888,515,4.362,531,1.349,541,2.85,545,2.388,554,1.635,566,2.071,568,3.542,569,1.688,570,2.593,606,2.593,680,3.401,709,3.029,736,1.688,779,1.83,818,2.217,871,3.193,872,3.193,878,2.079,882,2.079,883,2.079,887,1.855,909,3.193,926,2.071,927,2.85,939,4.006,981,2.85,982,5.148,983,2.079,984,3.715,985,3.715,986,5.074,987,5.074,988,3.715,989,5.074,990,3.715,991,3.715,992,5.074,993,3.715,994,5.779,995,2.419,996,2.419,997,2.419,998,3.715,999,1.83,1000,3.715,1001,3.715,1002,5.475,1003,2.419,1004,5.475,1005,2.419,1006,2.419,1007,3.715,1008,3.715,1009,2.419,1010,3.715,1011,3.715,1012,3.715,1013,3.715,1014,2.419,1015,5.074,1016,2.419,1017,3.715,1018,3.193,1019,3.193,1020,3.715,1021,2.593,1022,2.419,1023,2.419,1024,2.419,1025,2.419,1026,2.419,1027,2.419,1028,2.419,1029,2.419,1030,2.419,1031,2.419,1032,4.523,1033,2.419,1034,1.855,1035,2.419,1036,2.419,1037,2.419,1038,2.419,1039,2.419,1040,2.419,1041,2.419,1042,2.419,1043,2.419,1044,2.419,1045,6.369,1046,3.715,1047,2.419,1048,2.419,1049,2.419,1050,2.419,1051,2.419,1052,2.419,1053,3.193,1054,3.193,1055,5.074,1056,5.074]],["title/components/IssueDetailsComponent.html",[0,0.465,197,1.083]],["body/components/IssueDetailsComponent.html",[0,0.789,1,1.166,2,0.566,3,0.566,4,1.223,5,1.412,6,1.412,7,0.409,9,0.691,21,1.412,22,2.488,23,2.371,25,1.83,27,1.83,29,1.523,32,2.428,37,1.373,47,0.384,48,0.748,62,0.916,63,0.019,64,0.863,65,0.734,66,0.734,67,0.778,68,1.132,69,2.03,70,2.239,71,1.751,72,1.026,83,0.734,84,0.872,89,1.637,94,0.501,95,0.469,96,1.01,102,1.074,137,1.107,155,1.021,168,1.112,169,1.021,170,1.744,171,1.83,172,1.773,173,1.412,176,1.412,177,1.166,178,1.412,179,0.748,180,1.412,181,1.166,182,0.672,183,1.412,184,1.166,185,1.412,186,1.112,187,1.83,188,1.166,189,1.412,190,1.112,191,0.788,192,1.412,193,1.166,194,1.412,195,0.969,196,1.412,197,1.773,198,1.412,199,1.166,200,1.412,201,1.166,202,1.412,203,1.06,204,1.412,205,1.166,206,1.346,207,1.412,208,0.748,209,1.112,210,1.412,211,0.014,212,0.014,285,0.709,286,2.018,324,1.915,356,1.921,389,1.44,402,1.662,411,1.373,462,1.511,485,2.351,501,2.908,647,2.426,939,3.733,1057,4.797,1058,3.74,1059,5.637,1060,5.637,1061,4.351,1062,4.351,1063,4.351,1064,4.845,1065,5.637]],["title/interfaces/IssueItem.html",[407,0.77,462,1.083]],["body/interfaces/IssueItem.html",[2,0.368,3,0.368,7,0.266,9,0.777,12,1.744,17,1.061,45,0.758,47,0.494,48,0.719,63,0.019,64,0.39,65,0.941,66,0.935,67,0.991,72,1.042,77,0.689,78,1.356,83,0.544,94,0.75,95,0.305,102,0.797,131,0.486,135,1.393,137,1.067,138,0.766,146,0.567,155,0.9,163,1.233,169,1.111,179,0.719,182,0.646,191,0.757,195,0.855,208,0.486,211,0.012,212,0.01,249,1.12,266,2.207,285,0.461,300,1.744,301,1.647,305,1.233,315,1.175,322,1.293,356,1.425,367,1.744,370,1.619,371,1.316,382,1.12,389,0.723,390,2.558,391,0.964,402,2.179,403,1.427,407,1.349,408,1.393,409,1.48,410,1.013,411,1.648,412,1.496,413,2.476,414,1.744,415,2.063,416,1.48,417,3.021,418,2.554,419,2.951,420,2.291,421,1.065,422,2.32,423,2.873,424,1.245,425,1.839,426,1.871,427,1.813,428,2.699,429,1.357,430,2.332,431,1.839,432,1.839,433,2.291,434,2.187,435,1.966,436,2.174,437,1.614,438,1.694,439,1.871,440,1.78,441,1.655,442,1.969,443,1.48,444,1.245,445,1.357,446,1.18,447,1.12,448,2.22,449,1.245,450,1.48,451,1.48,452,2.235,453,1.18,454,2.074,455,2.449,456,1.48,457,2.449,458,1.065,459,1.245,460,1.48,461,1.744,462,1.57,463,1.316,464,1.013,465,1.316,466,1.065,467,1.969,468,1.12,469,1.065,470,1.316,471,1.48,472,1.48,473,1.12,474,1.393,475,1.48,476,1.48,477,2.298,478,1.839,479,2.059,480,2.873,481,2.06,482,2.873,483,1.744,484,1.48,485,1.744,486,1.245,487,1.48,488,1.48,489,2.187,490,1.48,491,1.393,492,1.393,493,1.944,494,1.245,495,1.393,496,1.12,497,2.059,498,2.059,499,1.393,500,1.065]],["title/components/IssueListComponent.html",[0,0.465,199,1.083]],["body/components/IssueListComponent.html",[0,0.781,1,1.131,2,0.549,3,0.549,4,1.186,5,1.369,6,1.369,7,0.396,9,0.677,21,1.369,22,2.481,23,2.364,25,1.793,27,1.793,29,1.501,32,2.417,37,1.346,47,0.445,48,0.725,60,3.22,61,1.412,62,0.888,63,0.019,64,0.937,65,0.719,66,0.719,68,1.115,69,2,70,2.205,71,1.734,72,1.099,83,0.719,84,0.845,89,1.587,94,0.486,95,0.455,96,0.979,102,1.053,106,4.749,137,1.094,142,2.569,155,1,168,1.078,169,1,170,1.709,171,1.793,172,1.752,173,1.369,176,1.369,177,1.131,178,1.369,179,0.725,180,1.369,181,1.131,182,0.651,183,1.369,184,1.131,185,1.369,186,1.078,187,1.793,188,1.131,189,1.369,190,1.078,191,0.764,192,1.369,193,1.131,194,1.369,195,0.725,196,1.369,197,1.131,198,1.369,199,1.752,200,1.369,201,1.131,202,1.369,203,1.027,204,1.369,205,1.131,206,1.305,207,1.369,208,0.725,209,1.078,210,1.369,211,0.013,212,0.013,285,0.688,286,1.978,305,1.629,324,1.856,402,1.244,411,1.346,438,1.883,448,1.883,462,1.131,466,2.079,477,1.793,494,1.856,501,2.865,647,2.352,779,2.721,926,3.08,927,4.238,939,3.677,1066,4.725,1067,3.626,1068,5.525,1069,5.525,1070,4.218,1071,4.218,1072,5.525,1073,5.525,1074,5.525,1075,5.525]],["title/components/IssueNavComponent.html",[0,0.465,201,1.083]],["body/components/IssueNavComponent.html",[0,0.653,1,0.703,2,0.342,3,0.342,4,1.111,5,0.852,6,0.852,7,0.246,9,0.648,16,1.838,17,0.958,18,1.648,21,0.852,22,2.345,23,2.235,25,1.283,27,1.283,29,1.158,31,3.138,32,2.219,33,3.405,34,2.601,37,1.618,44,0.987,45,1.059,47,0.421,48,0.817,52,2.067,54,1.373,59,1.947,61,1.215,62,1.001,63,0.019,64,0.783,65,0.776,66,0.689,67,0.9,68,1.252,69,1.936,70,2.28,71,1.724,72,1.074,73,1.702,74,2.768,75,2.342,76,2.651,77,1.158,78,1.051,83,0.829,84,0.792,88,1.039,89,0.987,90,1.566,92,1.155,94,0.302,95,0.283,96,1.513,98,1.039,102,0.753,111,1.687,131,1.219,137,1.081,138,0.455,146,1.195,155,1.203,160,1.292,168,0.67,169,0.716,170,1.222,171,1.283,172,1.78,173,0.852,176,0.852,177,0.703,178,0.852,179,0.451,180,0.852,181,0.703,182,0.405,183,0.852,184,0.703,185,0.852,186,0.67,187,1.283,188,0.703,189,0.852,190,0.67,191,0.475,192,0.852,193,0.703,194,0.852,195,0.451,196,0.852,197,0.703,198,0.852,199,0.703,200,0.852,201,1.418,202,0.852,203,0.639,204,0.852,205,0.703,206,0.812,207,0.852,208,0.451,209,0.67,210,0.852,211,0.01,212,0.01,237,2.582,285,0.428,286,2.28,289,1.283,298,1.543,307,2.54,315,0.738,318,4.163,324,1.155,352,2.359,356,1.347,359,4.059,361,4.059,362,4.059,364,2.758,367,1.648,373,3.388,374,4.886,375,1.991,377,2.247,379,2.013,380,3.238,381,3.031,382,2.095,389,1.352,402,1.402,411,0.963,419,2.461,437,2.068,462,1.808,464,2.135,478,1.739,494,1.155,501,3.137,553,1.831,647,1.463,680,2.067,681,2.758,853,3.397,914,2.013,939,4.026,979,3.397,980,3.397,981,3.031,1064,2.255,1076,5.174,1077,2.255,1078,3.952,1079,3.952,1080,3.952,1081,5.291,1082,3.952,1083,3.952,1084,3.952,1085,2.624,1086,2.624,1087,5.676,1088,5.676,1089,3.952,1090,3.952,1091,2.624,1092,2.624,1093,3.952,1094,2.624,1095,2.624,1096,2.624,1097,2.624,1098,2.624,1099,2.624,1100,2.255,1101,2.255,1102,4.086,1103,4.086,1104,2.624,1105,3.397,1106,2.624,1107,2.624,1108,2.624,1109,3.952,1110,2.624,1111,2.624,1112,2.624,1113,5.291,1114,3.952,1115,3.952,1116,3.952,1117,3.952,1118,3.952,1119,4.548,1120,3.952,1121,3.952,1122,3.952,1123,3.952,1124,1.687,1125,2.255,1126,2.624,1127,1.292,1128,2.624,1129,2.758,1130,2.624,1131,2.624,1132,2.624,1133,2.624,1134,2.624,1135,2.624,1136,2.624,1137,2.624,1138,3.952,1139,3.952,1140,3.397]],["title/injectables/KatanaService.html",[33,1.99,277,1.685]],["body/injectables/KatanaService.html",[2,0.297,3,0.297,7,0.214,9,0.435,17,1.067,18,1.481,24,1.467,29,1.062,31,3.001,32,1.978,33,1.749,34,2.293,35,3.917,36,2.902,37,1.559,42,2.281,44,2.006,45,0.952,47,0.475,54,1.858,59,3.001,60,2.78,61,0.908,62,1.188,63,0.019,64,0.779,65,0.793,66,0.873,67,0.679,68,1.159,69,1.597,70,1.271,71,1.442,72,1.045,73,1.271,74,1.858,76,1.98,77,1.741,78,0.785,79,2.724,81,0.612,82,2.936,83,0.793,84,0.457,85,2.936,88,0.904,89,0.859,91,1.962,92,1.004,93,1.467,94,0.263,95,0.246,96,1.453,97,1.272,98,2.111,102,0.677,105,1.272,108,2.816,111,1.467,112,5.238,120,1.336,121,3.774,122,5.078,125,2.165,127,3.053,131,1.241,137,0.952,142,1.652,146,0.457,150,2.78,153,1.194,154,2.724,155,1.159,160,2.78,172,1.169,191,1.18,211,0.009,212,0.009,236,1.962,263,2.936,277,1.819,281,1.272,284,2.936,285,0.372,286,1.271,289,1.153,298,2.077,305,0.673,307,2.283,315,0.998,319,3.774,322,1.349,329,1.593,337,3.053,338,3.628,367,1.481,369,2.743,370,0.673,373,2.936,375,1.336,377,1.406,389,0.908,403,1.375,415,1.633,420,0.952,424,1.563,425,1.563,437,1.73,438,1.677,448,1.21,452,1.522,455,1.749,458,1.851,464,0.817,467,1.406,468,1.406,473,1.406,474,1.749,477,1.978,500,1.336,523,2.12,531,1.98,590,2.724,650,2.283,677,2.12,680,1.194,697,2.724,745,2.479,777,3.774,824,2.724,846,1.593,863,3.748,914,2.724,956,3.628,958,3.72,1119,1.962,1125,4.852,1141,1.962,1142,4.92,1143,3.551,1144,3.551,1145,3.551,1146,4.92,1147,3.551,1148,2.282,1149,4.92,1150,3.551,1151,4.36,1152,2.479,1153,3.551,1154,2.282,1155,3.551,1156,2.282,1157,3.551,1158,2.282,1159,3.551,1160,2.282,1161,3.053,1162,2.282,1163,3.551,1164,2.282,1165,3.551,1166,4.92,1167,3.551,1168,4.92,1169,2.282,1170,2.479,1171,3.748,1172,2.282,1173,4.36,1174,2.282,1175,2.282,1176,2.282,1177,2.282,1178,2.479,1179,3.043,1180,4.92,1181,4.92,1182,2.282,1183,4.36,1184,3.551,1185,2.282,1186,5.33,1187,4.36,1188,2.283,1189,2.282,1190,5.33,1191,5.33,1192,3.551,1193,2.282,1194,4.92,1195,3.551,1196,2.282,1197,2.282,1198,2.282,1199,2.282,1200,2.282,1201,3.551,1202,2.282,1203,3.551,1204,5.644,1205,1.593,1206,1.593,1207,1.593,1208,2.282,1209,3.551,1210,3.551,1211,4.36,1212,2.282,1213,1.467,1214,5.893,1215,3.551,1216,2.479,1217,3.551,1218,3.053,1219,3.551,1220,3.551,1221,3.551,1222,3.551,1223,3.551,1224,4.92,1225,3.551,1226,2.282,1227,3.551,1228,3.551,1229,3.053,1230,2.282,1231,2.282,1232,2.282,1233,2.282,1234,2.282,1235,2.282,1236,2.282,1237,2.282,1238,2.282,1239,1.593,1240,3.551,1241,2.282,1242,2.282,1243,2.282,1244,2.282,1245,2.282,1246,2.282,1247,2.282]],["title/classes/OptionModel.html",[95,0.436,422,1.6]],["body/classes/OptionModel.html",[2,0.624,3,0.624,7,0.45,9,0.735,29,1.594,37,1.594,39,3.136,44,1.803,45,1.607,62,1.009,63,0.019,64,0.661,65,0.624,66,1,67,0.827,68,1.085,83,0.624,94,0.552,95,0.647,96,1.112,102,1.142,131,1.031,195,1.031,203,1.46,211,0.015,212,0.015,281,2.672,285,0.781,289,1.946,298,2.291,315,1.347,352,4.297,370,1.768,402,2.212,420,2.944,421,1.803,422,2.374,428,3.168,1248,4.119,1249,5.995,1250,5.995,1251,5.995,1252,4.184,1253,6.855,1254,5.995,1255,5.995,1256,4.792,1257,5.995,1258,5.995,1259,6.542,1260,4.792,1261,4.792,1262,4.792,1263,4.792,1264,5.995,1265,4.792,1266,4.792]],["title/components/OptionsViewComponent.html",[0,0.465,203,0.984]],["body/components/OptionsViewComponent.html",[0,0.728,1,0.752,2,0.365,3,0.365,4,0.789,5,0.911,6,0.911,7,0.264,9,0.67,13,2.9,16,1.932,17,0.991,18,1.733,21,0.911,22,2.367,23,2.256,25,1.349,27,1.349,29,1.205,31,3.269,32,2.155,33,3.481,34,2.636,37,1.668,44,1.056,45,1.114,47,0.442,48,0.851,53,2.317,61,1.492,62,0.591,63,0.019,64,0.683,65,0.824,66,0.967,67,0.932,68,1.177,69,1.896,70,2.091,71,1.563,72,1.033,73,1.771,74,2.589,75,2.437,76,2.759,77,1.205,78,1.094,83,0.864,84,0.562,88,1.111,89,1.056,90,1.675,92,1.235,94,0.323,95,0.448,96,1.42,98,1.645,102,0.792,125,2.691,131,1.088,137,0.853,138,0.63,142,1.305,155,0.752,168,0.717,169,0.752,170,1.285,171,1.349,172,1.565,173,0.911,176,0.911,177,0.752,178,0.911,179,0.482,180,0.911,181,0.752,182,0.433,183,0.911,184,0.752,185,0.911,186,0.717,187,1.349,188,0.752,189,0.911,190,0.717,191,0.508,192,0.911,193,0.752,194,0.911,195,0.482,196,0.911,197,0.752,198,0.911,199,0.752,200,0.911,201,0.752,202,0.911,203,1.332,204,0.911,205,0.752,206,0.868,207,0.911,208,0.482,209,0.717,210,0.911,211,0.01,212,0.01,237,2.64,259,5.318,260,4.839,266,1.892,285,0.458,286,2.091,289,1.349,298,1.606,301,1.391,309,2.153,315,0.789,318,4.268,322,1.285,324,1.235,329,1.959,350,3.865,359,4.196,361,4.196,362,4.196,364,2.9,373,3.486,374,5.318,375,2.301,377,2.506,379,2.153,380,3.311,381,3.187,382,2.166,385,3.572,389,1.062,395,1.959,402,1.459,407,0.535,411,1.012,420,2.817,421,1.056,422,2.674,424,1.829,425,1.829,426,2.059,428,2.691,433,2.282,435,1.488,445,1.349,500,1.564,530,2.174,542,1.645,550,3.187,687,2.153,743,2.317,745,1.959,757,4.702,901,2.317,1053,3.572,1054,3.572,1102,4.253,1103,4.253,1140,3.572,1218,2.412,1267,2.153,1268,3.572,1269,3.572,1270,5.47,1271,5.47,1272,4.155,1273,2.806,1274,2.806,1275,4.155,1276,2.806,1277,3.187,1278,2.9,1279,4.155,1280,4.155,1281,2.806,1282,2.806,1283,2.806,1284,2.806,1285,2.806,1286,2.806,1287,2.806,1288,2.806,1289,2.806,1290,2.806,1291,2.806,1292,2.806,1293,2.806,1294,2.806,1295,2.806,1296,2.806,1297,2.806,1298,2.806,1299,2.806,1300,2.806,1301,2.806,1302,2.806,1303,2.806,1304,2.806,1305,4.155,1306,3.572,1307,4.155]],["title/modules/SidebarModule.html",[213,1.446,224,2.597]],["body/modules/SidebarModule.html",[2,0.67,3,0.67,7,0.484,55,3.074,63,0.019,68,0.932,72,0.987,83,0.974,84,1.032,88,2.039,94,0.809,95,0.555,120,1.938,168,1.316,184,1.964,186,1.872,188,2.05,211,0.015,212,0.015,213,2.243,215,2.871,216,4.342,217,3.31,224,4.898,226,4.028,231,4.374,232,4.374,237,2.148,258,3.95,380,2.694,639,3.95,685,3.95,889,3.95,903,3.31,933,4.807,934,4.807,1308,4.426,1309,4.426,1310,4.426,1311,5.149,1312,5.149,1313,5.149]],["title/components/StatBadgeComponent.html",[0,0.465,205,1.083]],["body/components/StatBadgeComponent.html",[0,0.777,1,1.111,2,0.54,3,0.54,4,1.166,5,1.346,6,1.346,7,0.39,9,0.508,21,1.346,22,2.477,23,2.36,25,1.773,27,1.773,29,1.644,37,1.644,44,2.056,47,0.372,48,0.713,63,0.019,64,0.754,65,0.845,66,0.54,72,0.893,83,0.54,84,0.831,94,0.477,95,0.447,137,0.986,168,1.059,169,0.989,170,1.69,171,1.773,172,1.74,173,1.346,176,1.346,177,1.111,178,1.346,179,0.713,180,1.346,181,1.111,182,0.64,183,1.346,184,1.111,185,1.346,186,1.059,187,1.773,188,1.111,189,1.346,190,1.059,191,0.751,192,1.346,193,1.111,194,1.346,195,0.713,196,1.346,197,1.111,198,1.346,199,1.111,200,1.346,201,1.111,202,1.346,203,1.01,204,1.346,205,1.74,206,2.185,207,1.346,208,0.713,209,1.059,210,1.346,211,0.013,212,0.013,285,0.676,315,1.536,389,1.396,411,1.746,413,2.361,415,1.857,429,1.983,461,2.278,481,2.327,501,3.222,817,3.511,887,4.19,1314,5.956,1315,5.315,1316,3.564,1317,6.929,1318,5.462,1319,5.462,1320,5.462,1321,4.337,1322,7.064,1323,7.064,1324,6.109,1325,5.462,1326,4.19,1327,4.146,1328,4.146,1329,4.146,1330,4.146,1331,4.146,1332,4.146,1333,4.146]],["title/injectables/ToastService.html",[35,2.597,277,1.685]],["body/injectables/ToastService.html",[2,0.577,3,0.577,7,0.416,9,0.773,17,1.277,20,4.903,24,2.848,29,1.679,35,3.666,37,1.536,52,2.984,62,1.201,63,0.019,64,0.787,66,0.742,68,1.033,73,2.042,77,1.079,79,5.634,80,6.064,83,0.742,84,0.888,85,2.645,94,0.51,95,0.478,96,1.324,100,5.422,121,3.399,122,3.399,131,1.145,191,1.33,211,0.014,212,0.014,237,1.848,277,2.631,285,0.722,289,2.162,373,2.645,375,2.146,380,2.318,403,1.079,411,1.771,415,1.188,430,2.526,458,2.787,677,4.113,736,3.092,796,5.411,846,3.092,879,3.808,1171,4.903,1229,4.903,1334,3.808,1335,5.704,1336,5.704,1337,4.431,1338,5.704,1339,4.431,1340,5.704,1341,4.431,1342,5.704,1343,4.431,1344,4.431,1345,6.308,1346,5.704,1347,4.431,1348,4.431,1349,4.431,1350,4.431,1351,4.431,1352,5.704,1353,5.704,1354,5.704,1355,5.704,1356,4.431,1357,4.431]],["title/interfaces/Tool.html",[47,0.275,407,0.77]],["body/interfaces/Tool.html",[2,0.35,3,0.35,7,0.253,9,0.831,12,1.679,17,1.13,45,1.079,47,0.506,48,0.462,63,0.019,64,0.371,65,0.959,66,0.956,67,1.01,72,1.025,77,0.981,78,1.419,83,0.524,94,0.739,95,0.29,102,0.767,131,0.462,135,1.983,137,1.033,138,0.755,146,0.539,155,0.874,163,1.187,169,1.13,179,0.829,182,0.622,191,0.729,195,0.986,208,0.692,211,0.012,212,0.01,249,1.065,266,2.204,285,0.438,300,2.013,301,1.613,305,1.187,315,1.132,322,1.245,356,1.372,367,1.679,370,1.775,371,1.251,382,1.594,389,0.687,390,2.677,391,0.917,402,2.126,403,1.397,407,1.347,408,1.325,409,1.407,410,0.963,411,1.692,412,2.053,413,2.458,414,2.393,415,2.072,416,1.407,417,2.965,418,2.668,419,2.8,420,2.234,421,1.012,422,2.271,423,3.149,424,1.183,425,1.772,426,2.469,427,1.774,428,2.649,429,1.307,430,2.297,431,1.772,432,1.772,433,2.234,434,2.106,435,1.918,436,2.121,437,1.739,438,1.372,439,2.469,440,1.918,441,1.911,442,2.541,443,1.407,444,1.183,445,1.566,446,1.122,447,1.065,448,2.277,449,2.357,450,2.106,451,2.106,452,2.149,453,1.679,454,2.013,455,2.377,456,1.407,457,2.377,458,1.515,459,1.772,460,2.802,461,1.679,462,1.436,463,1.251,464,0.963,465,1.251,466,1.012,467,1.594,468,1.065,469,1.012,470,1.251,471,1.407,472,1.407,473,1.065,474,1.325,475,1.407,476,1.407,477,2.026,478,1.183,479,1.325,480,1.407,481,1.566,482,1.407,483,1.122,484,1.407,485,1.122,486,1.183,487,1.407,488,1.407,489,2.106,490,1.407,491,1.325,492,1.325,493,1.872,494,1.183,495,1.325,496,1.065,497,1.983,498,1.983,499,1.325,500,1.012]],["title/modules/ToolPageModule.html",[213,1.446,225,2.597]],["body/modules/ToolPageModule.html",[2,0.608,3,0.608,7,0.439,47,0.318,55,2.788,63,0.019,68,0.846,83,0.991,84,0.936,88,1.85,94,0.744,95,0.504,120,1.758,137,1.023,168,1.194,181,1.917,182,0.721,193,1.917,195,1.23,197,1.917,199,1.917,201,1.917,205,1.917,206,1.445,209,1.828,211,0.014,212,0.014,213,2.112,215,2.604,216,4.156,217,3.003,225,4.967,226,3.792,231,4.117,232,4.117,237,1.948,252,3.003,255,3.26,256,3.583,380,2.444,421,1.758,501,2.172,503,3.583,903,3.003,932,4.015,933,4.525,934,4.525,937,5.558,938,5.558,940,3.583,982,3.583,1057,3.583,1066,3.583,1076,3.583,1315,3.583,1358,4.015,1359,4.015,1360,4.671,1361,4.671,1362,4.671,1363,4.671,1364,4.671,1365,4.671,1366,4.671]],["title/components/ToolSelectionComponent.html",[0,0.465,208,0.694]],["body/components/ToolSelectionComponent.html",[0,0.788,1,1.161,2,0.564,3,0.564,4,1.218,5,1.406,6,1.406,7,0.407,9,0.689,21,1.406,22,2.487,23,2.37,25,1.825,27,1.825,29,1.52,32,2.349,34,2.813,37,1.369,47,0.511,48,1.073,62,0.912,63,0.019,64,0.861,65,0.732,66,0.732,68,1.239,69,2.221,70,2.45,71,1.792,72,1,78,1.38,83,0.812,84,0.868,89,1.63,92,1.906,94,0.499,95,0.467,96,1.305,98,1.715,102,1.071,137,1,168,1.107,169,1.018,170,1.739,171,1.825,172,1.77,173,1.406,176,1.406,177,1.161,178,1.406,179,0.745,180,1.406,181,1.161,182,0.669,183,1.406,184,1.161,185,1.406,186,1.107,187,1.825,188,1.161,189,1.406,190,1.107,191,0.784,192,1.406,193,1.161,194,1.406,195,0.745,196,1.406,197,1.161,198,1.406,199,1.161,200,1.406,201,1.161,202,1.406,203,1.055,204,1.406,205,1.161,206,1.34,207,1.406,208,1.135,209,1.107,210,1.406,211,0.014,212,0.014,252,4.011,257,4.355,285,0.706,286,2.012,324,1.906,350,3.479,395,3.023,686,3.323,689,4.831,690,4.831,1170,3.923,1367,4.331,1368,4.331,1369,5.621,1370,5.621]],["title/injectables/ToolService.html",[34,1.52,277,1.685]],["body/injectables/ToolService.html",[2,0.444,3,0.444,7,0.32,9,0.586,17,1.336,18,1.994,24,2.191,29,1.345,30,2.615,31,3.306,33,1.679,34,1.799,36,1.679,37,1.766,44,2.372,45,1.282,47,0.52,48,0.822,53,3.338,59,2.355,60,2.355,62,1.163,63,0.019,64,0.762,65,0.892,66,0.874,67,0.826,69,1.943,70,1.712,71,1.75,77,1.165,78,1.515,83,0.821,84,0.683,88,1.35,90,2.035,93,2.191,94,0.392,95,0.368,96,0.791,97,1.901,102,0.911,108,2.634,130,4.11,131,1.029,138,0.55,146,1.309,155,1.24,169,1.084,182,0.738,211,0.012,212,0.012,266,2.283,277,2.303,285,0.556,301,1.837,305,1.927,315,1.772,375,1.799,389,1.222,390,1.994,399,2.93,406,4.11,407,0.65,411,1.165,412,2.143,413,2.04,414,2.497,415,1.48,424,2.104,435,2.339,458,1.799,477,1.552,549,3.337,553,3.337,737,3.073,839,2.93,846,2.379,1170,3.337,1188,3.848,1326,3.667,1371,2.93,1372,5.986,1373,5.986,1374,5.986,1375,5.986,1376,5.986,1377,3.409,1378,3.409,1379,3.409,1380,4.781,1381,3.409,1382,4.11,1383,4.781,1384,4.11,1385,3.409,1386,4.781,1387,4.781,1388,3.409,1389,4.781,1390,3.409,1391,4.781,1392,3.409,1393,3.409,1394,4.11,1395,4.781,1396,3.409,1397,3.409,1398,3.409,1399,4.781,1400,3.409,1401,3.409,1402,3.409,1403,3.409,1404,6.304,1405,3.409,1406,5.522,1407,6.304,1408,3.409,1409,5.522,1410,4.781,1411,3.409,1412,3.409,1413,4.781,1414,3.409,1415,4.781,1416,3.409,1417,4.781,1418,4.781]],["title/components/ToolViewComponent.html",[0,0.465,209,1.032]],["body/components/ToolViewComponent.html",[0,0.765,1,1.06,2,0.515,3,0.515,4,1.112,5,1.284,6,1.284,7,0.372,9,0.649,21,1.284,22,2.465,23,2.349,25,1.719,27,1.719,29,1.454,32,2.394,34,2.792,37,1.552,47,0.51,48,1.142,62,0.833,63,0.019,64,0.824,65,0.777,66,0.689,68,1.238,69,2.219,70,2.447,71,1.784,72,1.05,78,1.32,83,0.777,84,0.793,89,1.489,92,1.741,94,0.455,95,0.427,96,1.229,102,1.009,111,2.543,131,1.175,137,1.02,142,2.462,155,1.264,168,1.011,169,0.959,170,1.638,171,1.719,172,1.708,173,1.284,176,1.284,177,1.06,178,1.284,179,0.68,180,1.284,181,1.06,182,0.611,183,1.284,184,1.06,185,1.284,186,1.011,187,1.719,188,1.06,189,1.284,190,1.011,191,0.716,192,1.284,193,1.06,194,1.284,195,0.68,196,1.284,197,1.06,198,1.284,199,1.06,200,1.284,201,1.06,202,1.284,203,0.963,204,1.284,205,1.06,206,1.224,207,1.284,208,0.68,209,1.628,210,1.284,211,0.013,212,0.013,252,4.27,255,4.637,285,0.645,286,2.378,289,1.719,324,1.741,389,1.353,438,1.804,445,1.719,462,1.06,501,3.089,645,5.478,647,2.205,656,4.061,681,3.695,797,4.551,866,3.4,1105,3.4,1267,3.034,1268,4.551,1269,4.551,1419,3.955,1420,3.955,1421,3.955,1422,3.955,1423,3.955,1424,3.955,1425,5.294,1426,5.294]],["title/coverage.html",[1427,4.615]],["body/coverage.html",[0,0.879,1,1.183,7,0.415,8,3.795,32,1.433,33,2.175,34,1.662,35,2.838,36,2.175,47,0.301,63,0.019,65,0.575,72,0.645,95,0.476,137,0.645,142,2.053,177,1.183,179,0.759,181,1.183,184,1.183,186,1.128,188,1.183,190,1.128,193,1.183,195,0.759,197,1.183,199,1.183,201,1.183,203,1.076,205,1.183,208,0.759,209,1.128,211,0.014,212,0.014,246,2.838,252,3.658,255,3.082,257,3.082,259,3.387,260,3.082,261,3.972,266,1.366,277,2.872,278,3.795,298,1.433,350,3.838,351,3.795,388,3.795,407,1.384,408,3.578,418,2.053,422,1.748,426,1.662,439,1.662,442,1.748,462,1.183,501,3.379,502,3.795,503,3.387,504,3.795,638,4.395,639,3.387,640,3.795,685,3.387,686,4.365,706,3.387,792,3.795,889,3.387,890,3.795,917,3.795,939,4.109,940,3.387,941,3.795,982,3.387,983,3.795,1057,3.387,1058,3.795,1066,3.387,1067,3.795,1076,3.387,1077,3.795,1141,3.795,1248,3.795,1267,4.365,1314,3.795,1315,3.387,1316,3.795,1334,3.795,1371,3.795,1427,3.795,1428,2.175,1429,4.415,1430,7.792,1431,4.415,1432,6.297,1433,6.884,1434,5.691,1435,3.795,1436,3.082,1437,4.415,1438,6.297,1439,4.415,1440,6.652,1441,6.297,1442,6.297,1443,4.415,1444,4.415,1445,4.415,1446,5.691,1447,4.415,1448,4.415,1449,4.415]],["title/dependencies.html",[215,2.687,1450,2.963]],["body/dependencies.html",[63,0.019,75,3.094,81,1.684,84,1.036,88,2.047,166,2.882,211,0.015,212,0.015,215,2.882,229,5.4,230,4.818,234,4.444,237,2.62,238,4.444,239,4.818,241,3.966,380,3.286,403,1.259,421,1.946,452,1.599,903,3.323,1100,4.444,1101,5.4,1161,4.444,1382,4.444,1451,5.17,1452,7.543,1453,5.17,1454,5.17,1455,5.17,1456,5.17,1457,5.17,1458,5.17,1459,5.17,1460,5.17,1461,5.17,1462,5.17,1463,2.882,1464,5.17,1465,5.17,1466,5.17,1467,5.17,1468,3.608,1469,5.17,1470,5.17,1471,5.17,1472,5.17,1473,5.17,1474,5.17,1475,6.282,1476,5.17,1477,6.282,1478,5.17,1479,5.17,1480,5.17,1481,5.17,1482,5.17,1483,5.17,1484,5.17,1485,5.17,1486,5.17,1487,5.17,1488,5.17,1489,5.17,1490,5.17,1491,5.17,1492,5.17,1493,5.17]],["title/index.html",[285,0.562,752,2.644,1494,2.216]],["body/index.html",[7,0.475,45,1.355,47,0.422,56,2.819,61,1.712,63,0.016,67,0.964,68,0.915,70,1.81,77,1.509,81,1.661,125,2.727,146,1.242,160,2.49,211,0.015,212,0.015,246,3.25,284,3.017,305,1.491,352,4.278,407,0.963,410,1.81,427,1.564,452,1.917,467,2.002,505,3.25,542,2.766,566,2.819,779,3.44,796,3.878,824,3.878,966,4.345,1019,5.326,1127,3.052,1428,2.49,1436,3.528,1494,3.25,1495,5.759,1496,4.345,1497,5.055,1498,6.196,1499,5.055,1500,4.345,1501,4.307,1502,5.055,1503,5.055,1504,5.055,1505,5.055,1506,5.055,1507,5.055,1508,5.055,1509,3.983,1510,6.196,1511,6.985,1512,5.055,1513,5.055,1514,5.055,1515,5.055,1516,5.055,1517,6.7,1518,5.055,1519,5.055,1520,5.055,1521,3.017,1522,5.055,1523,5.055,1524,5.055,1525,4.345,1526,5.055,1527,5.055,1528,3.528,1529,4.325,1530,5.055,1531,5.055,1532,1.723,1533,5.055,1534,5.055,1535,5.055,1536,5.055,1537,4.345,1538,5.055,1539,5.055,1540,5.055,1541,5.055,1542,5.055,1543,5.326,1544,5.055,1545,3.25,1546,3.528,1547,3.878,1548,3.25,1549,6.985,1550,3.878]],["title/modules.html",[213,1.922]],["body/modules.html",[63,0.016,211,0.016,212,0.016,213,2.113,214,4.12,223,3.794,224,3.794,225,3.794,230,5.637,1551,7.349,1552,7.349,1553,7.349]],["title/overview.html",[1554,2.993]],["body/overview.html",[0,0.542,1,1.95,36,3.197,55,2.812,63,0.019,68,0.853,94,0.542,95,0.508,120,1.773,168,1.204,177,1.95,179,1.116,181,1.74,184,1.74,186,1.659,188,1.95,190,1.859,193,1.74,195,1.116,197,1.74,199,1.74,201,1.74,203,1.581,205,1.74,208,1.116,209,1.659,211,0.014,212,0.014,213,2.123,214,5.301,215,2.627,216,3.028,217,3.028,218,4.049,219,4.049,220,4.049,221,4.049,222,4.049,223,4.915,224,4.808,225,4.962,226,3.812,277,1.965,407,0.898,606,3.288,669,3.614,888,4.049,929,4.049,930,4.049,931,4.049,1308,4.049,1309,4.049,1310,4.049,1358,4.049,1359,4.049,1554,2.627,1555,4.711,1556,4.711]],["title/miscellaneous/variables.html",[1436,3.363,1557,2.963]],["body/miscellaneous/variables.html",[44,2.162,61,1.808,63,0.018,65,0.748,67,0.793,81,1.793,82,3.429,211,0.016,212,0.016,246,4.548,285,0.937,315,1.615,403,1.629,1435,4.938,1436,4.01,1548,3.693,1557,4.938,1558,5.745,1559,5.745,1560,5.745,1561,5.745,1562,5.745,1563,5.745,1564,5.745,1565,5.745,1566,5.745,1567,5.745,1568,5.745,1569,5.745,1570,5.745]],["title/additional-documentation/architecture.html",[138,0.397,1532,1.175,1550,2.644]],["body/additional-documentation/architecture.html",[47,0.404,63,0.016,81,1.827,146,1.19,163,1.751,167,3.107,211,0.017,212,0.017,542,2.352,999,2.925,1384,5.105,1428,3.358,1550,5.23,1571,3.801,1572,5.939,1573,5.939]],["title/additional-documentation/architecture/server-endpoints.html",[77,0.732,138,0.346,1532,1.024,1574,2.306]],["body/additional-documentation/architecture/server-endpoints.html",[63,0.016,77,1.675,211,0.017,212,0.017,370,1.778,410,2.159,1571,3.363,1574,5.276]],["title/additional-documentation/architecture/discover-&-fix-workflow.html",[63,0.006,138,0.276,437,0.777,438,0.816,1532,0.816,1575,2.058]],["body/additional-documentation/architecture/discover-&-fix-workflow.html",[47,0.466,63,0.017,67,0.826,211,0.017,212,0.017,437,1.943,438,2.04,999,3.373,1521,3.572,1575,5.886,1576,5.985]],["title/additional-documentation/architecture/data-flow-diagram.html",[138,0.307,958,1.86,1532,0.908,1577,2.291,1578,2.291]],["body/additional-documentation/architecture/data-flow-diagram.html",[63,0.016,211,0.017,212,0.017]],["title/additional-documentation/architecture/high-level-overview.html",[138,0.307,1532,0.908,1554,1.486,1579,1.86,1580,2.665]],["body/additional-documentation/architecture/high-level-overview.html",[63,0.016,211,0.017,212,0.017]],["title/additional-documentation/setup.html",[138,0.397,1127,1.698,1532,1.175]],["body/additional-documentation/setup.html",[17,1.051,39,3.037,47,0.458,52,3.037,61,1.483,63,0.016,81,1.905,146,1.163,163,1.712,167,3.037,211,0.016,212,0.016,298,1.885,305,2.095,370,1.712,478,2.555,505,3.732,542,2.299,564,4.453,999,3.315,1127,2.859,1428,3.315,1571,3.237,1581,4.99,1582,5.805,1583,4.99,1584,4.052,1585,4.052]],["title/additional-documentation/setup/setting-up-firebase.html",[81,0.714,138,0.307,146,0.534,542,1.055,1532,0.908]],["body/additional-documentation/setup/setting-up-firebase.html",[4,1.164,7,0.443,9,0.855,12,0.879,16,1.552,17,0.988,18,0.879,39,1.746,42,2.992,45,1.262,46,3.582,47,0.507,48,0.362,51,1.471,52,1.103,59,1.038,60,1.644,61,0.539,62,0.703,63,0.019,64,0.65,65,0.878,66,0.977,67,0.708,68,0.929,71,1.515,72,0.488,73,2.48,74,3.102,75,2.32,77,0.514,78,1.042,96,1.507,105,1.175,108,1.823,120,0.793,125,0.928,131,0.882,137,1.047,138,0.658,146,1.028,150,3.081,153,1.103,155,0.929,169,1.155,172,1.262,182,0.515,211,0.008,212,0.008,213,0.755,237,0.879,249,0.835,263,1.258,266,1.032,298,2.138,300,0.879,301,1.164,303,1.175,305,1.221,322,1.457,338,2.145,356,2.021,369,3.761,370,1.844,377,0.835,389,0.539,391,1.137,403,1.778,410,1.195,411,1.625,412,1.195,413,2.361,414,0.879,415,1.74,426,1.256,427,2.008,429,1.529,430,2.239,431,2.259,432,2.259,433,1.965,436,2.162,437,2.305,438,2.299,439,1.256,440,1.483,441,1.64,442,1.321,444,0.928,445,1.856,446,1.392,447,0.835,448,1.412,449,0.928,452,2.087,453,1.965,454,1.392,458,0.793,459,1.469,462,1.826,464,1.837,466,1.256,467,1.321,468,1.865,469,1.559,477,2.279,481,0.684,483,0.879,485,0.879,486,0.928,496,1.64,500,1.256,520,2.329,523,1.992,524,1.471,530,2.167,531,2.862,532,1.471,542,0.835,545,2.145,554,1.469,561,1.471,575,2.329,584,1.355,601,1.175,607,2.329,620,3.991,650,1.355,677,1.992,680,2.992,709,1.992,710,2.663,717,4.708,737,2.145,743,1.175,758,2.891,759,2.472,817,3.299,818,3.258,877,1.471,884,1.471,901,2.862,926,1.175,956,1.355,965,2.329,967,1.471,999,2.689,1021,1.471,1124,2.145,1127,1.038,1129,2.329,1152,1.471,1178,2.329,1179,3.288,1188,2.145,1205,2.329,1206,2.329,1207,2.329,1213,1.355,1216,1.471,1239,3.288,1252,1.471,1278,1.471,1321,1.355,1428,1.038,1463,2.626,1468,1.471,1494,1.355,1501,1.355,1509,3.299,1521,2.472,1528,1.471,1529,1.471,1546,3.288,1548,1.355,1554,1.175,1571,1.175,1579,1.471,1584,1.471,1585,1.471,1586,1.617,1587,1.617,1588,3.288,1589,1.617,1590,1.617,1591,2.56,1592,2.56,1593,1.617,1594,1.617,1595,1.617,1596,1.617,1597,1.617,1598,1.617,1599,1.617,1600,2.56,1601,1.617,1602,1.617,1603,1.617,1604,1.617,1605,1.617,1606,1.617,1607,1.617,1608,1.617,1609,1.617,1610,1.617,1611,1.617,1612,1.617,1613,1.617,1614,1.617,1615,1.617,1616,1.617,1617,1.617,1618,1.617,1619,1.617,1620,5.599,1621,1.617,1622,1.617,1623,1.617,1624,1.617,1625,1.617,1626,3.177,1627,1.617,1628,2.56,1629,1.617,1630,1.617,1631,1.617,1632,1.617,1633,1.617,1634,2.56,1635,1.617,1636,3.177,1637,1.617,1638,2.891,1639,1.617,1640,1.617,1641,1.617,1642,1.617,1643,1.617,1644,1.617,1645,2.56,1646,3.177,1647,2.56,1648,1.617,1649,1.617,1650,3.177,1651,1.617,1652,1.617,1653,2.56,1654,3.937,1655,3.288,1656,2.56,1657,1.617,1658,1.617,1659,3.177,1660,2.56,1661,3.613,1662,2.56,1663,1.471,1664,1.617,1665,2.56,1666,1.617,1667,2.56,1668,2.56,1669,1.617,1670,2.56,1671,2.56,1672,5.446,1673,1.617,1674,2.56,1675,1.617,1676,1.617,1677,1.617,1678,1.617,1679,1.617,1680,1.617,1681,1.617,1682,3.937,1683,1.617,1684,1.617,1685,2.56,1686,1.617,1687,1.617,1688,1.617,1689,2.56,1690,1.617,1691,1.617,1692,1.617,1693,1.617,1694,1.617,1695,1.471,1696,1.617,1697,1.617,1698,1.617,1699,1.355,1700,1.617,1701,1.617,1702,1.617,1703,1.617,1704,1.617,1705,1.617,1706,1.617,1707,1.617,1708,1.617,1709,1.617,1710,1.617,1711,1.617,1712,1.258,1713,1.617]],["title/additional-documentation/setup/development-environment.html",[138,0.346,246,1.932,779,1.481,1532,1.024]],["body/additional-documentation/setup/development-environment.html",[4,1.164,7,0.443,9,0.855,12,0.879,16,1.552,17,0.988,18,0.879,39,1.746,42,2.992,45,1.262,46,3.582,47,0.507,48,0.362,51,1.471,52,1.103,59,1.038,60,1.644,61,0.539,62,0.703,63,0.019,64,0.65,65,0.878,66,0.977,67,0.708,68,0.929,71,1.515,72,0.488,73,2.48,74,3.102,75,2.32,77,0.514,78,1.042,96,1.507,105,1.175,108,1.823,120,0.793,125,0.928,131,0.882,137,1.047,138,0.658,146,1.028,150,3.081,153,1.103,155,0.929,169,1.155,172,1.262,182,0.515,211,0.008,212,0.008,213,0.755,237,0.879,249,0.835,263,1.258,266,1.032,298,2.138,300,0.879,301,1.164,303,1.175,305,1.221,322,1.457,338,2.145,356,2.021,369,3.761,370,1.844,377,0.835,389,0.539,391,1.137,403,1.778,410,1.195,411,1.625,412,1.195,413,2.361,414,0.879,415,1.74,426,1.256,427,2.008,429,1.529,430,2.239,431,2.259,432,2.259,433,1.965,436,2.162,437,2.305,438,2.299,439,1.256,440,1.483,441,1.64,442,1.321,444,0.928,445,1.856,446,1.392,447,0.835,448,1.412,449,0.928,452,2.087,453,1.965,454,1.392,458,0.793,459,1.469,462,1.826,464,1.837,466,1.256,467,1.321,468,1.865,469,1.559,477,2.279,481,0.684,483,0.879,485,0.879,486,0.928,496,1.64,500,1.256,520,2.329,523,1.992,524,1.471,530,2.167,531,2.862,532,1.471,542,0.835,545,2.145,554,1.469,561,1.471,575,2.329,584,1.355,601,1.175,607,2.329,620,3.991,650,1.355,677,1.992,680,2.992,709,1.992,710,2.663,717,4.708,737,2.145,743,1.175,758,2.891,759,2.472,817,3.299,818,3.258,877,1.471,884,1.471,901,2.862,926,1.175,956,1.355,965,2.329,967,1.471,999,2.689,1021,1.471,1124,2.145,1127,1.038,1129,2.329,1152,1.471,1178,2.329,1179,3.288,1188,2.145,1205,2.329,1206,2.329,1207,2.329,1213,1.355,1216,1.471,1239,3.288,1252,1.471,1278,1.471,1321,1.355,1428,1.038,1463,2.626,1468,1.471,1494,1.355,1501,1.355,1509,3.299,1521,2.472,1528,1.471,1529,1.471,1546,3.288,1548,1.355,1554,1.175,1571,1.175,1579,1.471,1584,1.471,1585,1.471,1586,1.617,1587,1.617,1588,3.288,1589,1.617,1590,1.617,1591,2.56,1592,2.56,1593,1.617,1594,1.617,1595,1.617,1596,1.617,1597,1.617,1598,1.617,1599,1.617,1600,2.56,1601,1.617,1602,1.617,1603,1.617,1604,1.617,1605,1.617,1606,1.617,1607,1.617,1608,1.617,1609,1.617,1610,1.617,1611,1.617,1612,1.617,1613,1.617,1614,1.617,1615,1.617,1616,1.617,1617,1.617,1618,1.617,1619,1.617,1620,5.599,1621,1.617,1622,1.617,1623,1.617,1624,1.617,1625,1.617,1626,3.177,1627,1.617,1628,2.56,1629,1.617,1630,1.617,1631,1.617,1632,1.617,1633,1.617,1634,2.56,1635,1.617,1636,3.177,1637,1.617,1638,2.891,1639,1.617,1640,1.617,1641,1.617,1642,1.617,1643,1.617,1644,1.617,1645,2.56,1646,3.177,1647,2.56,1648,1.617,1649,1.617,1650,3.177,1651,1.617,1652,1.617,1653,2.56,1654,3.937,1655,3.288,1656,2.56,1657,1.617,1658,1.617,1659,3.177,1660,2.56,1661,3.613,1662,2.56,1663,1.471,1664,1.617,1665,2.56,1666,1.617,1667,2.56,1668,2.56,1669,1.617,1670,2.56,1671,2.56,1672,5.446,1673,1.617,1674,2.56,1675,1.617,1676,1.617,1677,1.617,1678,1.617,1679,1.617,1680,1.617,1681,1.617,1682,3.937,1683,1.617,1684,1.617,1685,2.56,1686,1.617,1687,1.617,1688,1.617,1689,2.56,1690,1.617,1691,1.617,1692,1.617,1693,1.617,1694,1.617,1695,1.471,1696,1.617,1697,1.617,1698,1.617,1699,1.355,1700,1.617,1701,1.617,1702,1.617,1703,1.617,1704,1.617,1705,1.617,1706,1.617,1707,1.617,1708,1.617,1709,1.617,1710,1.617,1711,1.617,1712,1.258,1713,1.617]],["title/additional-documentation/setup/node-tools.html",[47,0.205,138,0.346,999,1.481,1532,1.024]],["body/additional-documentation/setup/node-tools.html",[4,1.164,7,0.443,9,0.855,12,0.879,16,1.552,17,0.988,18,0.879,39,1.746,42,2.992,45,1.262,46,3.582,47,0.507,48,0.362,51,1.471,52,1.103,59,1.038,60,1.644,61,0.539,62,0.703,63,0.019,64,0.65,65,0.878,66,0.977,67,0.708,68,0.929,71,1.515,72,0.488,73,2.48,74,3.102,75,2.32,77,0.514,78,1.042,96,1.507,105,1.175,108,1.823,120,0.793,125,0.928,131,0.882,137,1.047,138,0.658,146,1.028,150,3.081,153,1.103,155,0.929,169,1.155,172,1.262,182,0.515,211,0.008,212,0.008,213,0.755,237,0.879,249,0.835,263,1.258,266,1.032,298,2.138,300,0.879,301,1.164,303,1.175,305,1.221,322,1.457,338,2.145,356,2.021,369,3.761,370,1.844,377,0.835,389,0.539,391,1.137,403,1.778,410,1.195,411,1.625,412,1.195,413,2.361,414,0.879,415,1.74,426,1.256,427,2.008,429,1.529,430,2.239,431,2.259,432,2.259,433,1.965,436,2.162,437,2.305,438,2.299,439,1.256,440,1.483,441,1.64,442,1.321,444,0.928,445,1.856,446,1.392,447,0.835,448,1.412,449,0.928,452,2.087,453,1.965,454,1.392,458,0.793,459,1.469,462,1.826,464,1.837,466,1.256,467,1.321,468,1.865,469,1.559,477,2.279,481,0.684,483,0.879,485,0.879,486,0.928,496,1.64,500,1.256,520,2.329,523,1.992,524,1.471,530,2.167,531,2.862,532,1.471,542,0.835,545,2.145,554,1.469,561,1.471,575,2.329,584,1.355,601,1.175,607,2.329,620,3.991,650,1.355,677,1.992,680,2.992,709,1.992,710,2.663,717,4.708,737,2.145,743,1.175,758,2.891,759,2.472,817,3.299,818,3.258,877,1.471,884,1.471,901,2.862,926,1.175,956,1.355,965,2.329,967,1.471,999,2.689,1021,1.471,1124,2.145,1127,1.038,1129,2.329,1152,1.471,1178,2.329,1179,3.288,1188,2.145,1205,2.329,1206,2.329,1207,2.329,1213,1.355,1216,1.471,1239,3.288,1252,1.471,1278,1.471,1321,1.355,1428,1.038,1463,2.626,1468,1.471,1494,1.355,1501,1.355,1509,3.299,1521,2.472,1528,1.471,1529,1.471,1546,3.288,1548,1.355,1554,1.175,1571,1.175,1579,1.471,1584,1.471,1585,1.471,1586,1.617,1587,1.617,1588,3.288,1589,1.617,1590,1.617,1591,2.56,1592,2.56,1593,1.617,1594,1.617,1595,1.617,1596,1.617,1597,1.617,1598,1.617,1599,1.617,1600,2.56,1601,1.617,1602,1.617,1603,1.617,1604,1.617,1605,1.617,1606,1.617,1607,1.617,1608,1.617,1609,1.617,1610,1.617,1611,1.617,1612,1.617,1613,1.617,1614,1.617,1615,1.617,1616,1.617,1617,1.617,1618,1.617,1619,1.617,1620,5.599,1621,1.617,1622,1.617,1623,1.617,1624,1.617,1625,1.617,1626,3.177,1627,1.617,1628,2.56,1629,1.617,1630,1.617,1631,1.617,1632,1.617,1633,1.617,1634,2.56,1635,1.617,1636,3.177,1637,1.617,1638,2.891,1639,1.617,1640,1.617,1641,1.617,1642,1.617,1643,1.617,1644,1.617,1645,2.56,1646,3.177,1647,2.56,1648,1.617,1649,1.617,1650,3.177,1651,1.617,1652,1.617,1653,2.56,1654,3.937,1655,3.288,1656,2.56,1657,1.617,1658,1.617,1659,3.177,1660,2.56,1661,3.613,1662,2.56,1663,1.471,1664,1.617,1665,2.56,1666,1.617,1667,2.56,1668,2.56,1669,1.617,1670,2.56,1671,2.56,1672,5.446,1673,1.617,1674,2.56,1675,1.617,1676,1.617,1677,1.617,1678,1.617,1679,1.617,1680,1.617,1681,1.617,1682,3.937,1683,1.617,1684,1.617,1685,2.56,1686,1.617,1687,1.617,1688,1.617,1689,2.56,1690,1.617,1691,1.617,1692,1.617,1693,1.617,1694,1.617,1695,1.471,1696,1.617,1697,1.617,1698,1.617,1699,1.355,1700,1.617,1701,1.617,1702,1.617,1703,1.617,1704,1.617,1705,1.617,1706,1.617,1707,1.617,1708,1.617,1709,1.617,1710,1.617,1711,1.617,1712,1.258,1713,1.617]],["title/additional-documentation/setup/enabling-accounts-on-firebase.html",[81,0.714,138,0.307,163,0.786,167,1.394,1532,0.908]],["body/additional-documentation/setup/enabling-accounts-on-firebase.html",[17,1.183,18,2.304,61,1.67,63,0.016,71,1.903,73,1.977,78,1.221,81,2.016,82,4.155,138,0.636,146,1.107,160,2.721,163,2.196,166,3.644,167,3.842,211,0.016,212,0.016,281,3.644,284,3.297,298,1.793,440,2.492,496,2.187,542,2.187,555,4.237,566,3.08,601,3.08,622,4.748,779,2.721,821,4.237,1321,3.551,1326,4.237,1547,4.237,1695,3.856,1714,4.748,1715,5.984,1716,6.536,1717,5.524,1718,4.748]],["title/additional-documentation/firebase.html",[81,0.924,138,0.397,1532,1.175]],["body/additional-documentation/firebase.html",[47,0.397,63,0.016,81,1.996,146,1.426,163,1.72,167,3.051,211,0.016,212,0.016,356,1.987,505,4.337,542,2.819,554,2.566,566,3.251,999,2.872,1394,5.013,1428,3.323,1509,3.749,1571,3.251,1719,5.832,1720,5.832,1721,5.832,1722,5.832]],["title/additional-documentation/firebase/firebase-authentication.html",[81,0.806,82,1.794,138,0.346,1532,1.024]],["body/additional-documentation/firebase/firebase-authentication.html",[16,2.856,17,1.258,39,2.607,47,0.339,53,2.779,54,2.607,56,2.779,61,1.857,63,0.015,67,0.985,78,1.102,81,1.863,82,4.339,136,5.107,138,0.766,139,3.823,160,3.28,161,4.468,162,5.267,163,2.246,164,4.284,166,2.779,167,2.607,211,0.015,212,0.015,281,3.425,282,4.284,283,5.723,284,4.148,298,1.994,303,3.425,305,2.049,377,1.973,427,1.542,505,3.204,542,2.636,560,4.284,584,3.204,585,3.823,601,2.779,703,3.478,710,3.204,712,3.478,743,2.779,779,2.455,1018,4.284,1124,3.204,1213,3.204,1277,3.823,1306,5.28,1500,4.284,1554,2.779,1577,4.284,1578,4.284,1588,4.287,1699,3.204,1714,5.28,1715,4.284,1723,4.984,1724,4.984,1725,4.984,1726,4.984,1727,4.984,1728,4.984,1729,4.984,1730,4.984,1731,4.984,1732,4.984,1733,6.142,1734,4.284,1735,4.984,1736,4.984,1737,6.142,1738,4.284,1739,4.984,1740,4.984,1741,4.984]],["title/additional-documentation/firebase/database-structure.html",[138,0.346,1532,1.024,1545,1.932,1712,1.794]],["body/additional-documentation/firebase/database-structure.html",[9,0.613,17,1.26,42,2.617,47,0.419,61,1.859,63,0.015,67,0.921,69,2.165,77,1.5,81,1.65,85,2.986,120,2.317,125,2.709,155,1.317,160,3.631,161,4.287,163,1.475,211,0.015,212,0.015,309,3.838,382,2.641,390,2.087,403,1.219,407,0.953,410,1.791,413,1.705,436,1.981,462,1.341,469,2.317,473,2.919,500,1.883,549,3.492,550,3.838,554,2.202,558,4.3,564,3.838,566,3.719,585,3.838,706,4.723,712,3.492,733,4.3,745,3.492,759,3.675,779,2.464,1034,3.838,1127,2.464,1170,4.297,1277,3.838,1428,3.033,1463,2.789,1496,4.3,1525,4.3,1545,4.738,1574,3.838,1583,5.733,1655,3.492,1663,3.492,1699,3.216,1712,3.981,1718,4.3,1734,4.3,1742,5.003,1743,5.116,1744,5.003,1745,5.003,1746,6.157,1747,6.157,1748,5.003,1749,6.254,1750,5.003,1751,5.003,1752,5.003,1753,5.003,1754,4.3,1755,5.003,1756,5.003,1757,4.3,1758,5.003]],["title/additional-documentation/firebase/firestore-wrapper.html",[138,0.346,1463,1.676,1532,1.024,1743,2.306]],["body/additional-documentation/firebase/firestore-wrapper.html",[9,0.728,17,1.076,23,1.461,45,1.266,47,0.321,48,0.812,50,4.059,61,1.518,62,1.251,63,0.016,67,1.025,68,0.855,69,2.109,73,2.636,75,2.926,76,2.633,78,1.313,81,1.266,94,0.544,98,1.87,120,1.777,125,2.078,131,1.117,148,4.059,153,3.399,160,3.686,166,2.633,182,0.729,211,0.014,212,0.016,263,3.545,284,2.819,286,1.691,289,1.928,307,3.036,320,3.036,375,2.566,382,2.352,403,1.661,410,1.691,436,1.87,468,2.352,473,1.87,478,2.078,554,2.859,567,4.059,667,4.059,703,3.296,712,4.146,743,2.633,759,2.819,779,2.326,901,2.633,926,2.633,958,5.139,1127,2.326,1450,4.059,1463,3.918,1495,5.106,1521,2.819,1543,5.106,1545,4.61,1547,3.622,1581,4.059,1638,3.296,1712,3.545,1738,4.059,1743,5.648,1749,5.586,1754,4.059,1757,5.106,1759,4.722,1760,4.722,1761,4.722,1762,5.94,1763,4.722,1764,4.722,1765,4.722,1766,4.722,1767,4.722,1768,6.498,1769,4.722,1770,4.722,1771,4.722,1772,4.722,1773,4.722,1774,4.722,1775,4.722,1776,5.94,1777,4.722,1778,4.722,1779,4.722,1780,4.722,1781,6.498,1782,5.94,1783,4.722,1784,4.722,1785,4.722,1786,4.722,1787,4.722]],["title/additional-documentation/firebase/firebase-functions.html",[73,1.076,81,0.806,138,0.346,1532,1.024]],["body/additional-documentation/firebase/firebase-functions.html",[9,0.684,16,2.595,17,1.191,53,3.111,54,2.919,61,1.426,63,0.016,67,0.77,68,1.01,73,2.671,76,3.111,81,1.974,85,3.925,125,2.455,155,1.191,161,4.226,162,3.894,163,2.129,166,3.111,211,0.016,212,0.016,281,3.111,303,3.111,427,1.726,435,1.997,541,4.28,542,2.209,543,4.796,566,3.666,601,3.666,709,3.33,901,3.111,1034,4.28,1501,4.226,1537,4.796,1545,3.587,1788,5.579,1789,5.579,1790,5.579,1791,5.579,1792,5.579,1793,5.579,1794,5.579]]],"invertedIndex":[["",{"_index":63,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["0",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["0.100.2",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":669,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1462,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":611,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["10/10",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["112px",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["12/12",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["15.1.10",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":1356,"title":{},"body":{"injectables/ToastService.html":{}}}],["17",{"_index":1555,"title":{},"body":{"overview.html":{}}}],["2",{"_index":736,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/ToastService.html":{}}}],["2.4.1",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":739,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["207px",{"_index":912,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["24a36",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.appspot.com",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseapp.com",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseio.com",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":634,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["3",{"_index":879,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{}}}],["3/3",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["330px",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["340px",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":606,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"overview.html":{}}}],["4.0.0",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":888,"title":{},"body":{"injectables/CourseService.html":{},"overview.html":{}}}],["5.0.0",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["5.12.1",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":1357,"title":{},"body":{"injectables/ToastService.html":{}}}],["6.0.7",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1556,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":662,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["_locat",{"_index":896,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["_log(collectiontitl",{"_index":1786,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["_selectedcategori",{"_index":1372,"title":{},"body":{"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":798,"title":{},"body":{"injectables/CourseService.html":{}}}],["_selectedtool",{"_index":1373,"title":{},"body":{"injectables/ToolService.html":{}}}],["_tab",{"_index":510,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["a.download",{"_index":1137,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a.href",{"_index":1136,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a[param",{"_index":768,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].touppercas",{"_index":772,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["abil",{"_index":1613,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["abov",{"_index":471,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["abstract",{"_index":1666,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ac",{"_index":506,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["acc",{"_index":681,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc.concat(detail",{"_index":1118,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["acc2",{"_index":1425,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":878,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["access",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["accessor",{"_index":839,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":716,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":163,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["account.if",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["ace'",{"_index":538,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["act",{"_index":641,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["action",{"_index":382,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["activ",{"_index":564,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["activatedrout",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["activetab",{"_index":511,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["activetab.readonli",{"_index":636,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["actual_compon",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":555,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["add",{"_index":530,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["add/remov",{"_index":688,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add_circl",{"_index":786,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":802,"title":{},"body":{"injectables/CourseService.html":{}}}],["addcourse(cours",{"_index":810,"title":{},"body":{"injectables/CourseService.html":{}}}],["addit",{"_index":1532,"title":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"index.html":{}}}],["adjust",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["admin",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"dependencies.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["afauth",{"_index":287,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["afauth.authst",{"_index":326,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["affect",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["afterviewinit",{"_index":942,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["again",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["aizasybn6dkjkghs5w2yxtkluu8mcurfxkip3dc",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["along",{"_index":1758,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["alphabet",{"_index":770,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":711,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alt",{"_index":1620,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["alt_attribut",{"_index":1689,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["altcondit",{"_index":1694,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["altern",{"_index":1726,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["although",{"_index":1723,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["angular",{"_index":1019,"title":{},"body":{"components/IssueContainerComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":903,"title":{},"body":{"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":380,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["angularfire2/firestor",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauth",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["angularfireauthmodul",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["answer",{"_index":1279,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["anyth",{"_index":1657,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["api",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["apikey",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["app.compon",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1546,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["appli",{"_index":398,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["applic",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["application/json",{"_index":1194,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":214,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":653,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["approut",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":464,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["architectur",{"_index":1550,"title":{"additional-documentation/architecture.html":{}},"body":{"index.html":{},"additional-documentation/architecture.html":{}}}],["array",{"_index":369,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":1298,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["array|assign",{"_index":1622,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["array||an",{"_index":1626,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["arrow_back",{"_index":1307,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["assign",{"_index":965,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["async",{"_index":696,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach",{"_index":499,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["attach_fil",{"_index":973,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":717,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["auth",{"_index":319,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{}}}],["auth().currentuser.email",{"_index":1219,"title":{},"body":{"injectables/KatanaService.html":{}}}],["auth().currentuser.getidtoken(tru",{"_index":349,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().getredirectresult",{"_index":328,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().setpersistence(auth.auth.persistence.sess",{"_index":342,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().signout",{"_index":347,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().updatecurrentuser(us",{"_index":331,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.googleauthprovid",{"_index":339,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["authdomain",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":82,"title":{"additional-documentation/firebase/firebase-authentication.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["authguard.servic",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["authguardservic",{"_index":36,"title":{"injectables/AuthGuardService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["authguardservice.authstate.subscribe(st",{"_index":1175,"title":{},"body":{"injectables/KatanaService.html":{}}}],["authguardservice.userdetails.displaynam",{"_index":386,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["authstat",{"_index":323,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["automat",{"_index":1714,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["avail",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["await",{"_index":1206,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["b",{"_index":767,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param",{"_index":769,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].touppercas",{"_index":774,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["background",{"_index":816,"title":{},"body":{"injectables/CourseService.html":{}}}],["badg",{"_index":1318,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge'},{'nam",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":1365,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["badge.component.css",{"_index":1319,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1320,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1316,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:15",{"_index":1328,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:19",{"_index":1327,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:23",{"_index":1329,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:27",{"_index":1325,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":1315,"title":{},"body":{"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["bar",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{}}}],["base",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["basic",{"_index":1152,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["be",{"_index":712,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["beautifi",{"_index":544,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["becom",{"_index":1520,"title":{},"body":{"index.html":{}}}],["befor",{"_index":743,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["behind",{"_index":1651,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["belong",{"_index":419,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["below",{"_index":1588,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["best",{"_index":1584,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["between",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["bit",{"_index":1752,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["blank",{"_index":822,"title":{},"body":{"injectables/CourseService.html":{}}}],["blob",{"_index":1132,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["blob([csvreport",{"_index":1133,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["block",{"_index":909,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{}}}],["blue",{"_index":877,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["blueprint",{"_index":498,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["bodi",{"_index":1161,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["body.useridtoken",{"_index":1196,"title":{},"body":{"injectables/KatanaService.html":{}}}],["boolean",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bootstrap",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["both",{"_index":1252,"title":{},"body":{"classes/OptionModel.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bottom",{"_index":459,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["box",{"_index":754,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["breadcrumb",{"_index":353,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":357,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":358,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":936,"title":{},"body":{"modules/HomePageModule.html":{}}}],["breadcrumbscompon",{"_index":177,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["brigham",{"_index":1504,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1553,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1048,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":352,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"index.html":{}}}],["buildeditortab",{"_index":987,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["buildhtml(messag",{"_index":1342,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildinstructornam",{"_index":644,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["buildrouterlink",{"_index":360,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":365,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["built",{"_index":1495,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["button",{"_index":364,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["byui",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["c.id",{"_index":776,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["call",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["call_missed_outgo",{"_index":872,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["came",{"_index":1012,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["campu",{"_index":491,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["canactiv",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["cancel",{"_index":1140,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["canva",{"_index":452,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvas_api_token",{"_index":1519,"title":{},"body":{"index.html":{}}}],["canvasitem",{"_index":1654,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.gethtml",{"_index":1659,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.sethtml($.html",{"_index":1687,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.upd",{"_index":1670,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["capit",{"_index":1603,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card",{"_index":818,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card'},{'nam",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":1361,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["card.component.css",{"_index":943,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":944,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":941,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":949,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:21",{"_index":950,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:26",{"_index":948,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:32",{"_index":959,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:39",{"_index":954,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:61",{"_index":951,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":940,"title":{},"body":{"components/IssueCardComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["card|se",{"_index":1632,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["carri",{"_index":557,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["case",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["cast",{"_index":904,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["catch",{"_index":1207,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["catch(console.error",{"_index":329,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["catch(funct",{"_index":345,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["catch(this.errorhandl",{"_index":1192,"title":{},"body":{"injectables/KatanaService.html":{}}}],["categor",{"_index":409,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["categori",{"_index":266,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["categories'},{'nam",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":935,"title":{},"body":{"modules/HomePageModule.html":{}}}],["categoriescompon",{"_index":179,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["categories|str",{"_index":1621,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["category.check",{"_index":1301,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["category.icon",{"_index":405,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["category.titl",{"_index":406,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":1297,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":1300,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["caus",{"_index":1690,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["certain",{"_index":519,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["chalk",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["charact",{"_index":625,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["check",{"_index":709,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["check_circl",{"_index":870,"title":{},"body":{"injectables/CourseService.html":{}}}],["check_circle_outlin",{"_index":871,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["checker",{"_index":603,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["cheerio",{"_index":1468,"title":{},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["cheerio.load(canvasitem.gethtml",{"_index":1674,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["chip",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["chip'},{'nam",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["chip.compon",{"_index":1313,"title":{},"body":{"modules/SidebarModule.html":{}}}],["chip.component.css",{"_index":642,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.html",{"_index":643,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.t",{"_index":640,"title":{},"body":{"components/CourseChipComponent.html":{},"coverage.html":{}}}],["chip.component.ts:20",{"_index":648,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:27",{"_index":658,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:33",{"_index":657,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:41",{"_index":649,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:57",{"_index":655,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip/cours",{"_index":639,"title":{},"body":{"components/CourseChipComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["choic",{"_index":433,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["choice.text",{"_index":1055,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["chosen",{"_index":1391,"title":{},"body":{"injectables/ToolService.html":{}}}],["circl",{"_index":742,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":95,"title":{"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classic",{"_index":1348,"title":{},"body":{"injectables/ToastService.html":{}}}],["clear",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["click",{"_index":757,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["clickabl",{"_index":1642,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["client",{"_index":1548,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["clone",{"_index":1513,"title":{},"body":{"index.html":{}}}],["close",{"_index":373,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["closemod",{"_index":361,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["cloud",{"_index":1744,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["cloud_download",{"_index":1138,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["cluster_appmodul",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homepagemodul",{"_index":929,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declar",{"_index":930,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_export",{"_index":931,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_sidebarmodul",{"_index":1308,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_declar",{"_index":1309,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_export",{"_index":1310,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_toolpagemodul",{"_index":1358,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["cluster_toolpagemodule_declar",{"_index":1359,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["code",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["codeeditorcompon",{"_index":181,"title":{"components/CodeEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coinced",{"_index":1727,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["collect",{"_index":1749,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["collectiontitle(string)data",{"_index":1787,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["color",{"_index":817,"title":{},"body":{"injectables/CourseService.html":{},"components/StatBadgeComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["command",{"_index":1533,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":933,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["compat",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":956,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["compodoc",{"_index":1573,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component'",{"_index":1098,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["component_templ",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["comput",{"_index":1089,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["condit",{"_index":1661,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["conflict",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consol",{"_index":1547,"title":{},"body":{"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["console.error(",{"_index":1245,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(`${course.course_cod",{"_index":1223,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(error",{"_index":346,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["console.log(typeof",{"_index":1343,"title":{},"body":{"injectables/ToastService.html":{}}}],["const",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(afauth",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(courseservic",{"_index":647,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":1148,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":700,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{}}}],["constructor(opt",{"_index":1254,"title":{},"body":{"classes/OptionModel.html":{}}}],["constructor(priv",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":324,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{},"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":927,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["container'},{'nam",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":1364,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["container.component.css",{"_index":984,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":985,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":983,"title":{},"body":{"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:114",{"_index":1009,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:128",{"_index":1005,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:138",{"_index":1016,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:19",{"_index":996,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:24",{"_index":995,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:29",{"_index":993,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:43",{"_index":1006,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:63",{"_index":997,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:78",{"_index":1014,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:95",{"_index":1003,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":982,"title":{},"body":{"components/IssueContainerComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["content",{"_index":467,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["continu",{"_index":1306,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["control",{"_index":1034,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["control.setvalue(this.issue.tempvalues[optionkey",{"_index":1036,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.updatevalueandvalid",{"_index":1038,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["convert",{"_index":525,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["copi",{"_index":1528,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["core",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":590,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["correctli",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{}}}],["count",{"_index":797,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["cours",{"_index":72,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course'",{"_index":486,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course.account",{"_index":789,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":791,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":683,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["course.course_nam",{"_index":787,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":1214,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.id",{"_index":777,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":788,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":1106,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach((issueitem",{"_index":1111,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach(issueitem",{"_index":1238,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.issueitems.reduce((acc",{"_index":1104,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1424,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":1233,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":790,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":488,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_id",{"_index":480,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_nam",{"_index":487,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_search",{"_index":1707,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["coursechipcompon",{"_index":184,"title":{"components/CourseChipComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursecod",{"_index":858,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":856,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursenam",{"_index":857,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseoverlay",{"_index":893,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["courseresult",{"_index":691,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":784,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":1232,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":1211,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":1226,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselectioncompon",{"_index":186,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":799,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseservic",{"_index":32,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courses.foreach(cours",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":980,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":1072,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":1073,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["coursesidebarcompon",{"_index":188,"title":{"components/CourseSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursesobj",{"_index":800,"title":{},"body":{"injectables/CourseService.html":{}}}],["course}",{"_index":659,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["cover",{"_index":1571,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["coverag",{"_index":1427,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"classes/OptionModel.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["creation",{"_index":1739,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["credenti",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["crumb",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":1088,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrow",{"_index":1099,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrows(issueitem.issues.map(issu",{"_index":1126,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport",{"_index":1109,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport.csv",{"_index":1130,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["ctrl+f",{"_index":583,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["current",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["currentcolor",{"_index":1635,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["currenthtml",{"_index":1645,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["d3",{"_index":1100,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["darken",{"_index":882,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["data",{"_index":958,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["databas",{"_index":1545,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["databaseurl",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datatyp",{"_index":1747,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["db",{"_index":1768,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["decid",{"_index":1592,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["declar",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["decor",{"_index":569,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["default",{"_index":315,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["defaulttext",{"_index":434,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["defin",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delay",{"_index":1691,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["delet",{"_index":863,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["depend",{"_index":215,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1501,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["deprec",{"_index":1165,"title":{},"body":{"injectables/KatanaService.html":{}}}],["describ",{"_index":1521,"title":{},"body":{"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["description|string||a",{"_index":1605,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["design",{"_index":1609,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["desir",{"_index":823,"title":{},"body":{"injectables/CourseService.html":{}}}],["desiredstatu",{"_index":1004,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["detail",{"_index":356,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["details'},{'nam",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":1362,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["details.component.css",{"_index":1059,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":1060,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":1058,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1061,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":1062,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":1057,"title":{},"body":{"components/IssueDetailsComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["determin",{"_index":445,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["develop",{"_index":779,"title":{"additional-documentation/setup/development-environment.html":{}},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["diagram",{"_index":1578,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["direct",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["directori",{"_index":1529,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["disabl",{"_index":601,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["discov",{"_index":438,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discover(canvasitem",{"_index":1656,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discover/search",{"_index":1627,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveri",{"_index":424,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["discoverissu",{"_index":1143,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":1153,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":426,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveroptions|object",{"_index":1625,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveroption}",{"_index":456,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["discover|function||th",{"_index":1590,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discuss",{"_index":453,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dismiss",{"_index":1346,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":411,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dist",{"_index":1530,"title":{},"body":{"index.html":{}}}],["div",{"_index":572,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["do",{"_index":1386,"title":{},"body":{"injectables/ToolService.html":{}}}],["document",{"_index":1428,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["document.documentelement.style.setproperti",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["document.getelementbyid(\"download",{"_index":1131,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["document.queryselector('.mod",{"_index":1291,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1355,"title":{},"body":{"injectables/ToastService.html":{}}}],["document.queryselector('app",{"_index":906,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["document](./documentation/addit",{"_index":1522,"title":{},"body":{"index.html":{}}}],["documentation/setup/set",{"_index":1523,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":556,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dogooglelogin",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["don't",{"_index":553,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/ToolService.html":{}}}],["down",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["download",{"_index":1087,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["downloadissu",{"_index":1081,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dropdown",{"_index":431,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dsv",{"_index":1101,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["dure",{"_index":562,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dynam",{"_index":1382,"title":{},"body":{"injectables/ToolService.html":{},"dependencies.html":{}}}],["e",{"_index":677,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["e.messag",{"_index":1349,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target",{"_index":1351,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target.readyst",{"_index":1352,"title":{},"body":{"injectables/ToastService.html":{}}}],["each",{"_index":370,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"interfaces/Tool.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["earlier",{"_index":1704,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["easi",{"_index":1760,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["easier",{"_index":1748,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["edit",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor",{"_index":441,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor'",{"_index":522,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor'},{'nam",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["editor.compon",{"_index":1366,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["editor.component.css",{"_index":508,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.html",{"_index":509,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.t",{"_index":504,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:105",{"_index":547,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:128",{"_index":534,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":533,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:27",{"_index":529,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":571,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":565,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":563,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":574,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":518,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:71",{"_index":540,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor/cod",{"_index":503,"title":{},"body":{"components/CodeEditorComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["editorel",{"_index":512,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editortab",{"_index":442,"title":{"interfaces/EditorTab.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editortab.readonli",{"_index":1044,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editortab.titl",{"_index":1041,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editortabs|object",{"_index":1630,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editsess",{"_index":580,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editsession(cod",{"_index":597,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["effect",{"_index":1047,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["element",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["elementref",{"_index":568,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["eltyp",{"_index":1002,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["email",{"_index":1778,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["emit",{"_index":321,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["empti",{"_index":620,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["empty/miss",{"_index":1680,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["enabl",{"_index":167,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["end",{"_index":1535,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1574,"title":{"additional-documentation/architecture/server-endpoints.html":{}},"body":{"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["enter",{"_index":1697,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["entir",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["environ",{"_index":246,"title":{"additional-documentation/setup/development-environment.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1190,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["error('cours",{"_index":1193,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('discov",{"_index":1202,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('fix",{"_index":1230,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('socket",{"_index":1228,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('toollist",{"_index":1182,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandl",{"_index":1144,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandler(",{"_index":1155,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorpagecompon",{"_index":190,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["esseci",{"_index":1600,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["etc",{"_index":455,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["even",{"_index":585,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["event",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":318,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["everyth",{"_index":1711,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ex",{"_index":960,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["exampl",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exist",{"_index":1213,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["expand",{"_index":576,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["expandview",{"_index":514,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["export",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["expos",{"_index":1772,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["express",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["extern",{"_index":1782,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["fail",{"_index":466,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["failed'].includes(this.issue.statu",{"_index":1049,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["fairli",{"_index":1698,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fall",{"_index":780,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["feedback",{"_index":355,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["feel",{"_index":1417,"title":{},"body":{"injectables/ToolService.html":{}}}],["few",{"_index":1644,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filenam",{"_index":1129,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fill",{"_index":1703,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filter",{"_index":720,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["find",{"_index":622,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["fire",{"_index":541,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebas",{"_index":81,"title":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebase.auth",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["firebase.html",{"_index":1524,"title":{},"body":{"index.html":{}}}],["firestor",{"_index":1743,"title":{"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestore'",{"_index":1770,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestorewrapp",{"_index":1766,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestorewrapper.initializefirebas",{"_index":1769,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["first",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["fit",{"_index":652,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["fix",{"_index":437,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fix(canvasitem",{"_index":1668,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fix/discov",{"_index":1576,"title":{},"body":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}}}],["fixabl",{"_index":1231,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":1236,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":1243,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixed'|'th",{"_index":1619,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixedissu",{"_index":1667,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixedmessag",{"_index":1693,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixissu",{"_index":1145,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":1157,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixmessag",{"_index":460,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["fixmessage|string||thi",{"_index":1618,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixopt",{"_index":439,"title":{"interfaces/FixOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixoptions|object",{"_index":1629,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixoption}",{"_index":457,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["fix|function||th",{"_index":1594,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["flag",{"_index":1543,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["flatissuedetail",{"_index":1113,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["flow",{"_index":1577,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["folder",{"_index":966,"title":{},"body":{"components/IssueCardComponent.html":{},"index.html":{}}}],["follow",{"_index":1509,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["form",{"_index":428,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["format",{"_index":650,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["formcontrol",{"_index":1259,"title":{},"body":{"classes/OptionModel.html":{}}}],["formcontrol}",{"_index":1251,"title":{},"body":{"classes/OptionModel.html":{}}}],["formgroup",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["formgroup(group",{"_index":1266,"title":{},"body":{"classes/OptionModel.html":{}}}],["formsmodul",{"_index":937,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["forward",{"_index":1679,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["found",{"_index":1608,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["four",{"_index":1771,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["framework",{"_index":1499,"title":{},"body":{"index.html":{}}}],["front",{"_index":1534,"title":{},"body":{"index.html":{}}}],["full",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/CourseService.html":{}}}],["fullbuild",{"_index":1538,"title":{},"body":{"index.html":{}}}],["function",{"_index":73,"title":{"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["functions.auth.user().oncr",{"_index":1790,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["g",{"_index":1730,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["gather",{"_index":1278,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["gavel",{"_index":974,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["get",{"_index":752,"title":{"index.html":{}},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{}}}],["getbackgroundcolorclass",{"_index":803,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbackgroundcolorclasses(statu",{"_index":814,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbuttonclass",{"_index":988,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":1001,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":697,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":804,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":819,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses(bodi",{"_index":1159,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":645,"title":{},"body":{"components/CourseChipComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount(statu",{"_index":654,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissueitem",{"_index":1082,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getissueitems(cours",{"_index":1090,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getselectedcategori",{"_index":1396,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":841,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1400,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":805,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":825,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclass",{"_index":806,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":828,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettoollist",{"_index":1146,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":807,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":831,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettypeicon",{"_index":946,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gi",{"_index":629,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["git",{"_index":1512,"title":{},"body":{"index.html":{}}}],["git+https://github.com/byuitechops/canva",{"_index":1464,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":1763,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["github:byuitechops/logg",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["given",{"_index":703,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["gmail",{"_index":1735,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["go",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["goe",{"_index":1350,"title":{},"body":{"injectables/ToastService.html":{}}}],["good",{"_index":1647,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["googl",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["grab",{"_index":443,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["green",{"_index":880,"title":{},"body":{"injectables/CourseService.html":{}}}],["grey",{"_index":881,"title":{},"body":{"injectables/CourseService.html":{}}}],["group",{"_index":1261,"title":{},"body":{"classes/OptionModel.html":{}}}],["group[option.key",{"_index":1264,"title":{},"body":{"classes/OptionModel.html":{}}}],["handl",{"_index":1170,"title":{},"body":{"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["header",{"_index":1125,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":1195,"title":{},"body":{"injectables/KatanaService.html":{}}}],["height",{"_index":536,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["help",{"_index":560,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["help_outlin",{"_index":975,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["helper",{"_index":1249,"title":{},"body":{"classes/OptionModel.html":{}}}],["here",{"_index":500,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["hex",{"_index":1639,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["high",{"_index":1579,"title":{"additional-documentation/architecture/high-level-overview.html":{}},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["highlight",{"_index":521,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["hold",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/OptionsViewComponent.html":{}}}],["home",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["home/error",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tool",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/issu",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/opt",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["homepagemodul",{"_index":223,"title":{"modules/HomePageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":1745,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["html",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlelement",{"_index":905,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["htmlinputel",{"_index":1299,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["htmlkey",{"_index":444,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlstring",{"_index":1042,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["http",{"_index":1151,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclient",{"_index":1149,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":1173,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpmodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/angular/angularfire2",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["https://katana",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.npmjs.com/package/angular2",{"_index":1103,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["i.",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{}}}],["icon",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["icons|'text_rotation_non",{"_index":1610,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["icon|string||ani",{"_index":1607,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["id",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idaho",{"_index":1507,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["idtoken",{"_index":308,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["id|string||th",{"_index":1596,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["if(issue.statu",{"_index":1669,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["imag",{"_index":1672,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image).attr('alt",{"_index":1686,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image.attr('alt",{"_index":1677,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image.attr('src",{"_index":1683,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["images.each((i",{"_index":1676,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["img",{"_index":1675,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["img[src=\"${issue.details.image}\"]`).first",{"_index":1684,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["immedi",{"_index":1537,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["implement",{"_index":320,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["import",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["in...you",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["includ",{"_index":469,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["index",{"_index":285,"title":{"index.html":{}},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":830,"title":{},"body":{"injectables/CourseService.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inform",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["initi",{"_index":567,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["initializefirebas",{"_index":1780,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["inject",{"_index":277,"title":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":429,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["input('index",{"_index":1023,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issu",{"_index":1022,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issueitem",{"_index":961,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('posit",{"_index":962,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('searchphras",{"_index":578,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('sid",{"_index":1333,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1331,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1330,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('tab",{"_index":577,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('titlecolor",{"_index":1332,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert",{"_index":545,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["insert_drive_fil",{"_index":971,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instal",{"_index":1511,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":566,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["instanceof",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["instantan",{"_index":1732,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["instructor",{"_index":493,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["instructor'",{"_index":651,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructornam",{"_index":665,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructur",{"_index":1498,"title":{},"body":{"index.html":{}}}],["integr",{"_index":505,"title":{},"body":{"components/CodeEditorComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["interfac",{"_index":407,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["intern",{"_index":1781,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["intial",{"_index":1007,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isad",{"_index":698,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":707,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isfix",{"_index":989,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isn\\'t",{"_index":923,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["isn\\\\'t",{"_index":928,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["issu",{"_index":137,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue'",{"_index":470,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue.formgroup",{"_index":1240,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.formgroup.valu",{"_index":1241,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.optionvalu",{"_index":1119,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.optionvalues.newalttext",{"_index":1685,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.questionmodel",{"_index":1242,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.statu",{"_index":680,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.titl",{"_index":981,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["issuecardcompon",{"_index":193,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercompon",{"_index":195,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercomponent}",{"_index":1063,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["issuedetail",{"_index":986,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":197,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":462,"title":{"interfaces/IssueItem.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["issueitem'",{"_index":952,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.categori",{"_index":1121,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.course_id",{"_index":853,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueNavComponent.html":{}}}],["issueitem.issu",{"_index":1105,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":679,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["issueitem.issues.foreach(issu",{"_index":1239,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.issues.includes(issu",{"_index":1107,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":866,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.item_id",{"_index":1120,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.link",{"_index":1122,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.newissue(titl",{"_index":1662,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.titl",{"_index":979,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":1234,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issueitem}",{"_index":494,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["issuelistcompon",{"_index":199,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuenavcompon",{"_index":201,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":682,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["issue}",{"_index":484,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue}'",{"_index":1025,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["it'",{"_index":549,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["item",{"_index":477,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["item'",{"_index":994,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["item_id",{"_index":482,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_typ",{"_index":953,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["itemset",{"_index":1380,"title":{},"body":{"injectables/ToolService.html":{}}}],["itemsettings|thi",{"_index":1616,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["itself",{"_index":573,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["it|fix",{"_index":1595,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["j",{"_index":1112,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["js",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1751,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["json.parse(event.data",{"_index":1222,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":1215,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":861,"title":{},"body":{"injectables/CourseService.html":{}}}],["json.stringify(messag",{"_index":1345,"title":{},"body":{"injectables/ToastService.html":{}}}],["katan",{"_index":1722,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["katana",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["katana'",{"_index":1572,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["katana.servic",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{}}}],["katana/server/node_tool",{"_index":1701,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["katana/server/node_tools.j",{"_index":1705,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["katanaservic",{"_index":33,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"coverage.html":{}}}],["katanaservice.error",{"_index":921,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.messag",{"_index":922,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.statu",{"_index":924,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.socket",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["kebob",{"_index":1717,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["keep",{"_index":584,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["key",{"_index":427,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["key.includes('katana_cours",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["keystrok",{"_index":1010,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["key|type|options|description|exampl",{"_index":1589,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["last",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":692,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["later",{"_index":1383,"title":{},"body":{"injectables/ToolService.html":{}}}],["launch",{"_index":1536,"title":{},"body":{"index.html":{}}}],["layout",{"_index":1653,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["learn",{"_index":1496,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["left",{"_index":821,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["legend",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["letter",{"_index":1598,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["level",{"_index":1580,"title":{"additional-documentation/architecture/high-level-overview.html":{}},"body":{}}],["lighten",{"_index":883,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["link",{"_index":402,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["linknam",{"_index":1549,"title":{},"body":{"index.html":{}}}],["linter/syntax",{"_index":602,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["list",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["list'},{'nam",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":1360,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["list.component.css",{"_index":1068,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":1069,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":1067,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":1070,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:17",{"_index":1071,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":1066,"title":{},"body":{"components/IssueListComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["listen",{"_index":1174,"title":{},"body":{"injectables/KatanaService.html":{}}}],["load",{"_index":387,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["loc",{"_index":1411,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":1413,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":1415,"title":{},"body":{"injectables/ToolService.html":{}}}],["local",{"_index":812,"title":{},"body":{"injectables/CourseService.html":{}}}],["localhost:8000",{"_index":1539,"title":{},"body":{"index.html":{}}}],["locat",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["log",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["logger",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["logic",{"_index":1650,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["login",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["loguserstatu",{"_index":1147,"title":{},"body":{"injectables/KatanaService.html":{}}}],["loguserstatus(useremail",{"_index":1163,"title":{},"body":{"injectables/KatanaService.html":{}}}],["long",{"_index":1784,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["look",{"_index":1394,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/firebase.html":{}}}],["loop",{"_index":1733,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["lowercas",{"_index":1597,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["made",{"_index":1663,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["magic",{"_index":1387,"title":{},"body":{"injectables/ToolService.html":{}}}],["main",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["mainli",{"_index":795,"title":{},"body":{"injectables/CourseService.html":{}}}],["maintain",{"_index":1508,"title":{},"body":{"index.html":{}}}],["mainten",{"_index":1503,"title":{},"body":{"index.html":{}}}],["major",{"_index":1649,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["make",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["manag",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["mani",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["manual",{"_index":1741,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["mass",{"_index":1502,"title":{},"body":{"index.html":{}}}],["master",{"_index":783,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["materi",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["materialize]{@link",{"_index":1102,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializeact",{"_index":379,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":934,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["matter",{"_index":527,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxlin",{"_index":539,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["mcicon",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mdicon",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mean",{"_index":575,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["meet",{"_index":1660,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["menu",{"_index":1716,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["messag",{"_index":458,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["minim",{"_index":1664,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["mint",{"_index":886,"title":{},"body":{"injectables/CourseService.html":{}}}],["miscellan",{"_index":1557,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1682,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["modal",{"_index":374,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":359,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalisopen",{"_index":1270,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["mode",{"_index":425,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["modifi",{"_index":704,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":213,"title":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["module.export",{"_index":1688,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["moduleitem",{"_index":483,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["more",{"_index":759,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["more_vert",{"_index":1139,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":1678,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["much",{"_index":624,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["multiselect",{"_index":432,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["mute",{"_index":1544,"title":{},"body":{"index.html":{}}}],["n",{"_index":1123,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["name1",{"_index":771,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":773,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["names.length",{"_index":668,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0",{"_index":672,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0][0",{"_index":673,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1",{"_index":674,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1][0",{"_index":671,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["nav",{"_index":1078,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":1363,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["nav.component.css",{"_index":1079,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":1080,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":1077,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:25",{"_index":1084,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:34",{"_index":1095,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:35",{"_index":1097,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:36",{"_index":1096,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:43",{"_index":1092,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:50",{"_index":1085,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:59",{"_index":1091,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:72",{"_index":1094,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:82",{"_index":1086,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":1076,"title":{},"body":{"components/IssueNavComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["navig",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["navigationend",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["needl",{"_index":631,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["new",{"_index":298,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["newalttext",{"_index":1696,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["newcolor",{"_index":1641,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["newli",{"_index":1582,"title":{},"body":{"additional-documentation/setup.html":{}}}],["newstatu",{"_index":1015,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["newwidth",{"_index":911,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["ng",{"_index":1526,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":947,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["ngoninit",{"_index":515,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["node",{"_index":999,"title":{"additional-documentation/setup/node-tools.html":{}},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["node_tool_template.j",{"_index":1702,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodej",{"_index":1515,"title":{},"body":{"index.html":{}}}],["nodetool(require('./node_tools/alt_attributes.j",{"_index":1709,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require('./node_tools/course_search.j",{"_index":1708,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require(./node_tools/tool_file.j",{"_index":1710,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["non",{"_index":1736,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["none",{"_index":667,"title":{},"body":{"components/CourseChipComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["nosql",{"_index":1746,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["note",{"_index":1638,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["noth",{"_index":1761,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["notif",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["notifi",{"_index":1335,"title":{},"body":{"injectables/ToastService.html":{}}}],["npm",{"_index":1517,"title":{},"body":{"index.html":{}}}],["null",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["number",{"_index":481,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["numer",{"_index":765,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":403,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["object.entries(issue.details).reduce((acc",{"_index":1114,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["object.key",{"_index":1017,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":854,"title":{},"body":{"injectables/CourseService.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":1294,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["object.keys(this.issue.html).length",{"_index":1052,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(this.issue.tempvalues).foreach(optionkey",{"_index":1033,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object:const",{"_index":1706,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["observ",{"_index":313,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["occur",{"_index":1581,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["octet/stream",{"_index":1134,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["on",{"_index":901,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["onc",{"_index":760,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["onchang",{"_index":990,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onchange(optionkey",{"_index":1008,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["oninit",{"_index":507,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["onlin",{"_index":490,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["onlyself",{"_index":1037,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onsubmit",{"_index":1271,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open",{"_index":377,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["open/clos",{"_index":1275,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":684,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":646,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["openmod",{"_index":362,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["opportun",{"_index":1729,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["option",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["option'",{"_index":1634,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["option.descript",{"_index":1054,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":1263,"title":{},"body":{"classes/OptionModel.html":{}}}],["option.titl",{"_index":1053,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["optionkey",{"_index":1011,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["optionmodel",{"_index":422,"title":{"classes/OptionModel.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["optionmodel(this.toolservice.selectedtool.discoveropt",{"_index":1288,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionmodel(this.toolservice.selectedtool.fixopt",{"_index":1029,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["options.altcondition.includes('al",{"_index":1681,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["options.categories.push(category.id",{"_index":1302,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":1295,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionsviewcompon",{"_index":203,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["optionvalu",{"_index":472,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["order",{"_index":762,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["other",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["otherwis",{"_index":1636,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["out",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["output",{"_index":317,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["outsid",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["over",{"_index":558,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["overlay",{"_index":687,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{}}}],["overlay.classnam",{"_index":907,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overlay.style.display",{"_index":908,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overview",{"_index":1554,"title":{"overview.html":{},"additional-documentation/architecture/high-level-overview.html":{}},"body":{"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["owner",{"_index":1794,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["packag",{"_index":1450,"title":{"dependencies.html":{}},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["page",{"_index":138,"title":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["page'},{'nam",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["page.compon",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page.component.css",{"_index":918,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.html",{"_index":919,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.t",{"_index":917,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:9",{"_index":920,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.modul",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.t",{"_index":932,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["page/breadcrumbs/breadcrumbs.component.t",{"_index":351,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:22",{"_index":363,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:31",{"_index":378,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:37",{"_index":376,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:44",{"_index":372,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:53",{"_index":366,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/categories/categories.compon",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["page/categories/categories.component.t",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["page/categories/categories.component.ts:14",{"_index":396,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:21",{"_index":401,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:29",{"_index":400,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/cod",{"_index":502,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["page/error",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["page/hom",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page/issu",{"_index":939,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["page/opt",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["page/stat",{"_index":1314,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["page/tool",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["page|'html",{"_index":1617,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["page|'thi",{"_index":1606,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["pair",{"_index":1115,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[0",{"_index":1116,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[1",{"_index":1117,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["panorama_fish_ey",{"_index":873,"title":{},"body":{"injectables/CourseService.html":{}}}],["param",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["paramet",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["parser",{"_index":1461,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":524,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["path",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{}}}],["pathmatch",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":368,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":492,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["persist",{"_index":925,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["pertin",{"_index":1779,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["phrase",{"_index":621,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["piec",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["pill",{"_index":1317,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["place",{"_index":1418,"title":{},"body":{"injectables/ToolService.html":{}}}],["platform",{"_index":489,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pleas",{"_index":926,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["point",{"_index":1384,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/architecture.html":{}}}],["popul",{"_index":705,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["port",{"_index":1541,"title":{},"body":{"index.html":{}}}],["posit",{"_index":718,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["possibl",{"_index":1665,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["practic",{"_index":1585,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["pre",{"_index":1212,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pretti",{"_index":623,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["prevent",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["primari",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["privat",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["process",{"_index":305,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["processingmessag",{"_index":1374,"title":{},"body":{"injectables/ToolService.html":{}}}],["prod",{"_index":1527,"title":{},"body":{"index.html":{}}}],["produc",{"_index":1655,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["product",{"_index":1525,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["project",{"_index":1715,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["projectid",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":337,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["promise(async",{"_index":1178,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["prop",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["properli",{"_index":1765,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["properti",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["provid",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["providedin",{"_index":846,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["provider.addscope('email",{"_index":341,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["provider.addscope('profil",{"_index":340,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["public",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["purpos",{"_index":410,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["put",{"_index":1258,"title":{},"body":{"classes/OptionModel.html":{}}}],["queri",{"_index":740,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":968,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":972,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["questionmodel",{"_index":1237,"title":{},"body":{"injectables/KatanaService.html":{}}}],["quit",{"_index":1738,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["quiz",{"_index":479,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["quizquest",{"_index":967,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["quizquestions|an",{"_index":1623,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["quizz",{"_index":454,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ran",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["rc.11",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["rc.2",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["reactiv",{"_index":1250,"title":{},"body":{"classes/OptionModel.html":{}}}],["reactiveformsmodul",{"_index":938,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["read",{"_index":1646,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["readonli",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reason",{"_index":552,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["recommend",{"_index":1785,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["red",{"_index":884,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["redirect",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["redirectto",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":554,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["referenc",{"_index":1658,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["refresh",{"_index":1792,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["reg",{"_index":627,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regard",{"_index":1719,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["regex",{"_index":526,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp",{"_index":528,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp(this.searchphras",{"_index":628,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["reject",{"_index":338,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(",{"_index":1671,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(new",{"_index":1181,"title":{},"body":{"injectables/KatanaService.html":{}}}],["relat",{"_index":550,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["reload",{"_index":371,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["remov",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["remove_circl",{"_index":785,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removeal",{"_index":894,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["removecours",{"_index":808,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":833,"title":{},"body":{"injectables/CourseService.html":{}}}],["render",{"_index":955,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":737,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["report",{"_index":1128,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["repositori",{"_index":1514,"title":{},"body":{"index.html":{}}}],["repres",{"_index":417,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["request",{"_index":309,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["requir",{"_index":436,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["require('./firestor",{"_index":1767,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["require('cheerio",{"_index":1673,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reset",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["resolv",{"_index":1179,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["resolve(data",{"_index":1198,"title":{},"body":{"injectables/KatanaService.html":{}}}],["rest",{"_index":559,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["restor",{"_index":475,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["result",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["retriev",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["retrievetoken",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["return",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["revers",{"_index":761,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["revok",{"_index":1791,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["right",{"_index":1326,"title":{},"body":{"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToolService.html":{}}}],["router.navigate([`home/tools/${this.toolservice.selectedtool.id}/opt",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodul",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["routermodule.forroot",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":1718,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["run",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["run|se",{"_index":1628,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["rxj",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["safe",{"_index":591,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["same",{"_index":758,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["same|'th",{"_index":1604,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["same|'the_tool_nam",{"_index":1601,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["save",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["screen",{"_index":1389,"title":{},"body":{"injectables/ToolService.html":{}}}],["screenshot",{"_index":1586,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["search",{"_index":523,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["search_term",{"_index":734,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":693,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbox",{"_index":588,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchphras",{"_index":517,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchtext",{"_index":694,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["search|'fix",{"_index":1614,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["section.at",{"_index":1587,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["see",{"_index":710,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["seen",{"_index":1631,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["select",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["selectedcategori",{"_index":1395,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":1405,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcours",{"_index":840,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedcourse(cours",{"_index":848,"title":{},"body":{"injectables/CourseService.html":{}}}],["selecteddiscoveropt",{"_index":1375,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":801,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedtool",{"_index":1399,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":1408,"title":{},"body":{"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{}}}],["selection.component.css",{"_index":689,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":690,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":686,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:121",{"_index":708,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":1367,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:17",{"_index":726,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":727,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:20",{"_index":1368,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:21",{"_index":719,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":723,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:25",{"_index":725,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":724,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:31",{"_index":722,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":701,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":721,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:50",{"_index":702,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:85",{"_index":714,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":685,"title":{},"body":{"components/CourseSelectionComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["selection/tool",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":1083,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":1093,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":745,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["sent",{"_index":1347,"title":{},"body":{"injectables/ToastService.html":{}}}],["sentiment_very_dissatisfi",{"_index":1075,"title":{},"body":{"components/IssueListComponent.html":{}}}],["separ",{"_index":1764,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["server",{"_index":77,"title":{"additional-documentation/architecture/server-endpoints.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["server/settings.json",{"_index":1542,"title":{},"body":{"index.html":{}}}],["server_log",{"_index":1754,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["serverdomain",{"_index":1142,"title":{},"body":{"injectables/KatanaService.html":{}}}],["serverlog(data",{"_index":1774,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["servic",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["session",{"_index":543,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["sessionstorage.selectedcategori",{"_index":1406,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage.selectedcours",{"_index":849,"title":{},"body":{"injectables/CourseService.html":{}}}],["sessionstorage.selectedtool",{"_index":1409,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":860,"title":{},"body":{"injectables/CourseService.html":{}}}],["set",{"_index":146,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{}}}],["seteditorsess",{"_index":516,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["seteditorsession(tab",{"_index":546,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["setissuestatu",{"_index":991,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":1013,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setselectedcategori",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":399,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcours",{"_index":895,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["setselectedcourse(cours",{"_index":843,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{}}}],["setselectedtool(tool",{"_index":1402,"title":{},"body":{"injectables/ToolService.html":{}}}],["settimeout",{"_index":1354,"title":{},"body":{"injectables/ToastService.html":{}}}],["setup",{"_index":1127,"title":{"additional-documentation/setup.html":{}},"body":{"components/IssueNavComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["sever",{"_index":1728,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["short",{"_index":1643,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["show",{"_index":532,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["showeditor",{"_index":992,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["shown",{"_index":827,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{}}}],["side",{"_index":1321,"title":{},"body":{"components/StatBadgeComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["sidebar",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sidebar.compon",{"_index":1312,"title":{},"body":{"modules/SidebarModule.html":{}}}],["sidebar.component.css",{"_index":891,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.html",{"_index":892,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":890,"title":{},"body":{"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:17",{"_index":897,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:26",{"_index":902,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:34",{"_index":898,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:57",{"_index":900,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:64",{"_index":899,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar/cours",{"_index":889,"title":{},"body":{"components/CourseSidebarComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["sidebar/sidebar.modul",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarmodul",{"_index":224,"title":{"modules/SidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["sign",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["signific",{"_index":1755,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["signinwithredirect(provid",{"_index":344,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["signout",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["similar",{"_index":1583,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpl",{"_index":1699,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpli",{"_index":1652,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["singl",{"_index":461,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{}}}],["size",{"_index":605,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["sizeof",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["skip",{"_index":465,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["small",{"_index":1759,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["socket",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["socket.addeventlistener('messag",{"_index":1221,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.addeventlistener('open",{"_index":1210,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.onerror",{"_index":1227,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":1220,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sole",{"_index":1742,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["sort",{"_index":715,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":699,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":713,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["space",{"_index":607,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["spawn",{"_index":581,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["speak",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["specif",{"_index":468,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["specifi",{"_index":824,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["spin",{"_index":1531,"title":{},"body":{"index.html":{}}}],["split",{"_index":664,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["spring",{"_index":782,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["src/.../firebase.auth.t",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authguard.service.t",{"_index":278,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/authguard.service.ts:101",{"_index":306,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:20",{"_index":314,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:25",{"_index":316,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:30",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:36",{"_index":311,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:37",{"_index":312,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:63",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:71",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:91",{"_index":310,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/classes.t",{"_index":1248,"title":{},"body":{"classes/OptionModel.html":{},"coverage.html":{}}}],["src/app/classes.ts:14",{"_index":1255,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/classes.ts:27",{"_index":1256,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/course.service.t",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{}}}],["src/app/course.service.ts:113",{"_index":832,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:125",{"_index":826,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:142",{"_index":829,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:158",{"_index":815,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:19",{"_index":837,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:24",{"_index":835,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:29",{"_index":838,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:34",{"_index":836,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:36",{"_index":842,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:40",{"_index":844,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:47",{"_index":845,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:49",{"_index":809,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:63",{"_index":811,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:82",{"_index":834,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:95",{"_index":820,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/firebase.auth.t",{"_index":1435,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/hom",{"_index":350,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["src/app/interfaces.t",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["src/app/katana.service.t",{"_index":1141,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/katana.service.ts:119",{"_index":1164,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:134",{"_index":1154,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:21",{"_index":1169,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:210",{"_index":1158,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:26",{"_index":1150,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:294",{"_index":1156,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:59",{"_index":1172,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:64",{"_index":1162,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:91",{"_index":1160,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/sidebar/cours",{"_index":638,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.module.t",{"_index":1311,"title":{},"body":{"modules/SidebarModule.html":{}}}],["src/app/toast.service.t",{"_index":1334,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:11",{"_index":1337,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:22",{"_index":1341,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:56",{"_index":1339,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":501,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":1371,"title":{},"body":{"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:23",{"_index":1381,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:36",{"_index":1385,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:40",{"_index":1388,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:44",{"_index":1393,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:49",{"_index":1392,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:54",{"_index":1378,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:58",{"_index":1379,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:62",{"_index":1390,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:64",{"_index":1397,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:67",{"_index":1398,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:72",{"_index":1401,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:75",{"_index":1403,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:78",{"_index":1377,"title":{},"body":{"injectables/ToolService.html":{}}}],["stand",{"_index":1725,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["standard",{"_index":1734,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["start",{"_index":1494,"title":{"index.html":{}},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["startup",{"_index":1783,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["stat",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":205,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1322,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["state",{"_index":474,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["statement",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["stattitl",{"_index":1323,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":322,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["statuscolor",{"_index":876,"title":{},"body":{"injectables/CourseService.html":{}}}],["statuscolors[statu",{"_index":885,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicon",{"_index":869,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicons[statu",{"_index":875,"title":{},"body":{"injectables/CourseService.html":{}}}],["step",{"_index":1510,"title":{},"body":{"index.html":{}}}],["still",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["storag",{"_index":813,"title":{},"body":{"injectables/CourseService.html":{}}}],["storagebucket",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":473,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["straightforward",{"_index":1700,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["string",{"_index":415,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["structur",{"_index":1712,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["style",{"_index":397,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":495,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["subaccount",{"_index":695,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["submit",{"_index":1280,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["subscrib",{"_index":1187,"title":{},"body":{"injectables/KatanaService.html":{}}}],["subscript",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["successfulli",{"_index":1737,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["such",{"_index":478,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["suit",{"_index":1731,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["support",{"_index":1551,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":753,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["suspici",{"_index":1756,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["svg",{"_index":1552,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1497,"title":{},"body":{"index.html":{}}}],["tab",{"_index":440,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["tab'",{"_index":548,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.sess",{"_index":596,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setmode('ace/mode/html",{"_index":598,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.settabsize(4",{"_index":604,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setuseworker(fals",{"_index":600,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setusewrapmode(tru",{"_index":599,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.titl",{"_index":635,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tabl",{"_index":706,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["tab}",{"_index":998,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["tag",{"_index":1021,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tag_fac",{"_index":1074,"title":{},"body":{"components/IssueListComponent.html":{}}}],["take",{"_index":1257,"title":{},"body":{"classes/OptionModel.html":{}}}],["taken",{"_index":1277,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["team",{"_index":1500,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["technic",{"_index":1720,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["tell",{"_index":1591,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["temp",{"_index":1518,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["temporari",{"_index":1724,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["tempvalu",{"_index":476,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["term",{"_index":497,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["termin",{"_index":1516,"title":{},"body":{"index.html":{}}}],["text",{"_index":430,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["text_rotation_non",{"_index":1692,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["them|discov",{"_index":1593,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["then((cours",{"_index":755,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["then(this.dogooglelogin",{"_index":348,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["then(useridtoken",{"_index":1184,"title":{},"body":{"injectables/KatanaService.html":{}}}],["thing",{"_index":794,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcategori",{"_index":1404,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":847,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitem",{"_index":851,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":852,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedtool",{"_index":1407,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._tab",{"_index":592,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this._tabs.foreach(tab",{"_index":594,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.activetab",{"_index":619,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.afauth.auth",{"_index":343,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authguardservice.canactiv",{"_index":1180,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authguardservice.retrievetoken",{"_index":1183,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authstate.emit(fals",{"_index":327,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authstate.emit(this.canactiv",{"_index":334,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":750,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":1416,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.closemod",{"_index":1108,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.course.error",{"_index":676,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.id",{"_index":661,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor",{"_index":666,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.includ",{"_index":670,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.replac",{"_index":663,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitem",{"_index":675,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitems.reduce((acc",{"_index":678,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.courseresult",{"_index":756,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":764,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":766,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce((acc",{"_index":867,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseservice.addcourse(cours",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.courses.find(c",{"_index":775,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach((cours",{"_index":1110,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.courses.foreach(c",{"_index":915,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.courses.length",{"_index":1292,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1423,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":910,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":1224,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.removecourse(c",{"_index":916,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.selectedcours",{"_index":914,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":1225,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedissueitem",{"_index":1064,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":1065,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":859,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.coursesobj[key",{"_index":855,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.dogooglelogin",{"_index":333,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.editor",{"_index":608,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.findall(reg",{"_index":630,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.sethighlightactiveline(tru",{"_index":615,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption(\"maxlin",{"_index":612,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption(\"minlin",{"_index":610,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tab.readonli",{"_index":617,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tru",{"_index":614,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setsession(tab.sess",{"_index":618,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.settheme('ace/theme/termin",{"_index":613,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.error",{"_index":1246,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandl",{"_index":1200,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandler(err",{"_index":1191,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.formgroup",{"_index":1289,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":1296,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":868,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.gettoollist",{"_index":1176,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/api/cours",{"_index":1197,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/api/us",{"_index":1199,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post(`/api/tool",{"_index":1185,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":1027,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup",{"_index":1030,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.get(optionkey",{"_index":1035,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.value[optionkey",{"_index":1051,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.html[editortab.htmlkey",{"_index":1043,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel",{"_index":1028,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel.togroup",{"_index":1031,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":1045,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalu",{"_index":1032,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalues[optionkey",{"_index":1050,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":1026,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":1303,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":747,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.lastsortedbi",{"_index":763,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":381,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":1293,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":1260,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.optionmodel",{"_index":1287,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":1290,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":1262,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.removecourse(cours",{"_index":862,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.router.navig",{"_index":335,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.router.navigate(['hom",{"_index":1247,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.router.navigate([`home/tools/${this.toolservice.selectedtool.id}/issu",{"_index":1304,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":383,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":744,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":751,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchphras",{"_index":626,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":735,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":741,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":864,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":865,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedissueitem",{"_index":850,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.seteditorsession(this._tabs[0",{"_index":616,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.sockets.push(socket",{"_index":1209,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":748,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.tab",{"_index":593,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":749,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.toastservice.toasterror(err",{"_index":1244,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":1414,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":1204,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":1203,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":404,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":1218,"title":{},"body":{"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.editortab",{"_index":1039,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.editortabs.map(editortab",{"_index":1040,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":1217,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":1189,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":964,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":969,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.us",{"_index":325,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.user.subscribe(us",{"_index":330,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetail",{"_index":332,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetails.email.includes('@byui.edu",{"_index":336,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.viewexpand",{"_index":633,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["those",{"_index":561,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["though",{"_index":586,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["thought",{"_index":1750,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["three",{"_index":733,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["through",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["throughout",{"_index":1633,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["time",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["titl",{"_index":413,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["titlecolor",{"_index":1324,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["title|string||th",{"_index":1602,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toast",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1353,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1338,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1336,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1340,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":35,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice.toast('you\\'l",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["toggl",{"_index":535,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["togroup",{"_index":1253,"title":{},"body":{"classes/OptionModel.html":{}}}],["token",{"_index":1793,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["tool",{"_index":47,"title":{"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["tool'",{"_index":423,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["tool.icon",{"_index":1369,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":1410,"title":{},"body":{"injectables/ToolService.html":{}}}],["tool.servic",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":1370,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":1216,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool_log",{"_index":1757,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["toolcategori",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolcategory|string|html",{"_index":1615,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolid",{"_index":1201,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":1188,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toollog(data",{"_index":1775,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["toolpagemodul",{"_index":225,"title":{"modules/ToolPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{}}}],["toolselectioncompon",{"_index":208,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":34,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1426,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selectedcategory.titl",{"_index":384,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["toolservice.selecteddiscoveropt",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1305,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.fixedmessag",{"_index":1056,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":385,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toollist",{"_index":1177,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolservice.toolviewopen",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":957,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["tooltyp",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tooltype|string|fix/search|thi",{"_index":1611,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolview",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":209,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":1376,"title":{},"body":{"injectables/ToolService.html":{}}}],["tool|['assign",{"_index":1624,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["top",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{}}}],["total",{"_index":656,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["track",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tri",{"_index":1205,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["true",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["two",{"_index":1648,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["type",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["typeicon",{"_index":945,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":978,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeof",{"_index":1344,"title":{},"body":{"injectables/ToastService.html":{}}}],["types/d3",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["types[this.issueitem.categori",{"_index":970,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typic",{"_index":1776,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["undefin",{"_index":778,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":496,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["underscor",{"_index":1599,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["unexpectedli",{"_index":1229,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["univers",{"_index":1506,"title":{},"body":{"index.html":{}}}],["untouch",{"_index":463,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["unus",{"_index":587,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["unwant",{"_index":1740,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["up",{"_index":542,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/CodeEditorComponent.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["updat",{"_index":531,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["uri",{"_index":746,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["url",{"_index":367,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["us",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["useabl",{"_index":1000,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["user'",{"_index":307,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["user_log",{"_index":1753,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["userdetail",{"_index":288,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["useremail",{"_index":1166,"title":{},"body":{"injectables/KatanaService.html":{}}}],["useridtoken",{"_index":1186,"title":{},"body":{"injectables/KatanaService.html":{}}}],["userlog(data",{"_index":1777,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["util",{"_index":1612,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["valid",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["validators.requir",{"_index":1265,"title":{},"body":{"classes/OptionModel.html":{}}}],["valu",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["variabl",{"_index":1436,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":793,"title":{},"body":{"injectables/CourseService.html":{}}}],["variou",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["verifi",{"_index":279,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{}}}],["verifynewus",{"_index":1789,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["via",{"_index":796,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["view",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["view'},{'nam",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["view.component.css",{"_index":1268,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":1269,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":1267,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:13",{"_index":1419,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:20",{"_index":1421,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:21",{"_index":1422,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:25",{"_index":1285,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:27",{"_index":1420,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:29",{"_index":1284,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:33",{"_index":1282,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:39",{"_index":1272,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:48",{"_index":1286,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:49",{"_index":1283,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:60",{"_index":1281,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:67",{"_index":1273,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:75",{"_index":1274,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:84",{"_index":1276,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/opt",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":976,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":977,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":570,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["viewchild('blueprint",{"_index":730,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('editor",{"_index":579,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["viewchild('issuedetail",{"_index":1024,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('searchbi",{"_index":731,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":732,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":728,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":729,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":963,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewexpand",{"_index":513,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["visibl",{"_index":637,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["void",{"_index":375,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["want",{"_index":1695,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["warn",{"_index":874,"title":{},"body":{"injectables/CourseService.html":{}}}],["wave",{"_index":1046,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["web",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket",{"_index":1171,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/discov",{"_index":1208,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/fix",{"_index":1235,"title":{},"body":{"injectables/KatanaService.html":{}}}],["well",{"_index":354,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["whatev",{"_index":551,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["whether",{"_index":435,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["whichev",{"_index":1540,"title":{},"body":{"index.html":{}}}],["white",{"_index":887,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/StatBadgeComponent.html":{}}}],["whitespac",{"_index":738,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["window",{"_index":537,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window.location.hostname.replace(/www",{"_index":1167,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.location.href",{"_index":1412,"title":{},"body":{"injectables/ToolService.html":{}}}],["window.location.href.includes('tool",{"_index":913,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["window.location.port",{"_index":1168,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":660,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1135,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["window['ace'].edit(this.editorel.nativeel",{"_index":609,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/edit_session').editsess",{"_index":582,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/searchbox",{"_index":589,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['html_beautify'](tab['htmlstr",{"_index":595,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["winter",{"_index":781,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["within",{"_index":485,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["without",{"_index":1124,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["word",{"_index":520,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["work",{"_index":1018,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["workaround",{"_index":1020,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["workflow",{"_index":1575,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}}}],["wrap",{"_index":632,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["wrapper",{"_index":1463,"title":{"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wrapper'",{"_index":1773,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wrapper.git",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["wrapper.j",{"_index":1762,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["write",{"_index":1713,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["written",{"_index":1788,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["ws",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["yellow",{"_index":1637,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'd",{"_index":1640,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'r",{"_index":1721,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["young",{"_index":1505,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main component for the entire application.\nIt holds the primary pieces that allow the user to \nnavigate from the top down.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor. This creates subscriptions to routes changes to adjust values\nas needed. For example, if the user navigates to the tool view (i.e. they ran\na tool), then many values in various services are removed or reset to prevent\nconflicting values between services.\nThis will also retrieve the list of tools from the Katana service when it is\ncreated. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides toast notification functionality.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides Firebase authentication functionality.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { CourseService } from './course.service';\nimport { KatanaService } from './katana.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\nimport { AuthGuardService } from './authguard.service';\n\n/**\n * This is the main component for the entire application.\n * It holds the primary pieces that allow the user to \n * navigate from the top down.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /**\n     * Constructor. This creates subscriptions to routes changes to adjust values\n     * as needed. For example, if the user navigates to the tool view (i.e. they ran\n     * a tool), then many values in various services are removed or reset to prevent\n     * conflicting values between services.\n     * \n     * This will also retrieve the list of tools from the Katana service when it is\n     * created. \n     * \n     * @param router Used to navigate the user as needed.\n     * @param courseService Provides information and management for selected courses.\n     * @param katanaService Provides functionality for making API calls to the Katana server.\n     * @param toolService Provides information and management for available tools.\n     * @param toastService Provides toast notification functionality.\n     * @param authGuardService Provides Firebase authentication functionality.\n     */\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        private toolService: ToolService,\n        private toastService: ToastService,\n        private authGuardService: AuthGuardService) {\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false\n                toolService.selectedDiscoverOptions = false;\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false\n                });\n\n                document.documentElement.style.setProperty(`--course-sidebar-width`, '112px');\n                document.documentElement.style.setProperty(`--course-chip-width`, '92px');\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                if (!toolService.selectedTool) {\n                    router.navigate(['/']);\n                    return;\n                }\n\n                if (toolService.selectedDiscoverOptions === false) {\n                    router.navigate([`home/tools/${this.toolService.selectedTool.id}/options`]);\n                    toastService.toast('You\\'ll need to run the tool again to go back to the Issues page.');\n                }\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                    document.documentElement.style.setProperty(`--course-sidebar-width`, '340px');\n                    document.documentElement.style.setProperty(`--course-chip-width`, '330px');\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                let course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\nLogging you in...\nYou must log in with a BYUI Google account.\nIf this is your first time, speak with an Admin to get your account enabled.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Logging you in...You must log in with a BYUI Google account.If this is your first time, speak with an Admin to get your account enabled.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HomePageModule\n                            \n                            \n                                    SidebarModule\n                            \n                            \n                                    ToolPageModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport 'materialize-css';\nimport 'rxjs';\n\n/* Firebase */\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from './firebase.auth';\nimport { AuthGuardService } from './authguard.service';\n\n/* Modules */\nimport { SidebarModule } from './sidebar/sidebar.module';\nimport { HomePageModule } from './home-page/home-page.module';\nimport { ToolPageModule } from './tool-page/tool-page.module';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CategoriesComponent } from './home-page/categories/categories.component';\nimport { ToolViewComponent } from './tool-page/tool-view/tool-view.component';\nimport { ToolSelectionComponent } from './home-page/tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './home-page/options-view/options-view.component';\nimport { ErrorPageComponent } from './home-page/error-page/error-page.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: 'categories',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: 'home',\n        component: CategoriesComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/error',\n        component: ErrorPageComponent\n    },\n    {\n        path: 'home/tools',\n        component: ToolSelectionComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools/:tool_id/options',\n        component: OptionsViewComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools/:tool_id/issues',\n        component: ToolViewComponent,\n        canActivate: [AuthGuardService]\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        SidebarModule,\n        HomePageModule,\n        ToolPageModule,\n        HttpModule,\n        HttpClientModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFirestoreModule,\n        AngularFireAuthModule\n    ],\n    providers: [\n        AuthGuardService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authguard.service.ts\n        \n\n            \n                Description\n            \n            \n                Verifies the user is correctly logged in with a valid\nGoogle BYUI account. Redirects the user to the Google\nlogin page as needed. Provides validation for the user\nto access various routes.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Private\n                                userDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                retrieveToken\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authguard.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                angularfire2 - https://github.com/angular/angularfire2\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify location and navigate the user to new pages as needed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            \nUsed to prevent the user from navigating through Katana if they\nare not logged in with a valid google (byui) account.\n\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            \nRedirects the user to the google login page, where they sign in,\nand then are returned to Katana to have their credentials processed.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the user's idToken for Firebase, so requests can be validated on the\nserver.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            \nSigns the user out of Katana and redirects them to the Google login\npage.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:36\n                            \n                        \n\n                \n                    \n                        angularfire2 - https://github.com/angular/angularfire2\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:37\n                            \n                        \n\n                \n                    \n                        Used to verify location and navigate the user to new pages as needed\n*********************************************************************************\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:20\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDetails:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:25\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { User } from 'firebase';\nimport { auth } from 'firebase';\nimport { Observable } from 'rxjs';\n\n/**\n * Verifies the user is correctly logged in with a valid\n * Google BYUI account. Redirects the user to the Google\n * login page as needed. Provides validation for the user\n * to access various routes.\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private user: Observable;\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private userDetails: User = null;\n\n    /** \n     * Event emitted when auth status changes\n     */\n    @Output() authState = new EventEmitter();\n\n    /** *********************************************************************************\n     * @param afAuth angularfire2 - https://github.com/angular/angularfire2\n     * @param router Used to verify location and navigate the user to new pages as needed\n     ***********************************************************************************/\n    constructor(public afAuth: AngularFireAuth,\n        public router: Router) {\n        this.user = afAuth.authState;\n        this.authState.emit(false);\n\n        auth().getRedirectResult()\n            .catch(console.error);\n\n        this.user.subscribe(user => {\n            if (user) {\n                auth().updateCurrentUser(user);\n                this.userDetails = user;\n            } else if (!user) {\n                if (this.userDetails) {\n                    this.userDetails = null;\n                }\n                this.doGoogleLogin();\n            }\n            this.authState.emit(this.canActivate());\n            this.router.navigate(['/']);\n        });\n    }\n\n    /** *********************************************************************************\n     * Used to prevent the user from navigating through Katana if they\n     * are not logged in with a valid google (byui) account.\n     ***********************************************************************************/\n    canActivate(): boolean {\n        return (this.userDetails !== null && this.userDetails.email.includes('@byui.edu'));\n    }\n\n    /** *********************************************************************************\n     * Redirects the user to the google login page, where they sign in,\n     * and then are returned to Katana to have their credentials processed.\n     ***********************************************************************************/\n    doGoogleLogin() {\n        return new Promise((resolve, reject) => {\n            let provider = new auth.GoogleAuthProvider();\n            provider.addScope('profile');\n            provider.addScope('email');\n            auth().setPersistence(auth.Auth.Persistence.SESSION)\n                .then(() => {\n                    this.afAuth.auth\n                        .signInWithRedirect(provider)\n                        .catch(function (error) {\n                            console.error(error);\n                        });\n                })\n        });\n    }\n\n    /** *********************************************************************************\n     * Signs the user out of Katana and redirects them to the Google login\n     * page.\n     ***********************************************************************************/\n    signOut() {\n        return auth().signOut()\n            .then(this.doGoogleLogin)\n            .catch(console.error);\n    }\n\n    /** *********************************************************************************\n     * Retrieves the user's idToken for Firebase, so requests can be validated on the\n     * server.\n     ***********************************************************************************/\n    retrieveToken() {\n        return auth().currentUser.getIdToken(true)\n            .catch(console.error);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n\n\n    \n        Description\n    \n    \n        \nBuilds the breadcrumbs for navigation, as well as the feedback and\nuser details in the navigation bar.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                            \n                                closeModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:22\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify current location and navigate user to new page.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify currently selected tool.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Enables Sign Out button.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            \nBuilds a URL, then navigates the router to it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nArray of each piece of the path to navigate to.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    boolean - Returns false to prevent full page reload.\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            \nCloses the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            \nOpens the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:22\n                            \n                        \n\n                \n                    \n                        \nUsed to open and close the modal for feedback.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:31\n                            \n                        \n\n                \n                    \n                        Used to verify currently selected tool.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { auth } from 'firebase';\nimport { AuthGuardService } from '../../authguard.service';\nimport { MaterializeAction } from 'angular2-materialize';\n\n/** ******************************************************************\n * Builds the breadcrumbs for navigation, as well as the feedback and\n * user details in the navigation bar.\n ********************************************************************/\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\nexport class BreadcrumbsComponent {\n\n    /** ******************************************************************\n     * Used to open and close the modal for feedback.\n     ********************************************************************/\n    modalActions = new EventEmitter();\n\n    /** ******************************************************************\n     * Constructor\n     * @param router Used to verify current location and navigate user to new page.\n     * @param toolService Used to verify currently selected tool.\n     * @param authGuardService Enables Sign Out button.\n     ********************************************************************/\n    constructor(private router: Router,\n        public toolService: ToolService,\n        private authGuardService: AuthGuardService) { }\n\n    /** ******************************************************************\n     * Opens the feedback modal.\n     ********************************************************************/\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /** ******************************************************************\n     * Closes the feedback modal.\n     ********************************************************************/\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /** ******************************************************************\n     * Builds a URL, then navigates the router to it.\n     * @param pathPieces - Array of each piece of the path to navigate to.\n     * @returns boolean - Returns false to prevent full page reload.\n     ********************************************************************/\n    buildRouterLink(pathPieces) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n\n            Home\n            {{toolService.selectedCategory.title}}\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    {{authGuardService.userDetails.displayName}}\n                \n                \n                    \n                \n                \n                    \n                        Sign Out\n                    \n                \n            \n\n            \n                \n                    feedback\n                \n            \n\n        \n    \n\n\n\n\n    \n        Loading...\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedCategory.title}}            {{toolService.selectedTool.title}}                                                {{authGuardService.userDetails.displayName}}                                                                                                                                Sign Out                                                                                                feedback                                                    Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/categories/categories.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer for all available tool categories. Each Category is generated\nbased on the available tools.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/categories/categories.component.ts:14\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to generate each available category\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Verifies if course selection is open, so styling can be applied\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            \nThis sets the selected Category on the Tool service.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe category to be set as the selected category\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Returns false to prevent the entire page (just the router) from reloading\n\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:21\n                            \n                        \n\n                \n                    \n                        Used to generate each available category\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\n\n/** **********************************************************\n * Container for all available tool categories. Each {@link Category} is generated\n * based on the available tools.\n ************************************************************/\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param toolService Used to generate each available category\n     * @param courseService Verifies if course selection is open, so styling can be applied\n     ************************************************************/\n    constructor(public toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /** **********************************************************\n     * This sets the selected {@link Category} on the Tool service.\n     * @param {object} category - The category to be set as the selected category\n     * @returns {false} Returns false to prevent the entire page (just the router) from reloading\n     ************************************************************/\n    setSelectedCategory(category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{category.icon}}\n            {{category.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{category.icon}}            {{category.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a category. Tools are categorized based\non their purpose. Each category is displayed on the \nhome page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MDIcon used to represent the category in the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the category \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The string used by tools to identify the category they belong to \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CodeEditorComponent.html":{"url":"components/CodeEditorComponent.html","title":"component - CodeEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CodeEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/code-editor/code-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-code-editor\n            \n\n            \n                styleUrls\n                code-editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./code-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _tabs\n                            \n                            \n                                activeTab\n                            \n                            \n                                editor\n                            \n                            \n                                editorEl\n                            \n                            \n                                viewExpanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditorSession\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchPhrase\n                            \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/code-editor/code-editor.component.ts:59\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        searchPhrase\n                    \n                    \n                        If certain key words should be highlighted by the editor's\nsearch functionality, this should be passed as an input as\na string. It will be converted into a regex no matter, so\na regex string (to be passed into the RegExp constructor) \ncan also be passed in.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabs\n                    \n                    \n                        The tabs to add to the code editor. This may include tabs\nlike \"Current HTML\" and \"Updated HTML\" to show the user how\nthe HTML will be changed by the tool.\n\n                            \n                            Type:    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandView\n                            \n                            \n                        \n                    \n                \n                \n                    \nexpandView()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Fired on component load, this sets up the editor, creates the tabs provided\nby the selected tool, creates the sessions for each tab, beautifies their code,\ninserts their code, and then sets the settings and options for the editor.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditorSession\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditorSession(tab: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Sets the editor's session to the selected tab's session\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The tab (and it's related info) to set as the\neditor's current session\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _tabs:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:59\n                            \n                        \n\n                \n                    \n                        Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\nthe passed in tabs don't store as references correctly, so adding\nthe session to them doesn't carry over to the rest of the methods.\nThis helps with those reference issues. This is set during the \"ngOnInit\"\nmethod.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeTab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeTab:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        The currently active tab on the tabs bar of the editor.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:38\n                            \n                        \n\n                \n                    \n                        The editor instance. This is set after it has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                        Element reference to the editor div itself so we can \ninitiate the Ace editor instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewExpanded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:50\n                            \n                        \n\n                \n                    \n                        Whether or not the editor is in \"edit\" mode. This just means that\nit is expanded, currently. Whether or not it can be edited is \ndetermined by the tab's \"readOnly\" property.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\n\n/**\n * Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n */\n@Component({\n    selector: 'app-code-editor',\n    templateUrl: './code-editor.component.html',\n    styleUrls: ['./code-editor.component.css']\n})\nexport class CodeEditorComponent implements OnInit {\n\n    /** \n     * The tabs to add to the code editor. This may include tabs\n     * like \"Current HTML\" and \"Updated HTML\" to show the user how\n     * the HTML will be changed by the tool.\n     */\n    @Input('tabs') tabs: any[];\n\n    /**\n     * If certain key words should be highlighted by the editor's\n     * search functionality, this should be passed as an input as\n     * a string. It will be converted into a regex no matter, so\n     * a regex string (to be passed into the RegExp constructor) \n     * can also be passed in.\n     */\n    @Input('searchPhrase') searchPhrase: string;\n\n    /**\n     * Element reference to the editor div itself so we can \n     * initiate the Ace editor instance.\n     */\n    @ViewChild('editor') editorEl: ElementRef;\n\n    /**\n     * The editor instance. This is set after it has been initialized.\n     */\n    editor: any;\n\n    /**\n     * The currently active tab on the tabs bar of the editor.\n     */\n    activeTab: any;\n\n    /**\n     * Whether or not the editor is in \"edit\" mode. This just means that\n     * it is expanded, currently. Whether or not it can be edited is \n     * determined by the tab's \"readOnly\" property.\n     */\n    viewExpanded: boolean = false;\n\n    /**\n     * Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\n     * the passed in tabs don't store as references correctly, so adding\n     * the session to them doesn't carry over to the rest of the methods.\n     * This helps with those reference issues. This is set during the \"ngOnInit\"\n     * method.\n     */\n    _tabs: any[] = [];\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Fired on component load, this sets up the editor, creates the tabs provided\n     * by the selected tool, creates the sessions for each tab, beautifies their code,\n     * inserts their code, and then sets the settings and options for the editor.\n     */\n    ngOnInit() {\n        // The EditSession class is used to spawn new sessions in the editor\n        let EditSession = window['ace'].require('ace/edit_session').EditSession;\n        // Allows Ctrl+F Search functionality (keep, even though it says the var is unused)\n        let searchBox = window['ace'].require('ace/searchbox');\n\n        // Save a correct reference to the tab objects that is safe to use\n        this._tabs = this.tabs;\n\n        // Create and add an editor session to each tab, beautify its code, and insert it\n        this._tabs.forEach(tab => {\n            let code = window['html_beautify'](tab['htmlString'] || ' '); // Beautifies the code\n            tab.session = new EditSession(code);\n            tab.session.setMode('ace/mode/html');\n            tab.session.setUseWrapMode(true);\n            tab.session.setUseWorker(false); // Disables the linter/syntax checker\n            tab.session.setTabSize(4); // Sets the tab size to 4 spaces\n        });\n\n        // Create the editor, set the options, and set the first session\n        this.editor = window['ace'].edit(this.editorEl.nativeElement);\n        this.editor.setOption(\"minLines\", 10);\n        this.editor.setOption(\"maxLines\", 10);\n        this.editor.setTheme('ace/theme/terminal');\n        this.editor.setReadOnly(true);\n        this.editor.setHighlightActiveLine(true);\n        this.setEditorSession(this._tabs[0]);\n    }\n\n    /**\n     * Sets the editor's session to the selected tab's session\n     * @param tab The tab (and it's related info) to set as the\n     * editor's current session\n     */\n    setEditorSession(tab) {\n        if (!tab.session) return;\n        this.editor.setReadOnly(tab.readOnly);\n        this.editor.setSession(tab.session);\n        this.activeTab = tab;\n\n        // This \"if\" prevents it from searching with an empty search phrase,\n        // which finds pretty much every empty character...\n        if (this.searchPhrase) {\n            // Converts the provided search phrase to a RegExp\n            let reg = new RegExp(this.searchPhrase, 'gi');\n            // Finds and highlights all matches to the RegExp\n            this.editor.findAll(reg, {\n                needle: reg,\n                wrap: true,\n                regExp: true\n            });\n        }\n    }\n\n    /**\n     * Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n     */\n    expandView() {\n        this.viewExpanded = !this.viewExpanded;\n        this.editor.setOption(\"maxLines\", this.viewExpanded ? 25 : 10);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{tab.title}}\n        \n\n        \n            {{activeTab && activeTab.readOnly ? 'visibility' : 'code'}}\n        \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{tab.title}}                            {{activeTab && activeTab.readOnly ? \\'visibility\\' : \\'code\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CodeEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single course \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                        platform\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The sub-account the course is under in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether or not the course is a Blueprint course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The code for the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an error is returned by a tool, it is attached to the course here \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course's ID in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current instructor for the course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The IssueItems for this course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The platform it belongs to (online, campus, pathway) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the course is currently be processed through a tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The term the course is set to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to the course in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseChipComponent.html":{"url":"components/CourseChipComponent.html","title":"component - CourseChipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseChipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-chip/course-chip.component.ts\n\n\n    \n        Description\n    \n    \n        Represents a Course to be acted on. Generated based on the list of \nCourses stored in CourseService.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-chip\n            \n\n            \n                styleUrls\n                course-chip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-chip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildInstructorName\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-chip/course-chip.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify the currently selected course\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify if the tool view is open\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        course\n                    \n                    \n                        The Course this chip represents\n\n                            \n                            Type:    Course\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildInstructorName\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildInstructorName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Formats the instructor's name to fit on the chip appropriately.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The formatted instructor name\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nIssue status to match\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | string\n\n                            \n                                \n                                    The total number of issues matching the provided status.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:27\n                            \n                        \n\n                \n                    \n                        Allows this component to identify the currently selected course\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\nimport { Course } from '../../interfaces';\n\n/**\n * Represents a {@link Course} to be acted on. Generated based on the list of \n * {@link Course}s stored in {@link CourseService}.\n */\n@Component({\n    selector: 'app-course-chip',\n    templateUrl: './course-chip.component.html',\n    styleUrls: ['./course-chip.component.css']\n})\nexport class CourseChipComponent {\n\n    /**\n     * The {@link Course} this chip represents\n     */\n    @Input() course: Course;\n\n    /**\n     * Constructor\n     * @param courseService Allows this component to identify the currently selected course\n     * @param toolService Allows this component to identify if the tool view is open\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService) { }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     */\n    openCourse(): void {\n        window.open('https://byui.instructure.com/courses/' + this.course.id, '_blank');\n    }\n\n    /**\n     * Formats the instructor's name to fit on the chip appropriately.\n     * @returns {string} The formatted instructor name\n     */\n    buildInstructorName(): string {\n        let names = this.course.instructor.replace(/,/, '').split(' ');\n        var instructorName = this.course.instructor === 'none' ? 'No Instructor' : this.course.instructor;\n        if (names.length > 1 && this.course.instructor.includes(',')) {\n            instructorName = `${names[1][0]}. ${names[0]}`;\n        } else if (names.length > 1) {\n            instructorName = `${names[0][0]}. ${names[1]}`;\n        }\n        return instructorName;\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {string} status - Issue status to match\n     * @returns {number} The total number of issues matching the provided status.\n     */\n    getIssueCount(status): number | string {\n        if (!this.course.issueItems) return 0;\n        if (this.course.error) return 'E';\n        return this.course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n\n        \n            {{course.course_code}}\n            \n                {{buildInstructorName()}}\n            \n        \n\n        \n            \n                {{getIssueCount()}}\n            \n        \n        .\n    \n\n    \n        clear\n    \n    \n        open_in_new\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{course.course_code}}                            {{buildInstructorName()}}                                                        {{getIssueCount()}}                            .                clear                open_in_new    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseChipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-selection/course-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Provides the user management for the selected courses, including a course search\noverlay to add/remove courses.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            This retrieves all courses that match the given parameters from Canvas \nand returns them as an array of course objects that have been modified \nby us. The returned results will populate the 'courseResults' array and \nwill display in the results table in the course-selection html file.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the selected course from courseResults\nis already in the courses array in courseService.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course that is being checked\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether the course is already added\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Sorts the courseResults array according to the course attribute defined by 'param'\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The object key to be sorted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    The new position of the object in the array\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Element reference to the blueprint filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                        Results of a search \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:31\n                            \n                        \n\n                \n                    \n                        Holds what the last search was sorted by \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        Element reference to the search-by filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:28\n                            \n                        \n\n                \n                    \n                        Whether or not a search is currently processing \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:25\n                            \n                        \n\n                \n                    \n                        Element reference to the search text input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:17\n                            \n                        \n\n                \n                    \n                        Element reference to the sub-account filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:19\n                            \n                        \n\n                \n                    \n                        Element reference to the term filter input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { KatanaService } from '../../katana.service';\nimport { CourseService } from '../../course.service';\nimport { Course } from '../../interfaces';\n\n/**\n * Provides the user management for the selected courses, including a course search\n * overlay to add/remove courses.\n */\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent {\n    /** Element reference to the sub-account filter input */\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    /** Element reference to the term filter input */\n    @ViewChild('term') private term: ElementRef;\n    /** Element reference to the blueprint filter input */\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    /** Element reference to the search-by filter input */\n    @ViewChild('searchBy') private searchBy: ElementRef;\n    /** Element reference to the search text input */\n    @ViewChild('searchText') private searchText: ElementRef;\n\n    /** Whether or not a search is currently processing */\n    searching: boolean = false;\n\n    /** Holds what the last search was sorted by */\n    lastSortedBy: string;\n\n    /** Results of a search */\n    courseResults: Course[] = [];\n\n    /**\n     * Constructor\n     * @param {KatanaService} katanaService Provides functionality for making API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     */\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /**\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     */\n    async getCourses() {\n        // Canvas makes you have an input of at least three characters to use the search_term in the API\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            // Replace any whitespaces with '%20' for the query parameter\n            var searchText = this.searchText.nativeElement.value.replace(/\\s/g, '%20');\n\n            // Set the loading circle to display before retrieving the courses\n            this.searching = true;\n\n            // Send the search parameters to the katana service to build the correct URI\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchText: searchText,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you \n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchText === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        }\n    }\n\n    /**\n     * Sorts the courseResults array according to the course attribute defined by 'param'\n     * @param {string} param The object key to be sorted\n     * @returns {number} The new position of the object in the array\n     */\n    sortBy(param) {\n        // If they click on the same category more than once, it will reverse the order of the results\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        // Sort numerically \n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            // Sort alphabetically\n            this.courseResults.sort((a, b) => {\n                let name1 = a[param].toUpperCase();\n                let name2 = b[param].toUpperCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /**\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course The course that is being checked\n     * @returns {boolean} Whether the course is already added\n     */\n    isAdded(course) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n}\n\n    \n\n    \n        \n  Course Selection\n  \n    \n      \n        Sub-Account\n          \n             -->\n            Development\n            Campus\n            Pathway\n            All\n          \n        \n        Term\n          \n             -->\n            Fall\n            Winter\n            Spring\n            Master Courses\n            All\n          \n        \n        Blueprint\n          \n             -->\n            True\n            False\n            All\n          \n        \n        Search By\n          \n            Instructor\n            Course\n          \n        \n        \n          Search\n          \n        \n      \n      Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n      \n        \n          \n            +/-\n            Name\n            Code\n            Instructor\n            Account\n            Term\n            Blueprint\n            ID\n            Open in Canvas\n          \n        \n        \n          \n            \n              \n                {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n              \n              {{course.course_name}}\n              {{course.course_code}}\n              {{course.instructor}}\n              {{course.account}}\n              {{course.term}}\n              {{course.blueprint}}\n              {{course.id}}\n              \n                \n                  open_in_new\n                \n              \n            \n          \n          \n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              Searching ...\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Course Selection                    Sub-Account                       -->            Development            Campus            Pathway            All                          Term                       -->            Fall            Winter            Spring            Master Courses            All                          Blueprint                       -->            True            False            All                          Search By                      Instructor            Course                                    Search                              Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                                    +/-            Name            Code            Instructor            Account            Term            Blueprint            ID            Open in Canvas                                                                              {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                            {{course.course_name}}              {{course.course_code}}              {{course.instructor}}              {{course.account}}              {{course.term}}              {{course.blueprint}}              {{course.id}}                                                open_in_new                                                                                                                                                                                                                                                                                                                                                              Searching ...                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides information and management for a variety of things, but mainly the\ncourses the user selects via the CourseSelectionComponent. Also provides\nfunctionality for styling and counts based on Courses' IssueItems.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getBackgroundColorClasses\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssueCount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Adds a course to the list of currently selected courses. This\nwill also add and remove them from the user's local storage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBackgroundColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBackgroundColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:158\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the background color for an issue card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for a single course.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the left of an issue on\na card. It is determined by the status of the icon. (i.e. \"fixed\")\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The text used to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:142\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon color for the status icon of an\nindividual issue, as shown on an IssueItem card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for all courses.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Removes a course from the list of currently selected courses.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:24\n                            \n                        \n\n                \n                    \n                        The currently selected Course.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:34\n                            \n                        \n\n                \n                    \n                        Whether or not the CourseSelectionComponent is open.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:19\n                            \n                        \n\n                \n                    \n                        Holds all of the currently selected Courses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:29\n                            \n                        \n\n                \n                    \n                        The currently selected IssueItem.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:36\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:47\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Course, IssueItem } from './interfaces';\n\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        }\n        else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                let issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce((acc, course) => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        let statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        }\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        }\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        let statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        }\n        return statusColors[status];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSidebarComponent.html":{"url":"components/CourseSidebarComponent.html","title":"component - CourseSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-sidebar/course-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        The sidebar containing selected course management and the\nCourseSelectionComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-sidebar\n            \n\n            \n                styleUrls\n                course-sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                courseOverlay\n                            \n                            \n                                removeAll\n                            \n                            \n                                setSelectedCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, _location: Location, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The current URL location of the user in Katana.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Toggles the CourseSelectionComponent overlay open and closed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Removes all courses from the sidebar. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course to the one provided.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:26\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Course } from '../../interfaces';\n\n/**\n * The sidebar containing selected course management and the\n * {@link CourseSelectionComponent}.\n */\n@Component({\n    selector: 'app-course-sidebar',\n    templateUrl: './course-sidebar.component.html',\n    styleUrls: ['./course-sidebar.component.css']\n})\nexport class CourseSidebarComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param _location The current URL location of the user in Katana.\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService,\n        private _location: Location,\n        private router: Router) { }\n\n    /**\n     * Toggles the {@link CourseSelectionComponent} overlay open and closed.\n     */\n    courseOverlay() {\n        // cast the returned Element object to an HTMLElement object\n        let overlay: HTMLElement = document.querySelector('app-course-selection');\n\n        // toggle add the 'open' class to the app-course-selection component\n        if (overlay.className === 'open') {\n            overlay.className = 'close';\n        } else if (overlay.className === 'close') {\n            overlay.className = 'open';\n        } else {\n            overlay.style.display = 'block';\n            overlay.className = 'open';\n        }\n\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n        let newWidth = this.courseService.courseSelectionOpen ? '207px' : '112px';\n        document.documentElement.style.setProperty(`--course-sidebar-width`, newWidth);\n    }\n\n    /**\n     * Sets the currently selected course to the one provided.\n     * @param {Course} course The course to set as the currently selected course.\n     */\n    setSelectedCourse(course: Course) {\n        if (window.location.href.includes('tool-view')) {\n            this.courseService.selectedCourse = course;\n        }\n    }\n\n    /** Removes all courses from the sidebar. */\n    removeAll() {\n        this.courseService.courses.forEach(c => this.courseService.removeCourse(c));\n    }\n}\n    \n\n    \n        \n    Courses\n    \n        Remove All\n        \n    \n\n    \n        \n            {{courseService.courseSelectionOpen ? 'close' : 'add'}}\n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Courses            Remove All                                    {{courseService.courseSelectionOpen ? \\'close\\' : \\'add\\'}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's discovery mode.\nDisplayed on the options page for the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not it is a required option on the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorTab.html":{"url":"interfaces/EditorTab.html","title":"interface - EditorTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tab to be generated on the HTML editor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        htmlKey\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlKey\n                                    \n                                \n                                \n                                    \n                                        htmlKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use to grab the html string off the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Determines if the user can edit the code \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tab \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/error-page/error-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error-page.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/error-page/error-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { KatanaService } from '../../katana.service';\n\n@Component({\n    selector: 'app-error-page',\n    templateUrl: './error-page.component.html',\n    styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent {\n\n    constructor(private katanaService: KatanaService) { }\n\n}\n\n    \n\n    \n        \n\n    {{katanaService.error ? katanaService.error.message : 'There isn\\'t any error information available to display'}}\n\n    Status: {{katanaService.error ? katanaService.error.status : '---'}}\n\n    If this error persists, please contact a Katana admin.\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{katanaService.error ? katanaService.error.message : \\'There isn\\\\'t any error information available to display\\'}}    Status: {{katanaService.error ? katanaService.error.status : \\'---\\'}}    If this error persists, please contact a Katana admin.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FixOption.html":{"url":"interfaces/FixOption.html","title":"interface - FixOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FixOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's fix mode.\nDisplayed on each issue discovered by the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the option is required in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n  Modules\n  HomePageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home-page/home-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BreadcrumbsComponent\n                            \n                            \n                                    ErrorPageComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\n\nimport { CategoriesComponent } from './categories/categories.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorPageComponent } from './error-page/error-page.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        BreadcrumbsComponent,\n        FormsModule,\n        ReactiveFormsModule,\n        ErrorPageComponent\n    ],\n    declarations: [\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent,\n        ErrorPageComponent\n    ]\n})\nexport class HomePageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single issue in an IssueItem. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        formGroup\n                                \n                                \n                                        html\n                                \n                                \n                                            Optional\n                                        optionModel\n                                \n                                \n                                            Optional\n                                        optionValues\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tempValues\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object containing issue-specific details \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML string used to display the contents of the issue in its IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                    \n                                \n                                \n                                    \n                                        formGroup:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {@link FormGroup} generated for the issue's {@link FixOption}s \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If included, this is the HTML for the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionModel\n                                    \n                                \n                                \n                                    \n                                        optionModel:     OptionModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The OptionModel used to generated any FixOptions used by the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionValues\n                                    \n                                \n                                \n                                    \n                                        optionValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The results of form generated by the above OptionModel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the issue (untouched, approved, skipped, fixed, failed) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tempValues\n                                    \n                                \n                                \n                                    \n                                        tempValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to store the current state of the form to restore it on page reload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the issue \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-card/issue-card.component.ts\n\n\n    \n        Description\n    \n    \n        Manages the display for a single IssueItem.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                        The IssueItem used by this component.\n\n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                        The position of the component in the IssueListComponent.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the top left of a card.\nIt is based on the IssueItem's item_type property, or the type of\nthe item in Canvas. (i.e. Page)\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The icon title to use to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            This class implements AfterViewInit, which runs after the element\nis rendered completely on the page. This is so we can add the tooltip\ndata correctly to the type icon.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the element in the view for this component that\ncontains it's item type icon (ex. Page, Discussion, Quiz).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Manages the display for a single {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    /**\n     * The {@link IssueItem} used by this component.\n     */\n    @Input('issueItem') issueItem: IssueItem;\n    /**\n     * The position of the component in the {@link IssueListComponent}.\n     */\n    @Input('position') position: number;\n    /**\n     * Reference to the element in the view for this component that\n     * contains it's item type icon (ex. Page, Discussion, Quiz).\n     */\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n\n    /**\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly to the type icon.\n     */\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /**\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     * @returns {string} The icon title to use to display the icon.\n     */\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-container/issue-container.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the display of a single Issue.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                issueDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEditorTabs\n                            \n                            \n                                getButtonClasses\n                            \n                            \n                                isFixed\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                setIssueStatus\n                            \n                            \n                                showEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-container/issue-container.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of the item's issues array the issue is at.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue attached to the display.\n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildEditorTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildEditorTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Using the {@link Tab}s provided by the Node Tool, builds\nuseable tab objects for each issue.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The tabs to use to build the editor instance.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:95\n                            \n                        \n\n\n                \n                    \n                            Determines the classes used to style buttons based on the\ncurrent status of the issue they belong to.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                What status the issue current is.\n\n                                                        \n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Either \"button\" or \"icon\".\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFixed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Returns whether or not the item's status is fixed or failed.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not this issue's status is fixed or failed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Fired when the component is intialized, this manages the item's display.\nIt inserts the form for the Issue's FixOptions if available.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(optionKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            Manages the validity of the form on each keystroke.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        optionKey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The key of the option this came from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Sets the status of the issue.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new status to set the issue to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Since Object.keys does not work in angular templating, this is\na workaround. It checks if the issue has any HTML to display in\nthe editor. Used by the app-code-editor tag to determine if it\nshould display.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:29\n                            \n                        \n\n                \n                    \n                        Element reference to the card containing details about the issue.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\nimport { Issue } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the display of a single {@link Issue}.\n */\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    /**\n     * The issue attached to the display.\n     */\n    @Input('issue') issue: Issue;\n\n    /**\n     * The index of the item's issues array the issue is at.\n     */\n    @Input('index') index: number;\n\n    /**\n     * Element reference to the card containing details about the issue.\n     */\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(private toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /**\n     * Fired when the component is intialized, this manages the item's display.\n     * It inserts the form for the {@link Issue}'s {@link FixOption}s if available.\n     */\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n        this.issue.optionModel = new OptionModel(this.toolService.selectedTool.fixOptions);\n        this.issue.formGroup = this.issue.optionModel.toGroup();\n\n        // Update option values if there are values saved for any options\n        if (this.issue.tempValues) {\n            Object.keys(this.issue.tempValues).forEach(optionKey => {\n                let control = this.issue.formGroup.get(optionKey);\n                control.setValue(this.issue.tempValues[optionKey], { onlySelf: true });\n                control.updateValueAndValidity();\n            });\n        }\n    }\n\n    /**\n     * Using the {@link Tab}s provided by the Node Tool, builds\n     * useable tab objects for each issue.\n     * @returns {Object[]} The tabs to use to build the editor instance.\n     */\n    buildEditorTabs() {\n        if (!this.toolService.selectedTool.editorTabs) return;\n        return this.toolService.selectedTool.editorTabs.map(editorTab => {\n            return {\n                title: editorTab.title,\n                htmlString: this.issue.html[editorTab.htmlKey],\n                readOnly: editorTab.readOnly\n            }\n        });\n    }\n\n    /**\n     * Sets the status of the issue.\n     * @param newStatus The new status to set the issue to.\n     */\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    /**\n     * Determines the classes used to style buttons based on the\n     * current status of the issue they belong to.\n     * @param {string} desiredStatus What status the issue current is.\n     * @param {string} elType Either \"button\" or \"icon\".\n     * @returns {string} The classes to apply to the element.\n     */\n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn white';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2'\n        }\n        return classes;\n    }\n\n    /**\n     * Manages the validity of the form on each keystroke.\n     * @param optionKey The key of the option this came from.\n     */\n    onChange(optionKey) {\n        if (['untouched', 'fixed', 'failed'].includes(this.issue.status)) {\n            this.issue.status = 'untouched';\n        }\n        if (!this.issue.tempValues) {\n            this.issue.tempValues = {};\n        }\n        this.issue.tempValues[optionKey] = this.issue.formGroup.value[optionKey];\n    }\n\n    /**\n     * Returns whether or not the item's status is fixed or failed.\n     * @returns {boolean} Whether or not this issue's status is fixed or failed.\n     */\n    isFixed() {\n        return this.issue.status === 'fixed' || this.issue.status === 'failed';\n    }\n\n    /**\n     * Since Object.keys does not work in angular templating, this is\n     * a workaround. It checks if the issue has any HTML to display in\n     * the editor. Used by the app-code-editor tag to determine if it\n     * should display.\n     */\n    showEditor() {\n        return Object.keys(this.issue.html).length > 0;\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{issue.title}}\n        \n\n        \n            \n                {{option.title}}\n                {{option.description}}\n                \n\n                    \n                    \n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n    \n\n    \n    \n\n        \n            \n                {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n            \n            \n                block\n            \n            {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n        \n\n        \n            \n                {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n            \n\n            {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n        \n\n        \n            FIXED {{toolService.selectedTool.fixedMessage ? ' - ' + toolService.selectedTool.fixedMessage : ''}}\n        \n        \n            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n        \n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{issue.title}}                                            {{option.title}}                {{option.description}}                                                                                                                                                                            {{choice.text}}                                                                                                                    {{choice.text}}                                                                                                                                                    {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                                        block                        {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                                            {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}                        {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}                            FIXED {{toolService.selectedTool.fixedMessage ? \\' - \\' + toolService.selectedTool.fixedMessage : \\'\\'}}                            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-details/issue-details.component.ts\n\n\n    \n        Description\n    \n    \n        Container for all IssueContainerComponents used to display\nissues within the currently selected IssueItem.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-details/issue-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-details/issue-details.component.ts:18\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\n\n/**\n * Container for all {@link IssueContainerComponent}s used to display\n * issues within the currently selected {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Issues\n    \n    {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents an item in Canvas, such as a page or quiz. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category the item belongs to (pages, quizzes, moduleItems, etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course ID the item belongs to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Issues discovered by a tool within this item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content ID of the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to view the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the item in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-list/issue-list.component.ts\n\n\n    \n        Description\n    \n    \n        Display for the list of IssueItems in the currently selected course.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-list/issue-list.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:17\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\n\n/**\n * Display for the list of {@link IssueItem}s in the currently selected course.\n */\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\nexport class IssueListComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process.\n            Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process.            Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-nav/issue-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Container for managing various actions on the tool view page,\nsuch as the \"Fix All Approved\" button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                downloadIssues\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Downloads a CSV to the user's computer containing all of the\ncurrently displayed issues.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the user the IssueItems belonging to the provided course.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to retrieve the IssueItems from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The IssueItems belonging to the provided course.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course and currently selected IssueItem.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The issue to use to set the currently selected IssueItem.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:34\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:36\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:25\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:35\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router'; // Used by the component's template, don't remove\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { csvFormatRows } from 'd3-dsv';\n\n/**\n * Container for managing various actions on the tool view page,\n * such as the \"Fix All Approved\" button.\n */\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param katanaService Provides functionality to make API calls to the Katana server.\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService,\n        private router: Router) { }\n\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Returns the user the {@link IssueItem}s belonging to the provided course.\n     * @param course The course to retrieve the IssueItems from.\n     * @returns {IssueItem[]} The IssueItems belonging to the provided course.\n     */\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    /**\n     * Sets the currently selected course and currently selected {@link IssueItem}.\n     * @param course The course to set as the currently selected course.\n     * @param issue The issue to use to set the currently selected IssueItem.\n     */\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n\n    /**\n     * Downloads a CSV to the user's computer containing all of the\n     * currently displayed issues.\n     */\n    downloadIssues() {\n        let csvReport = '';\n        this.courseService.courses.forEach((course, i) => {\n            course.issueItems.forEach((issueItem, j) => {\n                if (i  {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    }))) + '\\n';\n                } else {\n                    // Make the log without the header\n                    csvReport += csvFormatRows(issueItem.issues.map(issue => {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    })) + '\\n';\n                }\n            });\n        });\n\n        // Setup the link to download the csv report\n        let fileName = 'csvReport.csv';\n        let a = document.getElementById(\"download\");\n        var blob = new Blob([csvReport], { type: \"octet/stream\" });\n        var url = window.URL.createObjectURL(blob);\n\n        a.href = url;\n        a.download = fileName;\n    }\n}\n    \n\n    \n        \n\n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n\n    \n    \n        \n            \n                cloud_download\n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                     -->\n                \n            \n        \n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    cloud_download                Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                     -->                                                    Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/katana.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides access to make calls to the Katana server.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                serverDomain\n                            \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                errorHandler\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                            \n                                logUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, authGuardService: AuthGuardService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/katana.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nCurrently used to retrieve basic data from the server.\n\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information about available tools on the server.\n\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information and management for the currently selected courses.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to navigate the user as needed.\n\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides toast functionality.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:134\n                            \n                        \n\n\n                \n                    \n                            Runs a tool on the server in discovery mode, then returns the issue items discovered.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items discovered by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nerrorHandler(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:294\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:210\n                            \n                        \n\n\n                \n                    \n                            Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items fixed by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves a list of courses from Canvas.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the list of tools from the server.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logUserStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogUserStatus(userEmail: string, message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:119\n                            \n                        \n\n\n                \n                    \n                            Has the server log when a user's auth status changes (log in, log out, etc.)\nDEPRECATED\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEmail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     Error\n\n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:26\n                            \n                        \n\n                \n                    \n                        If an error is returned by the server, it is stored here for public access.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverDomain:     \n\n                    \n                \n                    \n                        \n                            Default value : window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:21\n                            \n                        \n\n                \n                    \n                        Handles formatting the correct URL for the web sockets.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:59\n                            \n                        \n\n                \n                    \n                        Currently open web sockets.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService } from './course.service';\nimport { ToolService } from './tool.service';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase';\nimport { AuthGuardService } from './authguard.service';\n\n/**\n * Provides access to make calls to the Katana server.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class KatanaService {\n\n    /**\n     * Handles formatting the correct URL for the web sockets.\n     */\n    serverDomain = window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '');\n\n    /**\n     * If an error is returned by the server, it is stored here for public access.\n     */\n    error: Error;\n\n    /**\n     * Constructor\n     * @param http - Currently used to retrieve basic data from the server.\n     * @param toolService - Provides information about available tools on the server.\n     * @param courseService  - Provides information and management for the currently selected courses.\n     * @param router - Used to navigate the user as needed.\n     * @param toastService - Provides toast functionality.\n     */\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private authGuardService: AuthGuardService,\n        private toastService: ToastService) {\n\n        // Listens to changes in the auth state, and if the user is valid,\n        // it retrieves the list of tools from the server\n        authGuardService.authState.subscribe(state => {\n            if (state) {\n                this.getToolList()\n                    .catch(console.error);\n            } else {\n                toolService.toolList = [];\n            }\n        });\n\n    }\n\n    /**\n     * Currently open web sockets.\n     */\n    sockets: WebSocket[] = [];\n\n    /** ***************************************************************\n     * Retrieves the list of tools from the server.\n     *****************************************************************/\n    getToolList() {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('ToolList: User is not authenticated.'));\n            }\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.post(`/api/tool-list`, {\n                        userIdToken\n                    }).subscribe(\n                        (toolList: any): any => {\n                            this.toolService.toolList = toolList;\n                            resolve();\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n\n        });\n    }\n\n    /** ***************************************************************\n     * Retrieves a list of courses from Canvas.\n     *****************************************************************/\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Course Search: User is not authenticated.'));\n            }\n            let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    body.userIdToken = userIdToken;\n                    this.http.post('/api/course-retrieval', body, { headers: headers }).subscribe(\n                        (data) => {\n                            resolve(data);\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n        });\n    }\n\n    /**\n     * Has the server log when a user's auth status changes (log in, log out, etc.)\n     * DEPRECATED\n     */\n    logUserStatus(userEmail: string, message: string) {\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        headers.append('Content-Type', 'application/json');\n\n        this.http.post('/api/user-status', { userEmail, message }, { headers: headers }).subscribe(\n            () => { },\n            this.errorHandler)\n    }\n\n    /**\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     */\n    discoverIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Discover: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            var completed = 0;\n\n            const userIdToken = null;\n            try {\n                const userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/discover`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('open', (event) => {\n                courses.forEach(course => {\n                    // Set the course processing\n                    course.processing = true;\n                    // Remove any pre-existing error\n                    delete course.error;\n\n                    let data = JSON.stringify({\n                        tool_id: this.toolService.selectedTool.id,\n                        course: course,\n                        options: this.toolService.selectedDiscoverOptions,\n                        userEmail: auth().currentUser.email,\n                        userIdToken\n                    });\n                    socket.send(data);\n                });\n            });\n\n            socket.addEventListener('message', (event) => {\n                let course = JSON.parse(event.data);\n                if (course.error) {\n                    console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                }\n                this.courseService.coursesObj[`c${course.id}`] = course;\n                course.processing = false;\n                completed++;\n\n                // Update the currently selected course, if this is the currently selected course\n                if (course.id === this.courseService.selectedCourse.id) {\n                    this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                }\n\n                // If this was the last course, then close the socket\n                if (completed === courses.length) {\n                    this.toolService.processing = false;\n                    socket.close();\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    /**\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     */\n    fixIssues(courses) {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Fix: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            var fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            var completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/fix`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('open', (event) => {\n                fixables.forEach(course => {\n                    course.processing = true;\n                    // Save the option values for each issue, but remove the formGroup and questionModel\n                    course.issueItems.forEach(issueItem => {\n                        issueItem.issues.forEach(issue => {\n                            if (issue.formGroup) {\n                                issue.optionValues = issue.formGroup.value;\n                                delete issue.formGroup;\n                                delete issue.questionModel;\n                            }\n                        });\n                    });\n\n                    let data = JSON.stringify({\n                        tool_id: this.toolService.selectedTool.id,\n                        course: course,\n                        options: this.toolService.selectedDiscoverOptions,\n                        userEmail: auth().currentUser.email\n                    });\n                    socket.send(data);\n                });\n            });\n\n            socket.addEventListener('message', (event) => {\n                let course = JSON.parse(event.data);\n                if (course.error) {\n                    console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                }\n\n                this.courseService.coursesObj[`c${course.id}`] = course;\n                course.processing = false;\n                completed++;\n\n                // Update the currently selected course, if this is the currently selected course\n                if (course.id === this.courseService.selectedCourse.id) {\n                    this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                }\n\n                // If this was the last course, then close the socket\n                if (completed === fixables.length) {\n                    this.toolService.processing = false;\n                    socket.close();\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    errorHandler(e) {\n        console.error(e);\n        this.error = e;\n        this.router.navigate(['home', 'error']);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes.ts\n        \n\n            \n                Description\n            \n            \n                Helper for building a reactive form. Used to create the\n{@link FormGroup} and {@link FormControl}s needed for\nboth the {@link OptionsViewComponent} and the options on\neach {@link IssueContainerComponent}.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Options to build the form from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                        Options to build the form from.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes.ts:27\n                            \n                        \n\n\n                \n                    \n                            Takes the provided options and puts them into a new {@link FormGroup}.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormControl, Validators, FormGroup } from '@angular/forms';\n\n/**\n * Helper for building a reactive form. Used to create the\n * {@link FormGroup} and {@link FormControl}s needed for\n * both the {@link OptionsViewComponent} and the options on\n * each {@link IssueContainerComponent}.\n */\nexport class OptionModel {\n\n    /**\n     * Options to build the form from.\n     */\n    options = [];\n\n    /**\n     * Constructor\n     * @param options Options to build the form from.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Takes the provided options and puts them into a new {@link FormGroup}.\n     */\n    toGroup() {\n        let group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/options-view/options-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the options page. Holds all related\noptions components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                modalIsOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodalIsOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Determines the open/close status of the modal.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the modal is currently open.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Actions taken when the user clicks the \"Run Tool\" button.\nGathers up the answers on the options form, then submits\nthem to the Katana Service to run the tool in discovery mode.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:33\n                            \n                        \n\n                \n                    \n                        The {@link formGroup} to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:49\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:29\n                            \n                        \n\n                \n                    \n                        The OptionModel to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        The options to display on the page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:48\n                            \n                        \n\n                \n                    \n                        Provides information and management for available courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { FormGroup } from '@angular/forms';\nimport { DiscoverOption } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the options page. Holds all related\n * options components.\n */\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\nexport class OptionsViewComponent {\n\n    /**\n     * The options to display on the page.\n     */\n    options: DiscoverOption[];\n    /**\n     * The {@link OptionModel} to use for the form.\n     */\n    optionModel: OptionModel;\n    /**\n     * The {@link formGroup} to use for the form.\n     */\n    formGroup: FormGroup;\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param {ToolService} toolService Provides information and management for available courses.\n     * @param {KatanaService} katanaService Provides functionality to make API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     * @param {Router} router Used to navigate the user as needed.\n     */\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.optionModel = new OptionModel(this.toolService.selectedTool.discoverOptions);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Determines the open/close status of the modal.\n     * @returns {boolean} Whether or not the modal is currently open.\n     */\n    modalIsOpen(): boolean {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    /**\n     * Actions taken when the user clicks the \"Run Tool\" button.\n     * Gathers up the answers on the options form, then submits\n     * them to the Katana Service to run the tool in discovery mode.\n     */\n    onSubmit(): void {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        var options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        let categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n}\n    \n\n    \n        \n    \n\n        \n            \n                Options\n                \n                    {{toolService.selectedTool.title}}\n                \n\n                \n                    Description\n                    {{toolService.selectedTool.description}}\n                \n\n                \n                    Categories\n                    \n                        \n                            \n                            {{category}}\n                        \n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    arrow_back\n    \n        Click here to Add Courses\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Options                                    {{toolService.selectedTool.title}}                                                    Description                    {{toolService.selectedTool.description}}                                                    Categories                                                                                                    {{category}}                                                                                                {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice}}                                                                                                                                        {{choice}}                                                                                                                                Cancel                Run Tool                                    No Courses Selected        You must select at least one course before continuing.                Got it!        arrow_back            Click here to Add Courses    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarModule.html":{"url":"modules/SidebarModule.html","title":"module - SidebarModule","body":"\n                   \n\n\n\n\n  Modules\n  SidebarModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\n\n\nSidebarModule\n\nSidebarModule\n\nSidebarModule -->\n\nCourseChipComponent->SidebarModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nSidebarModule -->\n\nCourseSelectionComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nSidebarModule -->\n\nCourseSidebarComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent \n\nCourseSidebarComponent \n\nCourseSidebarComponent  -->\n\nSidebarModule->CourseSidebarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/sidebar/sidebar.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseChipComponent\n                            \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseSidebarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CourseSidebarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\n\nimport { CourseSidebarComponent } from './course-sidebar/course-sidebar.component';\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseChipComponent } from './course-chip/course-chip.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule\n    ],\n    exports: [\n        CourseSidebarComponent\n    ],\n    declarations: [\n        CourseSidebarComponent,\n        CourseSelectionComponent,\n        CourseChipComponent\n    ]\n})\nexport class SidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/stat-badge/stat-badge.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a single number and title in a pill container.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                            \n                                titleColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                        The side of the pill the number should be display on.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                        The number to display.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                        The title to display on the pill.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleColor\n                    \n                    \n                        The color of the title.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'white'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * Displays a single number and title in a pill container.\n */\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    /**\n     * The title to display on the pill.\n     */\n    @Input('statTitle') statTitle: string;\n    /**\n     * The number to display.\n     */\n    @Input('statCount') statCount: number;\n    /**\n     * The color of the title.\n     */\n    @Input('titleColor') titleColor: string = 'white';\n    /**\n     * The side of the pill the number should be display on.\n     */\n    @Input('side') side: string = 'right';\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides methods to notify the user of errors and various message\nvia toast notification.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Displays a message to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Message to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Displays an error to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Error to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n/**\n * Provides methods to notify the user of errors and various message\n * via toast notification.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Displays an error to the user via toast notification.\n     * @param {Error} e Error to display\n     */\n    toastError(e) {\n        function buildHTML(message) {\n            console.log(typeof message, message);\n            if (typeof message === 'object') {\n                message = JSON.stringify(message);\n            }\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        // If just text is sent in\n        let text = e;\n\n        // Classic Error\n        if (e instanceof Error) {\n            text = e.message;\n\n            // If a web socket goes down unexpectedly\n        } else if (e instanceof Event && e.target instanceof WebSocket && (e.target.readyState === 3 || e.target.readyState === 2)) {\n            text = 'Websocket unexpectedly closed. Server may be down.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    /**\n     * Displays a message to the user via toast notification.\n     * @param {string} text Message to display\n     */\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tool available from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                            Optional\n                                        editorTabs\n                                \n                                \n                                            Optional\n                                        fixMessage\n                                \n                                \n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                                \n                                        toolType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the tool's uses \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DiscoverOptions for this tool, used to generate the options page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editorTabs\n                                    \n                                \n                                \n                                    \n                                        editorTabs:     EditorTab[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorTab[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The tabs to go into the HTML editor on the issue, if needed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixMessage\n                                    \n                                \n                                \n                                    \n                                        fixMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The message to display at the bottom of each IssueContainerComponent when the issue has been fixed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     FixOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FixOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    FixOptions for this tool, used to generate the options on each IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MCIcon used to represent the tool in the ToolSelectionComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID used to identify the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tool (displayed to the user) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category this tool belongs to and will display in through the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolType\n                                    \n                                \n                                \n                                    \n                                        toolType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tool's type - Determines some of the actions available to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user for the option */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** The default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not it is a required option on the form */\n    required: boolean\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string,\n    /** The key used to identify the option in the form */\n    key: string,\n    /** The description to display to the user */\n    description: string,\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string,\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[],\n    /** Default text for \"text\" type options */\n    defaultText?: string,\n    /** Whether or not the option is required in the form */\n    required: boolean\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string,\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string,\n    /** Determines if the user can edit the code */\n    readOnly: boolean\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string,\n    /** The title of the tool (displayed to the user) */\n    title: string,\n    /** Description of the tool's uses */\n    description: string,\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string,\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string,\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[],\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string,\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[],\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions: FixOption[],\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string,\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[]\n};\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the \n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string,\n    /** The title of the category */\n    title: string,\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string,\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string,\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string,\n    /** An object containing issue-specific details */\n    details: object,\n    /** If included, this is the HTML for the issue */\n    html: object,\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel,\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup,\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any,\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string,\n    /** The course ID the item belongs to in Canvas */\n    course_id: number,\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string,\n    /** Link to view the item in Canvas */\n    link: string,\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[]\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number,\n    /** The name of the course in Canvas */\n    course_name: string,\n    /** The code for the course in Canvas */\n    course_code: string,\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string,\n    /** The current instructor for the course */\n    instructor: string,\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[],\n    /** URL to the course in Canvas */\n    url: string\n    /** The sub-account the course is under in Canvas */\n    account?: string,\n    /** The term the course is set to in Canvas */\n    term?: string\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean,\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean,\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string,\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolPageModule.html":{"url":"modules/ToolPageModule.html","title":"module - ToolPageModule","body":"\n                   \n\n\n\n\n  Modules\n  ToolPageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\n\n\nToolPageModule\n\nToolPageModule\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tool-page/tool-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CodeEditorComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        IssueContainerComponent,\n        ToolViewComponent,\n        StatBadgeComponent,\n        CodeEditorComponent,\n    ]\n})\nexport class ToolPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/tool-selection/tool-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Handles the view for selecting tools.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/tool-selection/tool-selection.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/tool-selection/tool-selection.component.ts:20\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\n\n/**\n * Handles the view for selecting tools.\n */\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public toolService: ToolService, private courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                The Tool Service contains information and management for\nall tools available from the service. It handles information\nlike which tool is currently selected, whether or not the user\nis currently using a tool, and what categories are available to\nthe user.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:78\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:54\n                            \n                        \n\n                \n                    \n                        The category selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:58\n                            \n                        \n\n                \n                    \n                        The tool selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:23\n                            \n                        \n\n                \n                    \n                        The categories available to the user. This will be replaced with\ndynamic generation at a later point.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:36\n                            \n                        \n\n                \n                    \n                        Whether or not a tool is currently doing it's magic.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:40\n                            \n                        \n\n                \n                    \n                        The message to display on the screen while a tool is processing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:62\n                            \n                        \n\n                \n                    \n                        The discovery options chosen by the user on the options page for the selected tool.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:49\n                            \n                        \n\n                \n                    \n                        The list of available tools, as retrieved from the server.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:44\n                            \n                        \n\n                \n                    \n                        Whether or not the user is currently looking at the tool view.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:64\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:67\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:72\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:75\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { KatanaService } from './katana.service';\nimport { Router } from '@angular/router';\nimport { AuthGuardService } from './authguard.service';\nimport { Tool, Category } from './interfaces';\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing: boolean = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage: string = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen: boolean = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n\n        let loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/tool-view/tool-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the tool view.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/tool-view/tool-view.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for the currently selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Determines the current total count of issues from all selected courses\ndiscovered by the currently selected tool.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:20\n                            \n                        \n\n                \n                    \n                        Provides information and management for the currently selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\n\n/**\n * Container for the tool view.\n */\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for the currently selected courses.\n     * @param toolService Provides information and management for available tools.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService) { }\n\n    /**\n     * Determines the current total count of issues from all selected courses\n     * discovered by the currently selected tool.\n     */\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n    \n        {{toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        {{toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/authguard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/classes.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/firebase.auth.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/home-page/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/home-page/error-page/error-page.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/home-page/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/home-page/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                EditorTab\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                FixOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/katana.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-chip/course-chip.component.ts\n            \n            \n                component\n            \n            \n                CourseChipComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-sidebar/course-sidebar.component.ts\n            \n            \n                component\n            \n            \n                CourseSidebarComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/tool-page/code-editor/code-editor.component.ts\n            \n            \n                component\n            \n            \n                CodeEditorComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/tool-page/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/tool-page/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/compiler : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @types/d3-dsv : ^1.0.33\n        \n            angular2-crumbs : ^1.2.1\n        \n            angular2-materialize : ^15.1.10\n        \n            angularfire2 : ^5.0.0-rc.11\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : git+https://github.com/byuitechops/canvas-api-wrapper.git\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            firebase : ^5.2.0\n        \n            firebase-admin : ^5.12.1\n        \n            logger : github:byuitechops/logger\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            object-sizeof : ^1.2.0\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.1\n        \n            ws : ^5.2.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nThis tool is built to interface with Canvas, a Learning Management System built by Instructure. It provides the framework for a development team to build and deploy mass-maintenance tools. It is not build by Instructure. It was built by Brigham Young University - Idaho, and is maintained by them.\nSetup\nTo set up your own instance of Katana, follow these steps:\n\nInstall Git and use it to clone the repository\n\nInstall NodeJS if is not installed\n\nIn the terminal, run: npm install\n\n(TEMP: Set up CANVAS_API_TOKEN environment variable | Will become canvas developer key)\n\nDeploy Firebase using the steps described in this document](./documentation/additional-documentation/setup/setting-up-firebase.html)\n\nBuild production files with ng build --prod\n\nCopy the server directory and the contents of the /dist folder into the directory you will be deploying from\n\nUse npm start to spin up Katana\n\nFollow any additional setup processes you need\n\n\nDevelopment\nFor development, use this command to build the angular front-end and launch the server immediately after:\nnpm run fullbuild\nIt can then be accessed via localhost:8000 (or whichever port you specify in server/settings.json).\nFlags\n\n\n\nFlag\nPurpose\n\n\n\n\n--mute\nPrevents database logging from appearing in the console\n\n\n\nDocumentation\nClient (Angular)\n\nLinkName \nArchitecture\nLinkName\nHow To...\nLinkName\nFirebase Integration\nLinkName\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolPageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nCourseSidebarComponent \n\nCourseSidebarComponent \n\nCourseSidebarComponent  -->\n\nSidebarModule->CourseSidebarComponent \n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nSidebarModule -->\n\nCourseChipComponent->SidebarModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nSidebarModule -->\n\nCourseSelectionComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nSidebarModule -->\n\nCourseSidebarComponent->SidebarModule\n\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        17 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../firebase.auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/firebase.auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    firebase: {\n        apiKey: \"AIzaSyBN6dkjkGHs5W2YXTkLUu8mCurFXkip3Dc\",\n        authDomain: \"katana-24a36.firebaseapp.com\",\n        databaseURL: \"https://katana-24a36.firebaseio.com\",\n        projectId: \"katana-24a36\",\n        storageBucket: \"katana-24a36.appspot.com\"\n    }\n}\n                        \n                    \n\n                \n                    \n                        Used to connect the client to firebase for authentication.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture.html":{"url":"additional-documentation/architecture.html","title":"additional-page - Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture\nThese documents will cover points of Katana's architecture not covered by Compodoc.\nDocumentation\n Setting Up Firebase\n Enabling Accounts on Firebase\n Node Tools\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/server-endpoints.html":{"url":"additional-documentation/architecture/server-endpoints.html","title":"additional-page - Server Endpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Endpoints\n(This will cover each server endpoint and its purpose)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/discover-&-fix-workflow.html":{"url":"additional-documentation/architecture/discover-&-fix-workflow.html","title":"additional-page - Discover & Fix Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tool Discover & Fix Workflow\n(This will describe the fix/discover workflow used by the node tools)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/data-flow-diagram.html":{"url":"additional-documentation/architecture/data-flow-diagram.html","title":"additional-page - Data Flow Diagram","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/high-level-overview.html":{"url":"additional-documentation/architecture/high-level-overview.html","title":"additional-page - High Level Overview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup.html":{"url":"additional-documentation/setup.html","title":"additional-page - Setup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProcesses\nWith Katana setup, various processes have to occur, such as integrating a newly created Node Tool, activating a new user in Firebase, or similar. This documentation will cover each process and its best practices.\nDocumentation\n Setting Up Firebase\n Enabling Accounts on Firebase\n Node Tools\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/setting-up-firebase.html":{"url":"additional-documentation/setup/setting-up-firebase.html","title":"additional-page - Setting Up Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nEach node tool will follow the same process and have the same settings/ options available. That process is as follows:\nSettings Object\nInsert screenshots to complete this section.At the bottom of each tool is an object that determines many attributes of the tool. The various keys and options on the object are described below:\n|Object Key|Type|Options|Description|Example|\n|----------|----|-------|-----------|-------|\n|discover|function||The discover function that will tell the tool what items to get from Canvas and decide how to display them|discover|\n|fix|function||The fix function that will tell the tool what items to fix and how to do it|fix|\n|id|string||The tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should all essecially be the same|'the_tool_name'|\n|title|string||The tool name capitalizing each word and using spaces. The tool filename, id, and title should all essecially be the same|'The Tool Name'|\n|description|string||A description of the tool that will be displayed on the options page|'This tool allows you to...'|\n|icon|string||Any icon name found on Material Design Icons|'text_rotation_none'|\n|toolType|string|fix/search|This determines if the tool will use both the discover and fix functions for fix, or if it will only utilize the discover function and disable the ability to approve fixes and make changes to content for search|'fix'|\n|toolCategory|string|html , itemSettings|This will determine which category the tool will show up under on the home page|'html'|\n|fixMessage|string||This message will appear on each issue after the issue status has changed to 'fixed'|'The alt attribute for this item has been updated'|\n|categories|string array|assignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions|An array of the Canvas item types to be searched for/ fixed in the tool|['assignments', 'discussions', 'pages']|\n|discoverOptions|object array||An object array that describes the available discover/search options that will appear on the options page before the tool is run|See below for details|\n|fixOptions|object array||An object array that describes the available fix options that will appear on each issue card after the tool is run|See below for details|\n|editorTabs|object array||An object array that determines the setup of the code editors to be seen on each issue card|See below for details|\nThe following are also object keys, but are object arrays:\ndiscoverOptions\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'currentColor'\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n['Blue', 'Red', 'Yellow']\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one discover option.\nfixOptions\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'newColor'\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\n\n\nchoices\nstring array\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n\n\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one fix option.\neditorTabs\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\n\n\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\n\n\nreadOnly\nboolean\ntrue, false\nAn option to make the editor read-only or not\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover\nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function, and the fix function should simply be to make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix\nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the issue status and based on any other conditions\nUpdate the status of the issues if changes are made or if otherwise needed\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible and should be abstracted to the discover function if possible.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder ./katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen ./katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything and run Katana and you should see it!\n\n(This will cover the structure of a basic node tool, how to write one, add it to the server, and deploy it)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/development-environment.html":{"url":"additional-documentation/setup/development-environment.html","title":"additional-page - Development Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nEach node tool will follow the same process and have the same settings/ options available. That process is as follows:\nSettings Object\nInsert screenshots to complete this section.At the bottom of each tool is an object that determines many attributes of the tool. The various keys and options on the object are described below:\n|Object Key|Type|Options|Description|Example|\n|----------|----|-------|-----------|-------|\n|discover|function||The discover function that will tell the tool what items to get from Canvas and decide how to display them|discover|\n|fix|function||The fix function that will tell the tool what items to fix and how to do it|fix|\n|id|string||The tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should all essecially be the same|'the_tool_name'|\n|title|string||The tool name capitalizing each word and using spaces. The tool filename, id, and title should all essecially be the same|'The Tool Name'|\n|description|string||A description of the tool that will be displayed on the options page|'This tool allows you to...'|\n|icon|string||Any icon name found on Material Design Icons|'text_rotation_none'|\n|toolType|string|fix/search|This determines if the tool will use both the discover and fix functions for fix, or if it will only utilize the discover function and disable the ability to approve fixes and make changes to content for search|'fix'|\n|toolCategory|string|html , itemSettings|This will determine which category the tool will show up under on the home page|'html'|\n|fixMessage|string||This message will appear on each issue after the issue status has changed to 'fixed'|'The alt attribute for this item has been updated'|\n|categories|string array|assignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions|An array of the Canvas item types to be searched for/ fixed in the tool|['assignments', 'discussions', 'pages']|\n|discoverOptions|object array||An object array that describes the available discover/search options that will appear on the options page before the tool is run|See below for details|\n|fixOptions|object array||An object array that describes the available fix options that will appear on each issue card after the tool is run|See below for details|\n|editorTabs|object array||An object array that determines the setup of the code editors to be seen on each issue card|See below for details|\nThe following are also object keys, but are object arrays:\ndiscoverOptions\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'currentColor'\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n['Blue', 'Red', 'Yellow']\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one discover option.\nfixOptions\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'newColor'\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\n\n\nchoices\nstring array\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n\n\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one fix option.\neditorTabs\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\n\n\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\n\n\nreadOnly\nboolean\ntrue, false\nAn option to make the editor read-only or not\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover\nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function, and the fix function should simply be to make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix\nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the issue status and based on any other conditions\nUpdate the status of the issues if changes are made or if otherwise needed\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible and should be abstracted to the discover function if possible.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder ./katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen ./katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything and run Katana and you should see it!\n\n(This will cover the structure of a basic node tool, how to write one, add it to the server, and deploy it)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/node-tools.html":{"url":"additional-documentation/setup/node-tools.html","title":"additional-page - Node Tools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nEach node tool will follow the same process and have the same settings/ options available. That process is as follows:\nSettings Object\nInsert screenshots to complete this section.At the bottom of each tool is an object that determines many attributes of the tool. The various keys and options on the object are described below:\n|Object Key|Type|Options|Description|Example|\n|----------|----|-------|-----------|-------|\n|discover|function||The discover function that will tell the tool what items to get from Canvas and decide how to display them|discover|\n|fix|function||The fix function that will tell the tool what items to fix and how to do it|fix|\n|id|string||The tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should all essecially be the same|'the_tool_name'|\n|title|string||The tool name capitalizing each word and using spaces. The tool filename, id, and title should all essecially be the same|'The Tool Name'|\n|description|string||A description of the tool that will be displayed on the options page|'This tool allows you to...'|\n|icon|string||Any icon name found on Material Design Icons|'text_rotation_none'|\n|toolType|string|fix/search|This determines if the tool will use both the discover and fix functions for fix, or if it will only utilize the discover function and disable the ability to approve fixes and make changes to content for search|'fix'|\n|toolCategory|string|html , itemSettings|This will determine which category the tool will show up under on the home page|'html'|\n|fixMessage|string||This message will appear on each issue after the issue status has changed to 'fixed'|'The alt attribute for this item has been updated'|\n|categories|string array|assignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions|An array of the Canvas item types to be searched for/ fixed in the tool|['assignments', 'discussions', 'pages']|\n|discoverOptions|object array||An object array that describes the available discover/search options that will appear on the options page before the tool is run|See below for details|\n|fixOptions|object array||An object array that describes the available fix options that will appear on each issue card after the tool is run|See below for details|\n|editorTabs|object array||An object array that determines the setup of the code editors to be seen on each issue card|See below for details|\nThe following are also object keys, but are object arrays:\ndiscoverOptions\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'currentColor'\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n['Blue', 'Red', 'Yellow']\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one discover option.\nfixOptions\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'newColor'\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\n\n\nchoices\nstring array\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n\n\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one fix option.\neditorTabs\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\n\n\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\n\n\nreadOnly\nboolean\ntrue, false\nAn option to make the editor read-only or not\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover\nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function, and the fix function should simply be to make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix\nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the issue status and based on any other conditions\nUpdate the status of the issues if changes are made or if otherwise needed\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible and should be abstracted to the discover function if possible.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder ./katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen ./katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything and run Katana and you should see it!\n\n(This will cover the structure of a basic node tool, how to write one, add it to the server, and deploy it)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/enabling-accounts-on-firebase.html":{"url":"additional-documentation/setup/enabling-accounts-on-firebase.html","title":"additional-page - Enabling Accounts on Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnabling an account (Firebase Admins Only)\nNew, valid account added to Firebase are disabled automatically by the Firebase Functions (if set up on your firebase instance).\nTo enable an account:\n\nNavigate to the Firebase Console\nLog in with a valid account that has admin access to your Katana firebase project\nSelect the Katana firebase project from the available projects\nSelect the \"Authentication\" tab under the Develop menu on the left\nSelect the \"Users\" tab on the Authentication page\nFind the user you want to enable and select the Kebob menu on the right side of their row\nSelect \"Enable Account\"\n\n\n(Selecting the Authentication Tab)\n\n\n(Enabling an Account)\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase.html":{"url":"additional-documentation/firebase.html","title":"additional-page - Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase\nThe following documentation regards integration with Firebase. This covers the technical details of how it is integrated. If you're looking at setting up your instance of Katan, refer to Setting Up Firebase.\nDocumentation\n Setting Up Firebase\n Enabling Accounts on Firebase\n Node Tools\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-authentication.html":{"url":"additional-documentation/firebase/firebase-authentication.html","title":"additional-page - Firebase Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Authentication Process\nKatana uses Firebase authentication services, although this may be temporary. As it stands, a developer key is not available to the team working on the Katana project. As an alternative, which coincedently opens up several new opportunities by integrating with Google authentication, Katana uses Firebase authentication with only Google Accounts allowed. Users cannot create new accounts, and must use an existing Google account. It must be a BYUI G-Suite Account, or their google account will be removed from Katana instantaneously.\nSign-Up Process\nWhen a user accesses Katana for the first time, they will be redirected to a Google login page. It will allow them to log in with any google account, but it will keep looping them back to the login page if they use a standard gmail or non-BYUI google account. After successfully logging into a valid BYUI google account, they will be taken back to Katana, where they will be automatically logged in.\nHowever, they cannot access the tool quite yet. It may continue to loop them back to the Google login page, even with a BYUI Google account. This is because all accounts are automatically disabled on creation (see below). This helps prevent unwanted users from accessing it without being given access manually. An admin must enable their account before they can continue.\nAuthentication Process\nBelow is a diagram with a simple overview of the authentication process using Firebase. This is the flow after the user has successfully signed up with a valid account. \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/database-structure.html":{"url":"additional-documentation/firebase/database-structure.html","title":"additional-page - Database Structure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDatabase Structure\nThe structure of the database is simple. It's sole purpose is to store logs.\nThe current Katana structure uses Firestore, a product produced by Firebase. It is a cloud-hosted, NoSQL database that handles datatypes easier than Firebase database.\nKatana uses its own Firestore Wrapper to handle sending information to the database. Refer to that if you are currently developing in Katana and would like to learn more about interfacing with Firestore.\nCollections\nCollections in a NoSQL database are similar to tables. They are just a \"collection\" of \"documents.\" A document is similar to a row in a standard database table. They can also be thought of as a stored JSON object (with a bit more control over datatypes).\nThe current setup requires three collections:\n\n\n\nCollection Title\nDescription\n\n\n\n\nuser_logs\nThis can store logs for user actions. This can include users logging in and out, changing account information, and similar actions. (BYUI Katana instance currently only stores users logging in and out)\n\n\nserver_logs\nActions taken by the server or significant events that should be logged should be logged here. This might include suspicious endpoint activity, or even just any request made to the server. (BYUI Katana instance currently does not store any information in this collection)\n\n\ntool_logs\nThis should be used to store logs generated by tools being run by users. (BYUI Katana instance currently stores every tool that runs, along with any related IssueItems)\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firestore-wrapper.html":{"url":"additional-documentation/firebase/firestore-wrapper.html","title":"additional-page - Firestore Wrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirestore Wrapper\nThe Firestore Wrapper, which is built specifically for Katana, is a small, easy wrapper used to log actions to Firestore. It does nothing more.\nView firestore-wrapper.js on Github\nSetup\nIf you use this separately from Katana, which it is not built for, the structure of your database will need to match what is described in Database Structure. It also requires the firebase-admin package to properly run. To implement the wrapper in your code:\nconst firestoreWrapper = require('./firestore-wrapper.js');\nconst db = firestoreWrapper.initializeFirebase();\nFrom there on, db can be used to access all of Firestore's API.\n\nFunctions\nFour public functions are exposed by the wrapper's export:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\nserverLog(data)\ndata (object)\nvoid\nThis saves data to the server_logs collection in Firestore, such as when a specific API is being tracked.\n\n\ntoolLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically used for when tools are being ran.\n\n\nuserLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically logs when users log in and out. Please note that this only logs the user's email and information pertinent to the action that occurred. No other user information is stored.\n\n\ninitializeFirebase()\nnone\nDatabase Reference\nInitializes the app and returns a reference to the database. The database reference is also used internally, so this function must be called before using any other external functions. This will also console log any database logging if the --db flag was given at startup. It will log all information provided to log, which can be quite long. It is not recommended that you use this flag. It is available for development purposes.\n\n\n\nOne private function is used internally:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\n_log(collectionTitle, data)\ncollectionTitle(string)data (object)\nvoid\nUsed by the logging functions available externally, this just logs data to Firestore. The other functions are just wrappers for this internal function.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-functions.html":{"url":"additional-documentation/firebase/firebase-functions.html","title":"additional-page - Firebase Functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Functions\nFirebase provides a service called Firebase Functions that allows functions to be written that run on key events fired on the database. This is used to control if an account is valid or not when a user signs up. Currently, only one function is deployed to the BYUI instance of Katana.\n\n\n\nFunction\nEvent\nDescription\n\n\n\n\nverifyNewUsers()\nfunctions.auth.user().onCreate(...)\nChecks whether or not the user is a BYUI Google account, and if they are not, removes their account immediately. If they are, it disables their account and revokes their refresh tokens (to disable their current session).\n\n\n\nYou must be an admin or owner on your firebase instance to deploy Firebase Functions.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
