var COMPODOC_SEARCH_INDEX = {
<<<<<<< HEAD
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.484,1,1.1]],["body/components/AppComponent.html",[0,0.785,1,1.572,2,0.422,3,0.422,4,0.895,5,1.031,6,1.031,7,0.309,8,2.706,9,0.54,10,4.522,11,3.89,12,1.899,13,3.163,14,4.522,15,3.89,16,2.002,17,1.181,18,2.985,19,3.89,20,3.89,21,1.031,22,2.437,23,2.324,24,2.914,25,1.482,26,4.522,27,1.482,28,6.132,29,1.309,30,2.416,31,3.682,32,2.207,33,3.537,34,2.553,35,4.338,36,3.537,37,0.777,38,3.145,39,3.041,40,4.522,41,2.914,42,2.376,43,5.294,44,2.422,45,1.829,46,3.163,47,0.606,48,1.018,49,2.575,50,3.89,51,3.163,52,2.376,53,3.573,54,2.531,55,3.17,56,2.376,57,4.522,58,4.522,59,2.238,60,2.238,61,1.572,62,0.674,63,0.018,64,0.752,65,0.422,66,0.607,67,0.716,68,1.287,69,1.898,70,2.09,71,1.589,72,1.078,73,2.196,74,2.376,75,2.238,76,2.531,77,1.228,78,1.017,79,3.474,80,3.89,81,1.349,82,2.531,83,2.223,84,0.884,85,0.642,86,3.466,87,5.294,88,1.392,89,1.193,90,2.027,91,2.706,92,1.392,93,2.2,94,1.136,95,0.375,96,0.353,97,1.435,98,1.76,99,2.575,100,3.145,101,3.89,102,4.522,103,0.611,104,3.145,105,3.145,106,2.708,107,3.89,108,4.522,109,2.715,110,4.522,111,3.145,112,2.027,113,2.706,114,4.979,115,3.89,116,5.275,117,2.706,118,3.89,119,3.145,120,2.706,121,1.193,122,2.416,123,2.416,124,3.145,125,3.145,126,2.002,127,3.145,128,2.706,129,3.145,130,3.145,131,2.706,132,0.553,133,3.145,134,3.145,135,3.145,136,1.471,137,2.416,138,0.959,139,0.375,140,4.067,141,2.416,142,3.145,143,1.557,144,3.145,145,3.145,146,3.145,147,0.969,148,3.145,149,2.706,150,3.145,151,2.238,152,3.145,153,2.706,154,1.653,155,2.416,156,0.582,157,3.145,158,3.145,159,1.392,160,3.145,161,3.145,162,2.865,163,2.914,164,3.163,165,1.736,166,3.89,167,4.522,168,2.531,169,2.708,170,0.815,171,0.836,172,1.414,173,1.482,174,1.647,175,1.031,176,3.145,177,3.145,178,1.031,179,0.854,180,1.031,181,0.553,182,1.031,183,0.854,184,0.498,185,1.031,186,0.854,187,1.031,188,0.815,189,1.482,190,0.854,191,1.031,192,0.815,193,0.582,194,1.031,195,0.854,196,1.031,197,0.553,198,1.031,199,0.854,200,1.031,201,0.854,202,1.031,203,0.854,204,1.031,205,0.777,206,1.031,207,0.854,208,0.983,209,1.031,210,0.553,211,0.815,212,1.031,213,0.011,214,0.011]],["title/modules/AppModule.html",[215,1.463,216,2.835]],["body/modules/AppModule.html",[0,0.813,1,2.031,2,0.568,3,0.568,7,0.416,36,3.841,41,3.574,47,0.472,55,2.534,61,1.149,63,0.019,68,1.144,81,1.262,84,1.039,85,0.864,88,1.873,93,2.96,95,0.738,96,0.474,121,1.605,159,1.873,170,1.096,181,0.975,192,1.437,205,1.371,210,0.744,211,1.437,213,0.013,214,0.013,215,2.233,216,5.306,217,2.368,218,3.986,219,3.986,220,3.64,221,3.64,222,3.64,223,3.64,224,3.64,225,4.506,226,4.506,227,4.506,228,3.574,229,4.231,230,5.545,231,3.64,232,3.25,233,3.878,234,2.96,235,5.545,236,3.64,237,5.545,238,3.64,239,1.777,240,3.64,241,3.25,242,4.231,243,3.25,244,5.545,245,4.231,246,5.545,247,3.64,248,2.727,249,4.231,250,4.231,251,2.883,252,3.64,253,5.545,254,3.986,255,4.231,256,4.231,257,2.96,258,4.259,259,2.96,260,3.25,261,3.25,262,2.96,263,3.878,264,3.64,265,5.545,266,6.015,267,1.323,268,5.545,269,5.545,270,4.259,271,5.32,272,4.231,273,4.231,274,4.231,275,4.231,276,4.231]],["title/injectables/AuthGuardService.html",[36,2.129,277,1.702]],["body/injectables/AuthGuardService.html",[2,0.48,3,0.48,7,0.351,9,0.59,17,1.428,18,3.007,29,0.882,31,4.105,36,2.598,37,1.745,41,3.187,42,1.876,44,1.354,45,1.918,52,2.598,56,2.598,59,2.448,61,1.806,62,0.765,63,0.019,64,0.507,65,0.864,66,0.48,67,0.721,68,1.049,77,1.343,81,1.826,84,0.894,85,0.729,86,2.138,88,1.581,95,0.426,96,0.4,97,1.112,99,2.793,103,0.961,106,3.667,121,1.876,132,1.257,139,0.842,156,1.133,159,1.581,162,3.441,163,3.947,164,4.998,165,2.008,193,0.66,213,0.012,214,0.012,241,2.743,243,4.358,247,3.071,271,5.723,277,2.382,278,3.071,279,4.94,280,3.799,281,3.891,282,5.723,283,5.723,284,2.961,285,0.596,286,2.322,287,6.653,288,6.124,289,1.621,290,6.124,291,6.124,292,6.124,293,3.57,294,6.653,295,3.57,296,5.673,297,4.88,298,2.181,299,3.57,300,2.076,301,1.407,302,3.57,303,3.427,304,4.945,305,1.475,306,3.57,307,3.187,308,4.945,309,3.799,310,3.57,311,3.57,312,3.57,313,6.124,314,3.57,315,0.882,316,3.57,317,4.945,318,3.459,319,4.254,320,2.301,321,3.57,322,1.116,323,3.57,324,1.581,325,3.57,326,3.57,327,3.57,328,3.57,329,3.968,330,3.57,331,3.57,332,6.124,333,3.57,334,3.57,335,3.57,336,3.57,337,3.071,338,2.301,339,3.57,340,3.57,341,3.57,342,3.57,343,3.57,344,3.57,345,3.57,346,3.57,347,3.57,348,3.57,349,3.57]],["title/components/BreadcrumbsComponent.html",[0,0.484,179,1.1]],["body/components/BreadcrumbsComponent.html",[0,0.762,1,0.953,2,0.471,3,0.471,4,0.998,5,1.15,6,1.15,7,0.345,9,0.671,15,4.203,17,1.124,18,3.33,21,1.15,22,2.468,23,2.354,25,1.602,27,1.602,29,1.389,30,2.696,31,3.935,34,2.774,36,3.638,37,1.636,44,1.331,47,0.544,48,0.617,49,2.36,56,2.567,62,1.047,63,0.018,64,0.864,65,0.656,66,0.755,67,0.798,71,1.456,72,0.844,83,2.36,84,0.858,85,0.716,88,1.553,92,1.553,93,2.454,94,2.029,95,0.419,96,0.393,97,1.488,98,1.964,99,1.473,103,0.95,109,2.488,121,2.305,132,1.194,138,0.96,139,0.725,141,3.753,156,1.182,169,2.926,170,0.909,171,0.904,172,1.527,173,1.602,174,1.73,175,1.15,178,1.15,179,1.65,180,1.15,181,0.617,182,1.15,183,0.953,184,0.556,185,1.15,186,0.953,187,1.15,188,0.909,189,1.602,190,0.953,191,1.15,192,0.909,193,0.649,194,1.15,195,0.953,196,1.15,197,0.617,198,1.15,199,0.953,200,1.15,201,0.953,202,1.15,203,0.953,204,1.15,205,0.867,206,1.15,207,0.953,208,1.097,209,1.15,210,0.617,211,0.909,212,1.15,213,0.012,214,0.012,239,1.473,251,1.949,266,4.203,270,3.753,279,4.909,285,0.586,286,2.029,289,1.602,297,4.203,298,1.993,301,1.599,303,3.402,315,0.867,318,3.931,350,3.799,351,3.019,352,3.64,353,6.078,354,4.886,355,7.121,356,1.68,357,4.886,358,6.39,359,4.669,360,4.886,361,4.669,362,4.669,363,4.886,364,3.417,365,4.886,366,3.509,367,2.163,368,4.886,369,2.734,370,1.457,371,2.285,372,3.509,373,3.827,374,5.318,375,1.853,376,3.509,377,2.549,378,3.509,379,2.696,380,1.844,381,3.753,382,1.949,383,3.509,384,4.203,385,4.886,386,3.753]],["title/components/CategoriesComponent.html",[0,0.484,181,0.713]],["body/components/CategoriesComponent.html",[0,0.793,1,1.066,2,0.528,3,0.528,4,1.118,5,1.288,6,1.288,7,0.386,9,0.711,11,4.54,21,1.288,22,2.498,23,2.383,25,1.73,27,1.73,29,1.473,31,2.954,32,2.331,34,2.805,37,1.473,47,0.605,48,0.691,49,2.503,53,2.954,56,2.773,62,1.131,63,0.018,64,0.906,65,0.709,66,0.801,67,0.768,71,1.774,72,0.998,78,1.573,83,2.503,84,0.801,85,0.802,89,1.49,92,1.739,94,2.152,95,0.469,96,0.44,97,1.34,99,1.649,103,1.026,109,2.821,132,1.169,138,0.998,139,0.63,147,1.366,170,1.018,171,0.976,172,1.65,173,1.73,174,1.813,175,1.288,178,1.288,179,1.066,180,1.288,181,1.121,182,1.288,183,1.066,184,0.622,185,1.288,186,1.066,187,1.288,188,1.018,189,1.73,190,1.066,191,1.288,192,1.018,193,0.726,194,1.288,195,1.066,196,1.288,197,0.691,198,1.288,199,1.066,200,1.288,201,1.066,202,1.288,203,1.066,204,1.288,205,0.971,206,1.288,207,1.066,208,1.228,209,1.288,210,0.691,211,1.018,212,1.288,213,0.013,214,0.013,267,2.376,279,4.054,285,0.656,286,1.905,289,1.73,301,1.118,324,1.739,350,3.566,370,1.983,371,2.468,377,2.105,387,3.379,388,1.367,389,2.792,390,1.815,391,5.277,392,6.648,393,5.277,394,2.747,395,3.928,396,4.054,397,4.054,398,4.54,399,3.928,400,3.928,401,1.574,402,0.971,403,3.928,404,4.54,405,4.54,406,4.54]],["title/interfaces/Category.html",[267,1.267,407,0.788]],["body/interfaces/Category.html",[2,0.39,3,0.39,7,0.285,9,0.766,12,1.792,17,1.099,45,0.866,47,0.626,48,0.511,63,0.019,64,0.413,65,0.959,66,0.973,67,0.821,72,1.072,77,0.789,78,1.396,84,0.573,95,0.786,96,0.326,103,0.83,132,0.511,136,1.359,138,1.063,139,0.786,147,0.623,156,0.936,165,1.399,171,1.149,181,0.89,184,0.676,193,0.79,197,0.89,210,0.511,213,0.012,214,0.01,251,1.702,267,2.277,285,0.485,300,1.792,301,1.69,305,1.273,315,1.055,322,1.334,356,1.468,367,1.89,370,1.772,371,1.359,382,1.159,388,0.753,389,2.608,390,1.468,401,2.184,402,1.468,407,1.398,408,1.438,409,2.243,410,1.541,411,1.712,412,2.145,413,2.518,414,2.494,415,2.104,416,2.243,417,3.074,418,2.778,419,2.904,420,2.469,421,1.159,422,2.369,423,2.93,424,1.286,425,1.89,426,1.919,427,1.857,428,2.75,429,1.399,430,2.378,431,1.89,432,1.89,433,2.342,434,1.89,435,2.013,436,2.224,437,1.659,438,1.468,439,1.919,440,1.827,441,1.702,442,2.018,443,1.526,444,1.286,445,1.399,446,1.22,447,1.159,448,2.136,449,1.286,450,1.526,451,1.526,452,2.191,453,1.22,454,1.792,455,2.113,456,1.526,457,2.504,458,1.102,459,1.286,460,1.286,461,1.792,462,1.514,463,1.359,464,1.049,465,1.359,466,1.102,467,1.702,468,1.159,469,1.102,470,1.359,471,1.526,472,1.526,473,1.159,474,1.438,475,1.526,476,1.526,477,2.105,478,1.286,479,1.438,480,1.526,481,1.659,482,1.526,483,1.22,484,1.526,485,1.22,486,1.286,487,1.526,488,1.526,489,2.243,490,1.526,491,1.438,492,1.438,493,1.996,494,1.286,495,1.438,496,1.159,497,2.113,498,2.113,499,1.438,500,1.102]],["title/components/CodeEditorComponent.html",[0,0.484,183,1.1]],["body/components/CodeEditorComponent.html",[0,0.74,1,0.709,2,0.638,3,0.351,4,0.743,5,0.856,6,0.856,7,0.257,9,0.47,16,2.102,17,0.729,21,0.856,22,2.376,23,2.266,25,1.292,27,1.292,29,1.532,37,1.671,39,3.137,42,2.071,44,1.495,47,0.508,48,0.835,56,1.372,62,0.559,63,0.018,64,0.675,65,0.833,66,0.763,67,0.593,68,0.878,71,1.37,72,0.713,73,1.633,84,0.351,85,0.533,95,0.311,96,0.442,97,0.587,103,1.028,109,1.745,132,0.93,138,0.931,140,2.005,141,3.028,147,1.553,151,1.951,154,1.372,156,1.18,170,0.676,171,1.231,172,1.654,173,1.292,174,1.616,175,0.856,178,0.856,179,0.709,180,0.856,181,0.459,182,0.856,183,1.436,184,1.154,185,0.856,186,0.709,187,0.856,188,0.676,189,1.292,190,0.709,191,0.856,192,0.676,193,0.483,194,0.856,195,0.709,196,0.856,197,0.459,198,0.856,199,0.709,200,0.856,201,0.709,202,0.856,203,0.709,204,0.856,205,0.645,206,0.856,207,0.709,208,0.816,209,0.856,210,0.459,211,0.676,212,0.856,213,0.009,214,0.011,280,3.028,285,0.436,289,1.957,298,1.557,301,1.351,315,0.974,320,2.54,370,1.416,375,1.801,386,3.028,402,1.174,415,1.621,425,1.745,427,1.232,429,2.032,435,1.91,440,2.709,441,3.005,445,1.292,446,2.507,447,1.572,452,1.232,469,1.495,470,1.843,473,2.11,477,1.292,501,3.204,502,5.895,503,5.264,504,2.246,505,2.54,506,5.29,507,4.085,508,3.941,509,3.941,510,5.29,511,5.971,512,5.29,513,5.29,514,5.29,515,5.136,516,3.941,517,4.748,518,3.941,519,3.941,520,2.757,521,4.748,522,5.971,523,3.575,524,4.656,525,4.748,526,5.29,527,3.941,528,5.678,529,2.61,530,2.495,531,2.206,532,2.757,533,2.61,534,2.61,535,3.391,536,3.941,537,3.941,538,3.941,539,3.941,540,2.61,541,3.028,542,1.572,543,5.963,544,5.29,545,3.06,546,3.941,547,2.61,548,5.29,549,2.757,550,3.028,551,3.941,552,3.941,553,3.028,554,2.744,555,3.028,556,3.941,557,3.941,558,3.391,559,3.941,560,3.391,561,2.757,562,3.941,563,2.61,564,3.028,565,2.61,566,2.961,567,4.551,568,3.7,569,1.826,570,2.757,571,2.61,572,3.941,573,3.941,574,2.61,575,2.757,576,3.941,577,2.61,578,2.61,579,2.61,580,3.941,581,2.61,582,2.61,583,2.61,584,1.683,585,2.005,586,2.61,587,2.61,588,2.61,589,2.61,590,2.005,591,2.61,592,2.61,593,2.61,594,2.61,595,2.61,596,3.941,597,2.61,598,2.61,599,2.61,600,2.61,601,1.461,602,2.61,603,2.61,604,2.61,605,2.61,606,1.826,607,1.826,608,2.61,609,2.61,610,2.61,611,4.748,612,3.941,613,2.61,614,2.61,615,2.61,616,2.61,617,2.61,618,2.61,619,2.61,620,2.757,621,3.941,622,3.391,623,2.61,624,2.61,625,2.246,626,2.61,627,3.941,628,2.61,629,2.61,630,2.61,631,2.61,632,2.61,633,4.748,634,2.61,635,3.941,636,3.941,637,3.941]],["title/interfaces/Course.html",[72,0.609,407,0.788]],["body/interfaces/Course.html",[2,0.363,3,0.363,7,0.266,9,0.748,12,1.7,17,1.067,45,0.807,47,0.62,48,0.476,63,0.019,64,0.575,65,0.995,66,1.004,67,0.803,72,1.125,77,0.734,78,1.361,84,0.544,95,0.77,96,0.303,103,0.787,132,0.712,136,1.265,138,1.048,139,0.748,147,0.868,156,1.067,165,1.984,171,1.119,181,0.712,184,0.769,193,1.119,197,0.853,210,0.476,213,0.011,214,0.01,251,1.079,267,2.132,285,0.452,300,2.037,301,1.877,305,1.805,315,1.001,322,1.266,356,1.392,367,2.679,370,1.606,371,1.265,382,1.079,388,0.701,389,2.541,390,0.93,401,2.161,402,1.425,407,1.37,408,1.339,409,1.421,410,0.977,411,1.66,412,1.462,413,2.424,414,1.7,415,2.109,416,1.421,417,2.995,418,2.518,419,2.83,420,2.384,421,1.079,422,2.3,423,2.829,424,1.198,425,1.792,426,1.84,427,1.803,428,2.679,429,1.327,430,2.329,431,1.792,432,1.792,433,2.261,434,1.792,435,2.185,436,2.148,437,1.59,438,1.392,439,1.84,440,1.751,441,1.615,442,1.935,443,1.421,444,1.198,445,1.327,446,1.136,447,1.079,448,2.31,449,1.198,450,1.421,451,1.421,452,2.266,453,1.136,454,1.7,455,2.004,456,1.421,457,2.401,458,1.026,459,1.198,460,1.198,461,2.037,462,1.824,463,1.265,464,0.977,465,1.265,466,1.026,467,1.615,468,1.079,469,1.026,470,1.265,471,1.421,472,1.421,473,1.079,474,1.339,475,1.421,476,1.421,477,2.057,478,1.198,479,1.339,480,1.421,481,1.89,482,1.421,483,1.136,484,1.421,485,1.136,486,1.792,487,2.829,488,2.829,489,3.18,490,2.127,491,2.004,492,2.004,493,2.83,494,1.198,495,2.004,496,1.615,497,2.995,498,2.995,499,2.004,500,1.535]],["title/components/CourseChipComponent.html",[0,0.484,186,1.1]],["body/components/CourseChipComponent.html",[0,0.84,1,0.904,2,0.447,3,0.447,4,0.947,5,1.091,6,1.091,7,0.327,9,0.652,16,2.774,21,1.091,22,2.453,23,2.34,25,1.544,27,1.544,29,1.35,32,2.394,34,2.591,37,1.608,47,0.505,48,0.961,49,2.294,60,2.33,62,1.009,63,0.018,64,0.988,65,0.734,66,0.734,67,0.612,68,0.871,71,1.415,72,1.153,83,2.294,84,0.798,85,0.68,89,1.262,92,1.474,94,1.972,95,0.397,96,0.373,97,1.228,99,1.398,103,0.915,118,5.597,120,4.05,132,1.265,138,1.058,143,2.33,151,1.648,156,1.01,170,0.862,171,0.871,172,1.472,173,1.544,174,1.783,175,1.091,178,1.091,179,0.904,180,1.091,181,0.585,182,1.091,183,0.904,184,0.527,185,1.091,186,1.613,187,1.091,188,0.862,189,1.544,190,0.904,191,1.091,192,0.862,193,0.616,194,1.091,195,0.904,196,1.091,197,0.585,198,1.091,199,0.904,200,1.091,201,0.904,202,1.091,203,0.904,204,1.091,205,0.823,206,1.091,207,0.904,208,1.041,209,1.091,210,0.585,211,0.862,212,1.091,213,0.011,214,0.015,285,0.556,286,1.7,289,1.544,298,1.947,322,2.136,324,1.474,375,1.786,377,2.595,389,1.977,390,1.619,401,1.771,407,0.647,415,1.766,417,2.94,418,2.93,429,1.947,440,2.144,452,1.857,462,0.904,473,1.878,481,2.054,493,2.554,638,4.678,639,5.138,640,2.863,641,4.708,642,4.708,643,6.267,644,6.506,645,5.109,646,5.939,647,1.863,648,4.708,649,3.329,650,3.828,651,4.708,652,4.708,653,4.708,654,4.708,655,3.329,656,3.617,657,3.329,658,3.329,659,2.863,660,3.329,661,3.329,662,3.329,663,3.329,664,3.329,665,5.939,666,4.708,667,2.863,668,4.708,669,3.617,670,3.329,671,3.329,672,3.329,673,3.329,674,3.329,675,3.329,676,3.329,677,1.993,678,3.329,679,2.863,680,1.749,681,2.328,682,2.863,683,4.05,684,3.617]],["title/components/CourseSelectionComponent.html",[0,0.484,188,1.05]],["body/components/CourseSelectionComponent.html",[0,0.65,1,0.645,2,0.319,3,0.319,4,0.676,5,0.779,6,0.779,7,0.44,9,0.601,13,2.565,17,0.678,21,0.779,22,2.342,23,2.234,25,1.202,27,1.202,29,1.107,32,2.294,33,3.255,37,1.715,44,1.391,47,0.312,48,0.418,53,1.33,59,2.218,61,1.216,62,1.285,63,0.018,64,0.852,65,0.872,66,0.677,67,0.266,68,1.109,69,1.469,70,1.966,71,1.76,72,1.153,73,1.262,74,2.647,75,2.218,76,2.053,77,0.996,84,0.677,85,0.485,89,0.901,90,1.531,94,1.324,95,0.283,96,0.266,97,1.545,98,1.33,99,2.913,103,0.713,109,2.41,132,1.208,137,1.825,138,0.818,143,2.695,147,0.509,151,2.218,155,2.818,156,0.829,165,1.966,170,0.616,171,0.932,172,2.097,173,1.202,174,1.549,175,0.779,178,0.779,179,0.645,180,0.779,181,0.418,182,0.779,183,0.645,184,0.71,185,0.779,186,0.645,187,0.779,188,1.305,189,1.202,190,0.645,191,0.779,192,0.616,193,0.439,194,0.779,195,0.645,196,0.779,197,0.418,198,0.779,199,0.645,200,0.779,201,0.645,202,0.779,203,0.645,204,0.779,205,0.587,206,0.779,207,0.645,208,0.743,209,0.779,210,0.418,211,0.616,212,0.779,213,0.016,214,0.013,267,0.743,285,0.397,286,1.617,289,1.202,298,1.202,301,1.549,305,1.094,315,0.907,329,1.662,352,1.423,369,3.634,375,0.901,377,1.463,386,1.825,402,1.483,407,0.462,411,1.107,415,1.368,427,1.147,429,2.199,430,1.617,435,1.819,448,1.541,452,1.799,469,1.391,481,0.779,491,1.816,492,1.816,493,2.356,495,2.494,497,3.363,498,3.32,523,4.38,554,2.874,555,2.818,568,4.895,569,3.808,570,4.025,590,1.825,625,2.044,638,4.806,669,1.825,683,3.155,684,2.818,685,5.278,686,1.825,687,2.818,688,3.668,689,3.155,690,3.155,691,6.493,692,5.038,693,5.444,694,6.195,695,5.444,696,4.48,697,3.87,698,3.668,699,3.668,700,2.044,701,3.668,702,2.376,703,2.565,704,3.668,705,3.668,706,2.818,707,5.038,708,2.376,709,3.26,710,2.364,711,5.038,712,3.668,713,2.376,714,6.195,715,3.668,716,2.565,717,3.155,718,2.044,719,6.195,720,2.376,721,2.376,722,2.376,723,2.376,724,2.376,725,2.376,726,2.376,727,2.376,728,2.376,729,2.376,730,2.376,731,2.376,732,2.044,733,2.376,734,2.376,735,1.662,736,1.531,737,2.376,738,4.48,739,2.376,740,3.668,741,2.376,742,1.248,743,3.668,744,1.662,745,2.376,746,2.376,747,2.376,748,2.376,749,2.376,750,2.376,751,1.825,752,2.376,753,2.376,754,2.376,755,3.668,756,2.044,757,1.662,758,1.423,759,2.376,760,2.376,761,2.376,762,4.48,763,2.376,764,2.376,765,3.668,766,3.668,767,2.376,768,2.376,769,2.376,770,3.668,771,2.376,772,3.668,773,2.376,774,2.376,775,2.376,776,3.441,777,2.376,778,1.816,779,3.668,780,3.668,781,3.668,782,3.668,783,5.038,784,3.668,785,3.668,786,3.668,787,3.668,788,3.668,789,3.668,790,3.668]],["title/injectables/CourseService.html",[32,1.329,277,1.702]],["body/injectables/CourseService.html",[2,0.354,3,0.354,7,0.259,9,0.715,13,2.775,17,0.734,24,1.697,29,1.409,32,1.301,37,1.748,44,1.505,49,1.666,54,2.974,60,2.63,62,1.371,63,0.019,64,0.931,65,0.805,66,0.922,67,0.717,68,0.983,69,1.301,70,1.432,71,1.799,72,1.154,73,1.365,83,1.666,84,0.533,85,0.538,95,0.314,96,0.639,97,1.472,103,0.771,106,1.577,109,1.756,112,2.557,132,1.317,138,1.104,143,1.964,147,0.85,156,1.234,159,2.352,172,1.661,184,0.417,188,1.377,213,0.009,214,0.009,270,2.023,277,2.004,285,0.44,289,1.301,301,1.358,307,2.557,315,0.981,322,2.385,375,2.162,377,1.582,390,1.365,396,3.048,397,4.082,401,1.854,402,1.313,407,0.512,411,0.981,412,2.409,415,1.935,427,0.823,430,2.446,435,1.432,437,1.869,445,2.098,448,1.365,461,1.666,462,1.811,463,2.232,464,1.723,465,2.232,466,1.811,481,2.251,494,1.166,496,2.119,530,2.792,531,1.474,553,2.023,554,1.166,606,3.716,656,4.082,659,3.413,679,2.265,680,1.384,681,3.716,682,2.265,697,2.023,703,3.716,735,1.842,751,4.082,776,4.602,791,2.265,792,3.968,793,3.968,794,3.968,795,3.048,796,5.739,797,5.313,798,5.313,799,5.313,800,5.313,801,3.968,802,3.968,803,3.968,804,3.968,805,3.968,806,3.968,807,3.968,808,2.633,809,3.968,810,2.633,811,3.968,812,3.968,813,3.968,814,2.633,815,3.968,816,3.425,817,3.587,818,3.968,819,2.633,820,4.602,821,5.313,822,5.313,823,4.082,824,3.968,825,2.633,826,4.571,827,3.968,828,2.633,829,3.968,830,3.968,831,2.633,832,3.968,833,2.633,834,2.633,835,2.633,836,2.633,837,2.633,838,2.265,839,3.968,840,2.633,841,2.633,842,2.265,843,2.633,844,2.633,845,1.842,846,4.774,847,2.633,848,2.633,849,2.633,850,2.633,851,2.633,852,2.265,853,2.633,854,2.633,855,3.968,856,2.633,857,2.633,858,4.774,859,5.313,860,2.633,861,2.633,862,2.633,863,2.633,864,2.265,865,2.633,866,2.633,867,2.633,868,2.633,869,2.265,870,2.265,871,2.633,872,2.633,873,2.633,874,3.968,875,3.987,876,3.413,877,2.265,878,2.633,879,4.774,880,2.265,881,4.571,882,2.775,883,3.968,884,2.633,885,2.023,886,2.265]],["title/components/CourseSidebarComponent.html",[0,0.484,190,1.1]],["body/components/CourseSidebarComponent.html",[0,0.79,1,0.954,2,0.472,3,0.472,4,0.999,5,1.151,6,1.151,7,0.345,9,0.671,21,1.151,22,2.469,23,2.362,25,1.603,27,1.603,29,1.39,32,2.38,34,2.626,37,1.58,47,0.517,48,0.86,49,2.361,54,3.403,62,1.048,63,0.018,64,0.864,65,0.755,66,0.755,67,0.631,68,1.256,69,2.096,70,2.452,71,1.865,72,1.168,78,1.099,83,2.361,84,0.817,85,0.717,89,1.332,92,1.555,94,2.03,95,0.419,96,0.548,97,1.264,99,1.475,103,0.95,114,3.021,115,5.841,116,3.021,117,3.021,132,1.069,138,0.96,147,1.303,153,4.206,156,1.125,170,0.91,171,0.904,172,1.758,173,1.603,174,1.73,175,1.151,178,1.151,179,0.954,180,1.151,181,0.618,182,1.151,183,0.954,184,0.557,185,1.151,186,0.954,187,1.151,188,1.656,189,1.603,190,1.651,191,1.151,192,0.91,193,0.65,194,1.151,195,0.954,196,1.151,197,0.618,198,1.151,199,0.954,200,1.151,201,0.954,202,1.151,203,0.954,204,1.151,205,0.868,206,1.151,207,0.954,208,1.098,209,1.151,210,0.618,211,0.91,212,1.151,213,0.012,214,0.012,285,0.587,286,1.765,289,1.603,324,1.555,373,3.963,375,2.133,377,2.64,388,1.267,401,1.458,402,1.208,407,0.683,530,2.955,535,4.838,638,4.629,647,1.966,687,4.32,842,4.206,887,5.084,888,3.021,889,4.889,890,6.392,891,6.081,892,6.081,893,4.889,894,3.512,895,3.512,896,3.512,897,3.512,898,2.736,899,3.512,900,3.512,901,4.889,902,3.512,903,6.392,904,3.512,905,3.021,906,5.624,907,4.889,908,3.512,909,3.512,910,2.698,911,3.512,912,3.512]],["title/interfaces/DiscoverOption.html",[407,0.788,426,1.537]],["body/interfaces/DiscoverOption.html",[2,0.376,3,0.376,7,0.275,9,0.82,12,2.08,17,1.134,45,0.836,47,0.62,48,0.493,63,0.019,64,0.398,65,1.005,66,1.008,67,0.817,72,1.065,77,0.761,78,1.465,84,0.558,95,0.778,96,0.314,103,0.808,132,0.493,136,1.31,138,1.056,139,0.778,147,0.601,156,0.916,165,1.363,171,1.134,181,0.731,184,0.659,193,0.769,197,0.871,210,0.493,213,0.012,214,0.01,251,1.118,267,2.149,285,0.468,300,1.745,301,1.806,305,1.24,315,1.225,322,1.299,356,1.43,367,1.84,370,1.634,371,1.31,382,1.118,388,0.726,389,2.574,390,0.964,401,2.172,402,1.569,407,1.39,408,1.387,409,1.473,410,1.012,411,1.72,412,1.501,413,2.505,414,1.745,415,2.105,416,1.473,417,2.897,418,2.737,419,2.737,420,2.426,421,1.118,422,2.334,423,3.075,424,1.84,425,2.193,426,2.079,427,2.082,428,2.886,429,1.624,430,2.512,431,2.193,432,2.193,433,2.737,434,2.591,435,2.113,436,2.6,437,1.624,438,1.43,439,1.879,440,1.789,441,1.658,442,1.976,443,1.473,444,1.241,445,1.363,446,1.177,447,1.118,448,2.109,449,1.241,450,1.473,451,1.473,452,2.175,453,1.177,454,1.745,455,2.057,456,1.473,457,2.452,458,1.063,459,1.241,460,1.241,461,1.745,462,1.488,463,1.31,464,1.012,465,1.31,466,1.063,467,1.658,468,1.118,469,1.063,470,1.31,471,1.473,472,1.473,473,1.118,474,1.387,475,1.473,476,1.473,477,2.081,478,1.241,479,1.387,480,1.473,481,1.624,482,1.473,483,1.177,484,1.473,485,1.177,486,1.241,487,1.473,488,1.473,489,2.184,490,1.473,491,1.387,492,1.387,493,1.944,494,1.241,495,1.387,496,1.118,497,2.057,498,2.057,499,1.387,500,1.063]],["title/interfaces/EditorTab.html",[407,0.788,442,1.616]],["body/interfaces/EditorTab.html",[2,0.392,3,0.392,7,0.287,9,0.767,12,1.799,17,1.151,45,0.871,47,0.62,48,0.514,63,0.019,64,0.415,65,0.96,66,0.973,67,0.817,72,1.073,77,0.793,78,1.399,84,0.576,95,0.787,96,0.327,103,0.833,132,0.514,136,1.366,138,1.073,139,0.767,147,0.626,156,0.939,165,1.405,171,1.22,181,0.753,184,0.804,193,0.793,197,0.892,210,0.514,213,0.012,214,0.01,251,1.165,267,2.168,285,0.488,300,1.799,301,1.83,305,1.278,315,1.059,322,1.34,356,1.474,367,1.897,370,1.667,371,1.366,382,1.165,388,0.757,389,2.7,390,1.005,401,2.185,402,1.472,407,1.4,408,1.446,409,1.535,410,1.054,411,1.691,412,1.547,413,2.52,414,1.799,415,2.101,416,1.535,417,2.947,418,2.614,419,2.784,420,2.475,421,1.165,422,2.374,423,2.937,424,1.293,425,1.897,426,1.925,427,1.945,428,2.755,429,1.405,430,2.381,431,1.897,432,1.897,433,2.347,434,1.897,435,2.018,436,2.23,437,1.664,438,1.474,439,1.925,440,2.149,441,2.024,442,2.23,443,2.251,444,2.475,445,1.664,446,1.799,447,2.23,448,2.14,449,1.293,450,1.535,451,1.535,452,2.193,453,1.226,454,1.799,455,2.121,456,1.535,457,2.512,458,1.108,459,1.293,460,1.293,461,1.799,462,1.518,463,1.366,464,1.054,465,1.366,466,1.108,467,1.709,468,1.165,469,1.108,470,1.366,471,1.535,472,1.535,473,1.165,474,1.446,475,1.535,476,1.535,477,2.108,478,1.293,479,1.446,480,1.535,481,1.664,482,1.535,483,1.226,484,1.535,485,1.226,486,1.293,487,1.535,488,1.535,489,2.251,490,1.535,491,1.446,492,1.446,493,2.004,494,1.293,495,1.446,496,1.165,497,2.121,498,2.121,499,1.446,500,1.108]],["title/components/ErrorPageComponent.html",[0,0.484,192,1.05]],["body/components/ErrorPageComponent.html",[0,0.818,1,1.173,2,0.58,3,0.58,4,1.229,5,1.417,6,1.417,7,0.425,9,0.516,16,2.489,17,1.04,21,1.417,22,2.522,23,2.405,25,1.843,27,1.843,29,1.544,33,3.762,37,1.068,47,0.478,48,0.76,49,2.623,61,1.797,62,0.926,63,0.018,64,0.888,65,0.58,66,0.755,67,0.7,69,1.843,72,0.938,78,1.264,83,2.623,84,0.755,85,0.882,90,2.785,94,2.256,95,0.516,96,0.484,97,0.971,98,2.418,138,1.03,139,0.671,168,3.146,170,1.119,171,1.04,172,1.757,173,1.843,174,1.883,175,1.417,178,1.417,179,1.173,180,1.417,181,0.76,182,1.417,183,1.173,184,0.685,185,1.417,186,1.173,187,1.417,188,1.119,189,1.843,190,1.173,191,1.417,192,1.714,193,1.411,194,1.417,195,1.173,196,1.417,197,0.76,198,1.417,199,1.173,200,1.417,201,1.173,202,1.417,203,1.173,204,1.417,205,1.068,206,1.417,207,1.173,208,1.351,209,1.417,210,0.76,211,1.119,212,1.417,213,0.013,214,0.013,263,4.628,322,1.757,350,3.146,411,1.636,700,3.717,913,3.717,914,5.621,915,6.86,916,4.321,917,4.318,918,3.932,919,6.617,920,5.621,921,4.321,922,5.621,923,5.621,924,3.146,925,4.318,926,4.321]],["title/interfaces/FixOption.html",[407,0.788,439,1.537]],["body/interfaces/FixOption.html",[2,0.376,3,0.376,7,0.275,9,0.82,12,2.08,17,1.134,45,0.836,47,0.62,48,0.493,63,0.019,64,0.398,65,1.005,66,1.002,67,0.817,72,1.065,77,0.761,78,1.465,84,0.558,95,0.778,96,0.314,103,0.808,132,0.493,136,1.31,138,1.065,139,0.757,147,0.601,156,0.916,165,1.363,171,1.134,181,0.731,184,0.659,193,0.769,197,0.871,210,0.493,213,0.012,214,0.01,251,1.118,267,2.149,285,0.468,300,1.745,301,1.806,305,1.24,315,1.225,322,1.299,356,1.43,367,1.84,370,1.746,371,1.31,382,1.118,388,0.726,389,2.574,390,0.964,401,2.172,402,1.569,407,1.39,408,1.387,409,1.473,410,1.012,411,1.72,412,1.501,413,2.505,414,1.745,415,2.105,416,1.473,417,2.897,418,2.737,419,2.737,420,2.426,421,1.118,422,2.334,423,3.075,424,1.241,425,2.193,426,1.879,427,2.082,428,2.886,429,1.624,430,2.512,431,2.193,432,2.193,433,2.737,434,2.591,435,2.113,436,2.6,437,1.797,438,1.704,439,2.079,440,1.789,441,1.658,442,1.976,443,1.473,444,1.241,445,1.363,446,1.177,447,1.118,448,2.109,449,1.241,450,1.473,451,1.473,452,2.175,453,1.177,454,1.745,455,2.057,456,1.473,457,2.452,458,1.063,459,1.241,460,1.241,461,1.745,462,1.488,463,1.31,464,1.012,465,1.31,466,1.063,467,1.658,468,1.118,469,1.063,470,1.31,471,1.473,472,1.473,473,1.118,474,1.387,475,1.473,476,1.473,477,2.081,478,1.241,479,1.387,480,1.473,481,1.624,482,1.473,483,1.177,484,1.473,485,1.177,486,1.241,487,1.473,488,1.473,489,2.184,490,1.473,491,1.387,492,1.387,493,1.944,494,1.241,495,1.387,496,1.118,497,2.057,498,2.057,499,1.387,500,1.063]],["title/modules/HomePageModule.html",[215,1.463,225,2.612]],["body/modules/HomePageModule.html",[2,0.655,3,0.655,7,0.479,47,0.415,55,2.918,63,0.018,66,0.655,68,0.901,84,1.02,85,0.995,88,2.158,95,0.825,96,0.546,121,1.849,170,1.263,179,2.071,181,1.276,192,1.976,193,0.901,205,1.793,210,1.276,213,0.014,214,0.014,215,2.191,217,2.728,218,4.26,219,3.141,225,4.98,228,3.912,233,4.245,234,4.245,239,2.046,252,4.193,258,3.744,259,3.409,260,3.744,262,3.409,263,3.409,264,4.193,350,2.728,380,2.561,421,1.944,927,4.193,928,4.193,929,4.193,930,4.193,931,4.662,932,3.409,933,4.662,934,4.874,935,4.874,936,5.686,937,5.686]],["title/interfaces/Issue.html",[138,0.609,407,0.788]],["body/interfaces/Issue.html",[2,0.369,3,0.369,7,0.27,9,0.753,12,1.721,17,1.074,45,0.82,47,0.618,48,0.484,63,0.019,64,0.391,65,0.985,66,1,67,0.822,72,1.062,77,0.747,78,1.369,84,0.551,95,0.774,96,0.308,103,0.797,132,0.484,136,1.286,138,1.102,139,0.774,147,0.59,156,1.004,165,1.344,171,1.266,181,0.721,184,0.65,193,0.758,197,0.955,210,0.484,213,0.013,214,0.01,251,1.097,267,2.14,285,0.459,300,1.721,301,1.653,305,1.223,315,1.013,322,1.904,356,2.094,367,1.815,370,1.62,371,1.917,382,1.097,388,1.062,389,2.782,390,0.946,401,2.188,402,1.667,407,1.374,408,1.362,409,1.445,410,0.993,411,1.748,412,1.48,413,2.499,414,1.721,415,2.097,416,1.445,417,3.014,418,2.539,419,2.716,420,2.986,421,1.097,422,2.764,423,2.853,424,1.218,425,1.815,426,1.859,427,1.816,428,2.87,429,1.344,430,2.341,431,1.815,432,1.815,433,2.28,434,1.815,435,1.961,436,2.166,437,1.78,438,1.41,439,2.06,440,1.769,441,1.635,442,1.954,443,1.445,444,1.218,445,1.344,446,1.155,447,1.097,448,2.094,449,1.218,450,1.445,451,1.445,452,2.167,453,1.155,454,1.721,455,2.029,456,1.445,457,2.688,458,1.043,459,1.218,460,1.218,461,2.058,462,1.577,463,1.917,464,1.48,465,1.917,466,1.555,467,1.954,468,1.635,469,1.555,470,1.917,471,2.154,472,2.853,473,1.635,474,2.029,475,2.154,476,2.853,477,2.068,478,1.218,479,1.362,480,1.445,481,1.606,482,1.445,483,1.155,484,1.445,485,1.155,486,1.218,487,1.445,488,1.445,489,2.154,490,1.445,491,1.362,492,1.362,493,1.917,494,1.218,495,1.362,496,1.097,497,2.029,498,2.029,499,1.362,500,1.043]],["title/components/IssueCardComponent.html",[0,0.484,195,1.1]],["body/components/IssueCardComponent.html",[0,0.853,1,0.92,2,0.455,3,0.455,4,0.964,5,1.11,6,1.11,7,0.588,9,0.569,19,4.1,21,1.11,22,2.458,23,2.344,25,1.562,27,1.562,29,1.363,32,2.365,37,1.661,47,0.405,48,0.97,49,2.001,62,0.726,63,0.018,64,0.784,65,0.969,66,0.64,67,0.734,68,1.02,69,1.808,70,2.277,71,1.429,72,0.983,84,0.741,85,0.691,89,1.284,95,0.404,96,0.618,97,0.761,103,1.163,126,2.11,132,1.109,138,1.073,139,0.832,170,0.877,171,0.882,172,2.045,173,1.562,174,1.703,175,1.11,178,1.11,179,0.92,180,1.11,181,0.596,182,1.11,183,0.92,184,0.537,185,1.11,186,0.92,187,1.11,188,0.877,189,1.562,190,0.92,191,1.11,192,0.877,193,0.626,194,1.11,195,1.625,196,1.11,197,0.596,198,1.11,199,0.92,200,1.11,201,1.497,202,1.11,203,0.92,204,1.11,205,0.837,206,1.11,207,0.92,208,1.059,209,1.11,210,0.596,211,0.877,212,1.11,213,0.011,214,0.011,215,2.161,280,3.661,285,0.566,286,1.721,289,1.562,320,3.857,324,1.499,375,1.284,388,1.235,390,1.639,401,1.645,407,0.658,411,1.479,412,2.552,413,1.639,415,0.92,429,1.808,445,1.562,452,1.49,453,2.648,454,2.001,461,2.001,462,1.919,477,2.068,479,2.962,481,1.562,483,2.001,501,3.209,530,2.504,549,3.333,554,2.11,568,4.186,569,2.369,570,3.333,647,1.895,684,3.661,717,5.426,817,3.584,820,3.661,826,4.1,938,4.109,939,5.271,940,2.913,941,6.307,942,4.766,943,4.766,944,6.307,945,6.542,946,5.985,947,4.766,948,3.387,949,3.387,950,3.387,951,4.766,952,4.766,953,3.387,954,4.766,955,4.1,956,5.515,957,3.333,958,3.387,959,4.766,960,3.387,961,3.387,962,3.387,963,3.387,964,4.186,965,5.148,966,3.333,967,3.387,968,3.387,969,3.387,970,3.387,971,3.387,972,3.387,973,3.387,974,3.387,975,3.387,976,3.387,977,3.387,978,4.1,979,4.1,980,3.661]],["title/components/IssueContainerComponent.html",[0,0.484,197,0.713]],["body/components/IssueContainerComponent.html",[0,0.718,1,0.651,2,0.322,3,0.322,4,1.282,5,0.786,6,0.786,7,0.236,9,0.652,21,0.786,22,2.346,23,2.261,25,1.211,27,1.211,29,1.114,32,2.037,34,2.282,37,1.637,44,1.401,47,0.491,48,0.422,49,1.892,54,2.067,61,1.003,62,1.085,63,0.019,64,0.883,65,0.734,66,0.856,67,0.743,68,1.068,69,1.66,70,2.243,71,0.957,72,0.904,78,1.138,83,1.892,84,0.734,85,0.49,89,0.909,92,1.062,94,1.627,95,0.286,96,0.754,97,1.299,98,1.342,99,1.007,103,0.718,132,1.258,138,1.146,143,1.187,147,1.085,151,1.187,154,1.26,156,0.936,170,0.621,171,0.936,172,1.806,173,1.211,174,1.44,175,0.786,178,0.786,179,0.651,180,0.786,181,0.422,182,0.786,183,0.651,184,0.714,185,0.786,186,0.651,187,0.786,188,0.621,189,1.211,190,0.651,191,0.786,192,0.621,193,0.444,194,0.786,195,0.651,196,0.786,197,0.89,198,0.786,199,0.651,200,0.786,201,0.651,202,0.786,203,0.651,204,0.786,205,0.593,206,0.786,207,0.651,208,0.75,209,0.786,210,0.422,211,0.621,212,0.786,213,0.009,214,0.009,281,2.067,285,0.965,289,1.211,298,1.477,301,1.282,320,2.381,322,2.102,352,3.031,356,1.271,364,3.824,369,2.067,370,1.51,375,1.709,388,1.496,390,1.271,394,1.677,396,2.838,397,2.838,401,1.631,402,1.114,407,0.466,411,1.609,412,1.334,413,1.55,415,1.767,419,1.727,422,0.956,427,1.155,428,2.241,429,1.477,430,1.627,435,1.828,437,2.232,439,0.909,440,1.828,441,2.304,445,1.66,447,0.956,448,1.271,457,1.187,461,1.551,463,2.367,464,2.301,465,2.981,466,2.282,470,2.107,477,1.211,481,1.211,499,1.828,501,3.143,507,3.876,515,4.355,531,1.342,541,2.838,545,2.381,554,1.635,566,2.067,568,3.541,569,1.677,570,2.584,606,2.584,680,3.42,709,3.031,735,1.677,778,1.828,817,2.212,869,3.178,870,3.178,876,2.063,880,2.063,881,2.063,885,1.842,905,3.178,924,2.067,925,2.838,938,4.026,980,2.838,981,5.164,982,2.063,983,3.694,984,5.467,985,5.062,986,5.062,987,3.694,988,5.062,989,3.694,990,3.694,991,5.062,992,3.694,993,5.776,994,2.398,995,2.398,996,2.398,997,3.694,998,2.067,999,3.694,1000,3.694,1001,5.467,1002,2.398,1003,5.467,1004,2.398,1005,2.398,1006,3.694,1007,3.694,1008,2.398,1009,3.694,1010,3.694,1011,3.694,1012,3.694,1013,2.398,1014,5.062,1015,2.398,1016,3.694,1017,3.178,1018,3.178,1019,3.694,1020,2.584,1021,2.398,1022,2.398,1023,2.398,1024,2.398,1025,2.398,1026,2.398,1027,2.398,1028,2.398,1029,2.398,1030,2.398,1031,4.506,1032,2.398,1033,1.842,1034,2.398,1035,2.398,1036,2.398,1037,2.398,1038,2.398,1039,2.398,1040,2.398,1041,2.398,1042,2.398,1043,2.398,1044,6.374,1045,3.694,1046,2.398,1047,2.398,1048,2.398,1049,2.398,1050,2.398,1051,2.398,1052,3.178,1053,3.178,1054,5.062,1055,5.062]],["title/components/IssueDetailsComponent.html",[0,0.484,199,1.1]],["body/components/IssueDetailsComponent.html",[0,0.814,1,1.153,2,0.57,3,0.57,4,1.208,5,1.392,6,1.392,7,0.417,9,0.663,21,1.392,22,2.518,23,2.401,25,1.822,27,1.822,29,1.531,32,2.453,37,1.374,47,0.473,48,0.747,49,2.76,62,0.91,63,0.018,64,0.88,65,0.746,66,0.746,67,0.785,68,1.146,69,2.031,70,2.237,71,1.767,72,1.051,83,2.76,84,0.746,85,0.867,89,1.61,94,2.373,95,0.507,96,0.476,97,0.954,103,1.08,138,1.153,156,1.028,170,1.1,171,1.028,172,1.737,173,1.822,174,1.87,175,1.392,178,1.392,179,1.153,180,1.392,181,0.747,182,1.392,183,1.153,184,0.673,185,1.392,186,1.153,187,1.392,188,1.1,189,1.822,190,1.153,191,1.392,192,1.1,193,0.785,194,1.392,195,1.153,196,1.392,197,0.977,198,1.392,199,1.784,200,1.392,201,1.153,202,1.392,203,1.153,204,1.392,205,1.049,206,1.392,207,1.153,208,1.327,209,1.392,210,0.747,211,1.1,212,1.392,213,0.013,214,0.013,285,0.709,286,2.006,324,1.879,356,1.911,388,1.44,401,1.657,411,1.374,462,1.509,485,2.333,501,2.897,647,2.376,938,3.709,1056,4.759,1057,3.652,1058,5.557,1059,6.998,1060,4.245,1061,4.245,1062,4.245,1063,4.78,1064,5.557]],["title/interfaces/IssueItem.html",[407,0.788,462,1.1]],["body/interfaces/IssueItem.html",[2,0.381,3,0.381,7,0.279,9,0.76,12,1.762,17,1.089,45,0.847,47,0.621,48,0.738,63,0.019,64,0.404,65,0.975,66,0.969,67,0.809,72,1.076,77,0.771,78,1.385,84,0.564,95,0.781,96,0.318,103,0.816,132,0.499,136,1.328,138,1.101,139,0.797,147,0.609,156,0.923,165,1.376,171,1.139,181,0.738,184,0.665,193,0.776,197,0.878,210,0.499,213,0.012,214,0.01,251,1.133,267,2.24,285,0.474,300,1.762,301,1.675,305,1.252,315,1.037,322,1.312,356,1.443,367,1.858,370,1.645,371,1.328,382,1.133,388,0.736,389,2.587,390,0.977,401,2.214,402,1.455,407,1.382,408,1.405,409,1.492,410,1.025,411,1.68,412,1.515,413,2.51,414,1.762,415,2.1,416,1.492,417,3.049,418,2.579,419,2.98,420,2.442,421,1.133,422,2.347,423,2.898,424,1.257,425,1.858,426,1.894,427,1.84,428,2.727,429,1.376,430,2.362,431,1.858,432,1.858,433,2.316,434,1.858,435,1.991,436,2.2,437,1.637,438,1.717,439,1.894,440,1.802,441,1.674,442,1.991,443,1.492,444,1.257,445,1.376,446,1.192,447,1.133,448,2.25,449,1.257,450,1.492,451,1.492,452,2.269,453,1.192,454,2.096,455,2.471,456,1.492,457,2.471,458,1.077,459,1.257,460,1.257,461,1.762,462,1.598,463,1.328,464,1.025,465,1.328,466,1.077,467,1.991,468,1.133,469,1.077,470,1.328,471,1.492,472,1.492,473,1.133,474,1.405,475,1.492,476,1.492,477,2.331,478,1.858,479,2.077,480,2.898,481,2.089,482,2.898,483,1.762,484,1.492,485,1.762,486,1.257,487,1.492,488,1.492,489,2.205,490,1.492,491,1.405,492,1.405,493,1.962,494,1.257,495,1.405,496,1.133,497,2.077,498,2.077,499,1.405,500,1.077]],["title/components/IssueListComponent.html",[0,0.484,201,1.1]],["body/components/IssueListComponent.html",[0,0.806,1,1.118,2,0.553,3,0.553,4,1.172,5,1.35,6,1.35,7,0.405,9,0.65,21,1.35,22,2.51,23,2.394,25,1.786,27,1.786,29,1.509,32,2.442,37,1.347,47,0.553,48,0.724,49,2.727,60,3.215,61,1.479,62,0.883,63,0.018,64,0.96,65,0.732,66,0.732,67,0.728,68,1.129,69,2.001,70,2.204,71,1.75,72,1.131,83,2.727,84,0.732,85,0.841,89,1.562,94,2.345,95,0.491,96,0.462,97,0.926,103,1.059,107,4.686,138,1.144,143,2.697,156,1.008,170,1.067,171,1.008,172,1.703,173,1.786,174,1.848,175,1.35,178,1.35,179,1.118,180,1.35,181,0.724,182,1.35,183,1.118,184,0.653,185,1.35,186,1.118,187,1.35,188,1.067,189,1.786,190,1.118,191,1.35,192,1.067,193,0.762,194,1.35,195,1.118,196,1.35,197,0.724,198,1.35,199,1.118,200,1.35,201,1.764,202,1.35,203,1.118,204,1.35,205,1.018,206,1.35,207,1.118,208,1.288,209,1.35,210,0.724,211,1.067,212,1.35,213,0.013,214,0.013,285,0.688,286,1.967,305,1.625,324,1.824,401,1.228,411,1.347,438,1.874,448,1.874,462,1.118,466,2.066,477,1.786,494,1.824,501,2.854,647,2.305,778,2.697,924,3.049,925,4.185,938,3.655,1065,4.689,1066,3.543,1067,5.448,1068,6.94,1069,4.119,1070,4.119,1071,5.448,1072,5.448,1073,5.448,1074,5.448]],["title/components/IssueNavComponent.html",[0,0.484,203,1.1]],["body/components/IssueNavComponent.html",[0,0.686,1,0.729,2,0.361,3,0.361,4,0.764,5,0.881,6,0.881,7,0.264,9,0.64,16,1.783,17,0.745,21,0.881,22,2.386,23,2.275,25,1.32,27,1.32,29,1.194,32,2.261,33,3.663,34,2.644,37,1.657,44,1.019,47,0.532,48,0.85,52,2.116,59,1.993,61,1.312,62,1.035,63,0.018,64,0.817,65,0.811,66,0.721,67,0.677,68,1.29,69,1.979,70,2.324,71,1.764,72,1.111,73,1.662,74,2.82,75,2.391,76,2.704,77,1.312,78,1.086,84,0.841,85,0.822,89,1.019,90,1.731,92,1.189,95,0.321,96,0.301,97,1.447,103,0.783,112,1.731,132,1.257,138,1.118,139,0.481,147,1.294,156,1.24,162,1.33,170,0.696,171,0.745,172,1.259,173,1.32,174,1.908,175,0.881,178,0.881,179,0.729,180,0.881,181,0.472,182,0.881,183,0.729,184,0.426,185,0.881,186,0.729,187,0.881,188,0.696,189,1.32,190,0.729,191,0.881,192,0.696,193,0.497,194,0.881,195,0.729,196,0.881,197,0.472,198,0.881,199,0.729,200,0.881,201,0.729,202,0.881,203,1.457,204,0.881,205,0.664,206,0.881,207,0.729,208,0.84,209,0.881,210,0.472,211,0.696,212,0.881,213,0.01,214,0.01,239,2.628,285,0.449,286,2.324,289,1.32,298,1.584,307,2.596,315,0.664,318,4.222,324,1.189,352,2.412,356,1.385,359,4.123,361,4.123,362,4.123,364,2.817,367,1.783,373,3.443,374,4.945,375,2.036,377,2.293,379,2.064,380,3.288,381,3.094,382,2.14,388,1.39,401,1.441,411,0.995,419,2.509,437,2.11,462,1.848,464,2.179,478,1.783,494,1.189,501,3.183,647,1.503,680,2.116,681,2.817,852,3.464,910,2.064,938,4.076,978,3.464,979,3.464,980,3.094,1063,2.311,1075,5.229,1076,2.311,1077,4.027,1078,4.027,1079,4.027,1080,5.367,1081,4.027,1082,4.027,1083,4.027,1084,2.686,1085,2.686,1086,5.749,1087,5.749,1088,4.027,1089,4.027,1090,2.686,1091,2.686,1092,4.027,1093,2.686,1094,2.686,1095,2.686,1096,2.686,1097,2.686,1098,2.311,1099,2.311,1100,4.156,1101,4.156,1102,2.686,1103,3.464,1104,2.686,1105,2.686,1106,2.686,1107,4.027,1108,2.686,1109,2.686,1110,2.686,1111,5.367,1112,4.027,1113,4.027,1114,4.027,1115,4.027,1116,4.027,1117,4.617,1118,4.027,1119,4.027,1120,4.027,1121,4.027,1122,1.731,1123,2.311,1124,2.686,1125,1.33,1126,2.686,1127,2.817,1128,2.686,1129,2.686,1130,2.686,1131,2.686,1132,2.686,1133,2.686,1134,2.686,1135,2.686,1136,4.027,1137,4.027,1138,3.464]],["title/injectables/KatanaService.html",[33,2.129,277,1.702]],["body/injectables/KatanaService.html",[2,0.296,3,0.296,7,0.217,9,0.413,17,1.079,18,1.618,24,1.421,29,1.056,31,3.381,32,1.981,33,1.818,34,2.292,35,3.894,36,3.065,37,1.572,42,2.244,44,1.994,45,1.032,47,0.592,54,1.937,56,1.158,59,2.888,60,2.602,61,0.94,62,1.196,63,0.019,64,0.793,65,0.811,66,0.897,67,0.542,68,1.176,69,1.586,70,1.249,71,1.445,72,1.072,73,1.19,74,1.818,76,1.937,77,1.966,78,0.778,79,2.658,81,0.657,82,2.708,83,1.794,84,0.811,85,0.45,86,2.897,88,0.976,89,0.836,91,1.896,92,0.976,93,1.542,94,0.796,95,0.263,96,0.247,97,1.397,98,1.234,99,2.208,103,0.673,109,2.815,112,1.421,113,5.197,121,1.312,122,4.286,123,5.195,126,2.142,128,2.977,132,1.268,136,1.031,138,0.973,143,1.713,147,0.915,151,2.762,154,1.158,155,2.658,156,1.176,159,2.751,162,2.762,193,1.199,213,0.008,214,0.008,238,1.896,277,1.794,281,1.234,284,2.897,285,0.368,286,1.249,289,1.134,298,2.084,305,0.657,307,2.23,315,0.855,319,4.523,322,1.335,329,1.542,337,1.896,338,3.596,367,1.532,369,2.708,370,1.032,373,2.897,375,1.312,377,1.93,388,0.897,402,1.379,415,1.64,420,0.976,424,1.532,425,1.532,437,1.724,438,1.664,448,1.19,452,1.513,455,1.713,458,2.213,464,0.796,467,1.38,468,1.38,473,1.38,474,1.713,477,1.981,500,1.62,523,2.072,531,1.937,542,1.38,590,2.658,650,2.23,677,2.072,680,1.158,697,2.658,742,1.158,744,3.384,776,3.717,823,2.658,845,1.542,910,2.658,955,4.799,957,4.346,1117,1.896,1123,4.799,1139,1.896,1140,4.839,1141,3.46,1142,3.46,1143,3.46,1144,4.839,1145,3.46,1146,2.205,1147,4.839,1148,3.46,1149,4.271,1150,3.46,1151,3.46,1152,2.205,1153,3.46,1154,2.205,1155,3.46,1156,2.205,1157,3.46,1158,2.205,1159,2.977,1160,2.205,1161,3.46,1162,2.205,1163,3.46,1164,4.839,1165,3.46,1166,4.839,1167,2.205,1168,2.988,1169,3.674,1170,2.205,1171,4.271,1172,1.234,1173,4.271,1174,2.205,1175,2.205,1176,2.205,1177,2.988,1178,3.384,1179,4.839,1180,4.839,1181,2.205,1182,4.839,1183,3.46,1184,2.205,1185,2.205,1186,2.23,1187,2.205,1188,5.579,1189,5.579,1190,3.46,1191,2.205,1192,4.839,1193,3.46,1194,2.205,1195,2.205,1196,3.46,1197,2.205,1198,2.205,1199,2.205,1200,3.46,1201,2.205,1202,3.46,1203,5.579,1204,4.839,1205,2.42,1206,2.42,1207,2.42,1208,2.205,1209,3.46,1210,2.205,1211,2.072,1212,2.205,1213,1.542,1214,1.542,1215,2.205,1216,1.896,1217,1.693,1218,2.205,1219,2.205,1220,2.205,1221,2.205,1222,1.542,1223,1.32,1224,1.542,1225,3.46,1226,3.46,1227,3.46,1228,3.46,1229,4.271,1230,2.205,1231,1.421,1232,5.834,1233,3.46,1234,2.42,1235,3.46,1236,2.977,1237,3.46,1238,3.46,1239,3.46,1240,4.839,1241,3.46,1242,2.205,1243,3.46,1244,3.46,1245,2.977,1246,2.205,1247,2.205,1248,2.205,1249,2.205,1250,2.205,1251,2.205,1252,2.205,1253,2.205,1254,2.205,1255,1.542,1256,3.46,1257,2.205,1258,2.205,1259,2.205,1260,2.205,1261,2.205,1262,2.205,1263,2.205]],["title/classes/OptionModel.html",[96,0.454,422,1.616]],["body/classes/OptionModel.html",[2,0.646,3,0.646,7,0.472,9,0.718,29,1.624,37,1.624,39,3.162,44,1.823,45,1.795,62,1.03,63,0.018,64,0.683,65,0.646,66,1.036,67,0.675,68,1.113,84,0.646,95,0.574,96,0.675,97,1.081,103,1.17,132,1.058,159,2.128,197,1.058,205,1.487,213,0.014,214,0.014,281,2.691,285,0.803,289,1.973,298,2.324,315,1.188,352,4.33,370,1.795,401,2.247,420,3.138,421,1.917,422,2.4,428,3.201,1264,4.136,1265,6.017,1266,6.017,1267,6.017,1268,4.209,1269,6.883,1270,6.017,1271,6.017,1272,4.807,1273,6.017,1274,6.017,1275,6.568,1276,4.807,1277,4.807,1278,4.807,1279,4.807,1280,6.017,1281,4.807,1282,4.807]],["title/components/OptionsViewComponent.html",[0,0.484,205,1.002]],["body/components/OptionsViewComponent.html",[0,0.758,1,0.765,2,0.378,3,0.378,4,0.802,5,0.923,6,0.923,7,0.277,9,0.656,13,2.918,16,1.847,17,1.016,18,1.951,21,0.923,22,2.402,23,2.29,25,1.368,27,1.368,29,1.228,31,3.731,32,2.186,33,3.731,34,2.669,37,1.701,44,1.068,45,1.244,47,0.555,48,0.874,53,2.335,61,1.593,62,0.604,63,0.018,64,0.706,65,0.854,66,1.003,67,0.76,68,1.207,69,1.923,70,2.118,71,1.591,72,1.066,73,1.709,74,2.611,75,2.46,76,2.781,77,1.349,78,1.117,84,0.895,85,0.575,88,1.247,89,1.068,90,1.815,92,1.247,95,0.336,96,0.468,97,1.381,99,1.752,103,0.811,126,2.719,132,1.118,138,0.881,139,0.656,143,1.394,156,0.772,170,0.73,171,0.772,172,1.304,173,1.368,174,1.669,175,0.923,178,0.923,179,0.765,180,0.923,181,0.495,182,0.923,183,0.765,184,0.446,185,0.923,186,0.765,187,0.923,188,0.73,189,1.368,190,0.765,191,0.923,192,0.73,193,0.521,194,0.923,195,0.765,196,0.923,197,0.495,198,0.923,199,0.765,200,0.923,201,0.765,202,0.923,203,0.765,204,0.923,205,1.358,206,0.923,207,0.765,208,0.881,209,0.923,210,0.495,211,0.73,212,0.923,213,0.01,214,0.01,239,2.669,261,5.35,262,4.871,267,1.92,285,0.47,286,2.118,289,1.368,298,1.629,301,1.414,309,2.164,315,0.696,318,4.296,322,1.304,324,1.247,329,1.97,350,3.898,359,4.22,361,4.22,362,4.22,364,2.918,373,3.512,374,5.35,375,2.33,377,2.535,379,2.164,380,3.34,381,3.205,382,2.191,384,3.589,388,1.081,394,1.97,401,1.482,407,0.548,411,1.031,420,3.003,421,1.123,422,2.705,424,1.847,425,1.847,426,2.084,428,2.719,433,2.307,435,1.506,445,1.368,500,1.582,530,2.192,542,1.664,550,3.205,687,2.164,742,2.192,744,1.97,756,4.726,898,2.335,1052,3.589,1053,3.589,1100,4.275,1101,4.275,1138,3.589,1236,2.423,1283,2.164,1284,3.589,1285,3.589,1286,5.494,1287,5.494,1288,4.172,1289,2.817,1290,2.817,1291,4.172,1292,2.817,1293,3.205,1294,2.918,1295,4.172,1296,4.172,1297,2.817,1298,2.817,1299,2.817,1300,2.817,1301,2.817,1302,2.817,1303,2.817,1304,2.817,1305,2.817,1306,2.817,1307,2.817,1308,2.817,1309,2.817,1310,2.817,1311,2.817,1312,2.817,1313,2.817,1314,2.817,1315,2.817,1316,2.817,1317,2.817,1318,2.817,1319,2.817,1320,2.817,1321,4.172,1322,3.589,1323,4.172]],["title/modules/SidebarModule.html",[215,1.463,226,2.612]],["body/modules/SidebarModule.html",[2,0.695,3,0.695,7,0.508,55,3.097,63,0.018,68,0.957,72,1.019,84,1.01,85,1.056,88,2.29,95,0.843,96,0.58,121,1.962,170,1.34,186,1.999,188,1.907,190,2.087,213,0.015,214,0.015,215,2.273,217,2.895,218,4.374,219,3.334,226,4.934,228,4.057,233,4.403,234,4.403,239,2.172,260,3.973,380,2.718,639,3.973,685,3.973,887,3.973,931,4.836,932,3.618,933,4.836,1324,4.449,1325,4.449,1326,4.449,1327,5.172,1328,5.172,1329,5.172]],["title/components/StatBadgeComponent.html",[0,0.484,207,1.1]],["body/components/StatBadgeComponent.html",[0,0.809,1,1.13,2,0.559,3,0.559,4,1.185,5,1.365,6,1.365,7,0.409,9,0.497,21,1.365,22,2.513,23,2.396,25,1.799,27,1.799,29,1.675,37,1.675,44,2.081,47,0.467,48,0.732,63,0.018,64,0.78,65,0.876,66,0.559,72,0.921,84,0.559,85,0.85,95,0.497,96,0.467,138,1.018,170,1.079,171,1.015,172,1.715,173,1.799,174,1.856,175,1.365,178,1.365,179,1.13,180,1.365,181,0.732,182,1.365,183,1.13,184,0.66,185,1.365,186,1.13,187,1.365,188,1.079,189,1.799,190,1.13,191,1.365,192,1.079,193,0.77,194,1.365,195,1.13,196,1.365,197,0.732,198,1.365,199,1.13,200,1.365,201,1.13,202,1.365,203,1.13,204,1.365,205,1.029,206,1.365,207,1.771,208,2.219,209,1.365,210,0.732,211,1.079,212,1.365,213,0.013,214,0.013,285,0.695,315,1.356,388,1.421,411,1.78,413,2.394,415,1.89,429,2.012,461,2.304,481,2.361,501,3.255,816,3.536,885,4.214,1330,5.988,1331,5.347,1332,3.581,1333,6.96,1334,5.486,1335,5.486,1336,5.486,1337,4.369,1338,7.097,1339,7.097,1340,6.136,1341,5.486,1342,4.214,1343,4.163,1344,4.163,1345,4.163,1346,4.163,1347,4.163,1348,4.163,1349,4.163]],["title/injectables/ToastService.html",[35,2.612,277,1.702]],["body/injectables/ToastService.html",[2,0.598,3,0.598,7,0.437,9,0.756,17,1.311,20,4.928,24,2.868,29,1.711,35,3.692,37,1.566,52,3.01,62,1.228,63,0.019,64,0.814,66,0.769,68,1.06,73,1.97,77,1.208,79,5.669,80,6.097,84,0.769,85,0.908,86,2.664,95,0.531,96,0.499,97,1.288,101,5.451,122,3.418,123,3.418,132,1.177,193,1.365,213,0.014,214,0.014,239,1.868,277,2.661,285,0.743,289,2.194,373,2.664,375,2.173,380,2.338,402,1.1,411,1.805,415,1.208,430,2.559,458,2.822,677,4.146,735,3.112,795,5.444,845,3.112,877,3.828,1169,4.928,1216,3.828,1245,4.928,1350,3.828,1351,5.729,1352,5.729,1353,4.449,1354,5.729,1355,4.449,1356,5.729,1357,4.449,1358,5.729,1359,4.449,1360,4.449,1361,6.336,1362,5.729,1363,4.449,1364,4.449,1365,4.449,1366,4.449,1367,5.729,1368,5.729,1369,5.729,1370,5.729,1371,4.449,1372,4.449]],["title/interfaces/Tool.html",[47,0.345,407,0.788]],["body/interfaces/Tool.html",[2,0.362,3,0.362,7,0.265,9,0.813,12,1.695,17,1.159,45,1.204,47,0.636,48,0.474,63,0.019,64,0.383,65,0.994,66,0.998,67,0.824,72,1.058,77,1.096,78,1.449,84,0.542,95,0.769,96,0.302,103,0.785,132,0.474,136,1.888,138,1.067,139,0.786,147,0.578,156,0.895,165,1.324,171,1.159,181,0.851,184,0.64,193,0.747,197,1.012,210,0.71,213,0.011,214,0.01,251,1.075,267,2.237,285,0.45,300,2.033,301,1.638,305,1.204,315,0.998,322,1.262,356,1.389,367,1.788,370,1.802,371,1.26,382,1.61,388,0.698,389,2.706,390,0.927,401,2.16,402,1.423,407,1.381,408,1.334,409,1.416,410,0.973,411,1.725,412,2.079,413,2.491,414,2.418,415,2.109,416,1.416,417,2.991,418,2.692,419,2.826,420,2.38,421,1.075,422,2.296,423,3.175,424,1.193,425,1.788,426,2.499,427,1.8,428,2.676,429,1.324,430,2.326,431,1.788,432,1.788,433,2.257,434,1.788,435,1.941,436,2.144,437,1.762,438,1.389,439,2.499,440,1.941,441,1.931,442,2.57,443,1.416,444,1.193,445,1.587,446,1.132,447,1.075,448,2.308,449,2.38,450,2.121,451,2.121,452,2.181,453,1.695,454,2.033,455,2.396,456,1.416,457,2.396,458,1.531,459,1.788,460,2.38,461,1.695,462,1.46,463,1.26,464,0.973,465,1.26,466,1.022,467,1.61,468,1.075,469,1.022,470,1.26,471,1.416,472,1.416,473,1.075,474,1.334,475,1.416,476,1.416,477,2.054,478,1.193,479,1.334,480,1.416,481,1.587,482,1.416,483,1.132,484,1.416,485,1.132,486,1.193,487,1.416,488,1.416,489,2.121,490,1.416,491,1.334,492,1.334,493,1.888,494,1.193,495,1.334,496,1.075,497,1.999,498,1.999,499,1.334,500,1.022]],["title/modules/ToolPageModule.html",[215,1.463,227,2.612]],["body/modules/ToolPageModule.html",[2,0.63,3,0.63,7,0.461,47,0.399,55,2.809,63,0.018,68,0.868,84,1.028,85,0.958,88,2.077,95,0.775,96,0.526,121,1.779,138,1.057,170,1.215,183,1.951,184,0.743,195,1.951,197,1.264,199,1.951,201,1.951,203,1.951,207,1.951,208,1.467,211,1.862,213,0.014,214,0.014,215,2.139,217,2.626,218,4.186,219,3.024,227,5.004,228,3.819,233,4.144,234,4.144,239,1.97,254,3.024,257,3.281,258,3.604,380,2.465,421,1.871,501,2.194,503,3.604,930,4.036,931,4.552,932,3.281,933,4.552,936,5.587,937,5.587,939,3.604,981,3.604,1056,3.604,1065,3.604,1075,3.604,1331,3.604,1373,4.036,1374,4.036,1375,4.691,1376,4.691,1377,4.691,1378,4.691,1379,4.691,1380,4.691,1381,4.691]],["title/components/ToolSelectionComponent.html",[0,0.484,210,0.713]],["body/components/ToolSelectionComponent.html",[0,0.814,1,1.155,2,0.571,3,0.571,4,1.211,5,1.395,6,1.395,7,0.418,9,0.664,21,1.395,22,2.518,23,2.401,25,1.824,27,1.824,29,1.533,32,2.372,34,2.839,37,1.376,47,0.648,48,1.09,49,2.604,62,0.912,63,0.018,64,0.881,65,0.747,66,0.747,67,0.695,68,1.263,69,2.238,70,2.464,71,1.814,72,1.025,78,1.394,83,2.604,84,0.833,85,0.869,89,1.614,92,1.884,94,2.239,95,0.508,96,0.477,97,1.251,99,1.786,103,1.082,138,1.025,170,1.102,171,1.029,172,1.74,173,1.824,174,1.872,175,1.395,178,1.395,179,1.155,180,1.395,181,0.748,182,1.395,183,1.155,184,0.674,185,1.395,186,1.155,187,1.395,188,1.102,189,1.824,190,1.155,191,1.395,192,1.102,193,0.787,194,1.395,195,1.155,196,1.395,197,0.748,198,1.395,199,1.155,200,1.395,201,1.155,202,1.395,203,1.155,204,1.395,205,1.052,206,1.395,207,1.155,208,1.33,209,1.395,210,1.157,211,1.102,212,1.395,213,0.013,214,0.013,254,3.997,259,4.337,285,0.711,286,2.009,324,1.884,350,3.471,394,2.976,405,4.787,406,4.787,686,3.268,689,4.787,690,5.872,718,3.66,1168,3.892,1382,4.255]],["title/injectables/ToolService.html",[34,1.537,277,1.702]],["body/injectables/ToolService.html",[2,0.463,3,0.463,7,0.339,9,0.576,17,1.373,18,2.258,24,2.223,29,1.377,30,2.65,31,3.781,34,1.831,37,1.803,44,2.409,45,1.44,47,0.654,48,0.849,53,3.377,59,2.39,60,2.39,62,1.194,63,0.019,64,0.792,65,0.926,66,0.907,67,0.676,69,1.978,70,1.743,71,1.786,77,1.311,78,1.55,84,0.748,85,0.704,88,1.527,95,0.412,96,0.387,97,0.776,98,1.931,103,0.939,109,2.671,131,4.153,132,1.061,139,0.576,147,1.41,156,1.275,159,1.527,171,1.116,184,0.765,213,0.011,214,0.011,267,2.321,277,2.339,285,0.576,301,1.873,305,1.963,315,1.57,375,1.831,388,1.251,389,2.027,398,2.968,404,4.153,407,0.671,411,1.193,412,2.178,413,2.075,414,2.533,415,1.512,424,2.137,435,2.376,458,1.831,477,1.583,549,3.377,553,3.709,736,3.112,838,2.968,845,2.413,1168,3.377,1186,3.889,1342,3.709,1383,2.968,1384,6.033,1385,6.033,1386,6.033,1387,6.033,1388,6.033,1389,3.45,1390,3.45,1391,3.45,1392,3.377,1393,3.45,1394,4.153,1395,4.828,1396,4.153,1397,3.45,1398,4.828,1399,4.828,1400,3.45,1401,4.828,1402,3.45,1403,4.828,1404,3.45,1405,3.45,1406,4.153,1407,4.828,1408,3.45,1409,3.45,1410,3.45,1411,4.828,1412,3.45,1413,3.45,1414,3.45,1415,3.45,1416,6.351,1417,3.45,1418,5.57,1419,6.351,1420,3.45,1421,5.57,1422,4.828,1423,3.45,1424,3.45,1425,4.828,1426,3.45,1427,4.828,1428,3.45,1429,4.828,1430,4.828]],["title/components/ToolViewComponent.html",[0,0.484,211,1.05]],["body/components/ToolViewComponent.html",[0,0.796,1,1.078,2,0.533,3,0.533,4,1.13,5,1.302,6,1.302,7,0.39,9,0.634,21,1.302,22,2.501,23,2.385,25,1.743,27,1.743,29,1.482,32,2.429,34,2.827,37,1.582,47,0.64,48,1.174,62,0.851,63,0.018,64,0.852,65,0.805,66,0.714,68,1.27,69,2.252,70,2.48,71,1.817,72,1.084,78,1.348,84,0.805,85,0.811,89,1.506,92,1.758,95,0.474,96,0.445,97,1.195,103,1.034,112,2.56,132,1.208,138,1.053,143,2.632,156,1.297,170,1.029,171,0.984,172,1.662,173,1.743,174,1.822,175,1.302,178,1.302,179,1.078,180,1.302,181,0.698,182,1.302,183,1.078,184,0.629,185,1.302,186,1.078,187,1.302,188,1.029,189,1.743,190,1.078,191,1.302,192,1.029,193,0.735,194,1.302,195,1.078,196,1.302,197,0.698,198,1.302,199,1.078,200,1.302,201,1.078,202,1.302,203,1.078,204,1.302,205,0.982,206,1.302,207,1.078,208,1.242,209,1.302,210,0.698,211,1.658,212,1.302,213,0.013,214,0.013,254,4.301,257,4.668,285,0.663,286,2.409,289,1.743,324,1.758,388,1.378,438,1.829,445,1.743,462,1.078,501,3.121,645,5.507,647,2.223,656,4.085,681,3.719,796,4.574,864,3.417,1103,3.417,1283,3.051,1284,4.574,1285,4.574,1431,3.972,1432,3.972,1433,3.972,1434,3.972,1435,3.972,1436,3.972,1437,5.317,1438,5.317]],["title/coverage.html",[1439,4.636]],["body/coverage.html",[0,0.916,1,1.204,7,0.436,8,3.815,32,1.454,33,2.33,34,1.682,35,2.858,36,2.33,47,0.377,63,0.018,65,0.596,72,0.666,96,0.497,138,0.666,179,1.204,181,0.78,183,1.204,186,1.204,188,1.149,190,1.204,192,1.149,195,1.204,197,0.78,199,1.204,201,1.204,203,1.204,205,1.096,207,1.204,210,0.78,211,1.149,213,0.014,214,0.014,248,2.858,254,3.684,257,3.101,259,3.101,261,3.406,262,3.101,263,3.998,267,1.386,277,2.904,278,3.815,298,1.454,350,3.871,351,3.815,387,3.815,407,1.419,408,3.613,418,2.073,422,1.769,426,1.682,439,1.682,442,1.769,462,1.204,501,3.413,502,3.815,503,3.406,504,3.815,638,4.424,639,3.406,640,3.815,685,3.406,686,4.391,706,3.406,791,3.815,887,3.406,888,3.815,913,3.815,938,4.141,939,3.406,940,3.815,981,3.406,982,3.815,1056,3.406,1057,3.815,1065,3.406,1066,3.815,1075,3.406,1076,3.815,1139,3.815,1264,3.815,1283,4.391,1330,3.815,1331,3.406,1332,3.815,1350,3.815,1383,3.815,1439,3.815,1440,2.195,1441,4.434,1442,7.829,1443,4.434,1444,6.326,1445,6.916,1446,5.716,1447,3.815,1448,3.101,1449,4.434,1450,6.326,1451,4.434,1452,4.434,1453,6.682,1454,6.326,1455,6.326,1456,4.434,1457,4.434,1458,4.434,1459,5.716,1460,4.434,1461,4.434,1462,4.434]],["title/dependencies.html",[217,2.706,1463,2.974]],["body/dependencies.html",[63,0.018,75,3.116,81,1.877,85,1.056,88,2.29,168,2.895,213,0.015,214,0.015,217,2.895,231,5.415,232,4.836,236,4.449,239,2.643,240,4.449,241,4.836,243,3.973,380,3.308,402,1.278,421,2.063,452,1.617,932,3.618,1098,4.449,1099,5.415,1159,4.449,1394,4.449,1464,5.172,1465,7.574,1466,5.172,1467,5.172,1468,5.172,1469,5.172,1470,5.172,1471,5.172,1472,5.172,1473,5.172,1474,5.172,1475,5.172,1476,2.718,1477,5.172,1478,5.172,1479,5.172,1480,5.172,1481,3.618,1482,5.172,1483,5.172,1484,5.172,1485,5.172,1486,5.172,1487,5.172,1488,6.295,1489,5.172,1490,6.295,1491,5.172,1492,5.172,1493,5.172,1494,5.172,1495,5.172,1496,5.172,1497,5.172,1498,5.172,1499,5.172,1500,5.172,1501,5.172,1502,5.172,1503,5.172,1504,5.172,1505,5.172,1506,5.172,1507,5.172,1508,5.172]],["title/index.html",[285,0.577,751,2.656,1211,2.07]],["body/index.html",[7,0.501,45,1.52,47,0.531,56,2.678,61,1.831,63,0.016,67,0.788,68,0.943,70,1.84,77,1.694,81,1.861,126,2.762,147,1.337,162,2.523,213,0.015,214,0.015,248,3.286,284,3.053,305,1.52,352,4.317,407,0.991,410,1.84,427,1.594,452,1.951,467,2.033,505,3.286,542,2.689,566,2.853,778,3.478,795,3.916,823,3.916,965,4.385,1018,5.368,1125,3.089,1172,2.853,1211,3.053,1217,3.916,1223,3.053,1440,3.089,1448,3.565,1509,5.801,1510,4.385,1511,5.098,1512,6.24,1513,5.098,1514,4.385,1515,5.801,1516,5.098,1517,5.098,1518,5.098,1519,5.098,1520,5.098,1521,5.098,1522,5.098,1523,4.022,1524,6.24,1525,7.027,1526,5.098,1527,5.098,1528,5.098,1529,5.098,1530,5.098,1531,6.743,1532,5.098,1533,5.098,1534,5.098,1535,3.053,1536,4.385,1537,5.098,1538,5.098,1539,3.565,1540,4.364,1541,5.098,1542,5.098,1543,1.753,1544,5.098,1545,5.098,1546,5.098,1547,5.098,1548,5.098,1549,5.098,1550,5.098,1551,5.098,1552,5.098,1553,5.368,1554,5.098,1555,3.565,1556,3.916,1557,7.027,1558,3.916]],["title/modules.html",[215,1.946]],["body/modules.html",[63,0.016,213,0.016,214,0.016,215,2.141,216,4.148,225,3.822,226,3.822,227,3.822,232,5.672,1559,7.384,1560,7.384,1561,7.384]],["title/overview.html",[1562,2.832]],["body/overview.html",[0,0.565,1,1.985,36,3.426,55,2.833,63,0.018,68,0.875,95,0.565,96,0.53,121,1.795,170,1.226,179,1.985,181,1.147,183,1.77,186,1.77,188,1.689,190,1.985,192,1.894,195,1.77,197,1.147,199,1.77,201,1.77,203,1.77,205,1.612,207,1.77,210,1.147,211,1.689,213,0.014,214,0.014,215,2.151,216,5.337,217,2.648,218,3.049,219,3.049,220,4.07,221,4.07,222,4.07,223,4.07,224,4.07,225,4.952,226,4.844,227,4.998,228,3.84,277,1.987,407,0.92,606,3.309,669,3.634,886,4.07,927,4.07,928,4.07,929,4.07,1324,4.07,1325,4.07,1326,4.07,1373,4.07,1374,4.07,1562,2.486,1563,4.731,1564,4.731]],["title/miscellaneous/variables.html",[1448,3.382,1565,2.974]],["body/miscellaneous/variables.html",[44,2.189,61,1.93,63,0.018,65,0.775,67,0.647,81,2.004,82,3.23,213,0.016,214,0.016,248,4.582,285,0.964,315,1.427,402,1.661,1223,3.456,1447,4.965,1448,4.037,1565,4.965,1566,5.772,1567,5.772,1568,5.772,1569,5.772,1570,5.772,1571,5.772,1572,5.772,1573,5.772,1574,5.772,1575,5.772,1576,5.772,1577,5.772,1578,5.772]],["title/additional-documentation/architecture.html",[139,0.412,1543,1.189,1558,2.656]],["body/additional-documentation/architecture.html",[63,0.016,77,1.623,213,0.016,214,0.016,1396,5.141,1440,3.394,1558,5.267,1562,3.14,1579,4.795,1580,5.976,1581,5.976,1582,5.976,1583,4.591,1584,3.852,1585,5.141,1586,4.18]],["title/additional-documentation/architecture/server-endpoints.html",[77,0.818,139,0.36,1543,1.037,1586,2.108]],["body/additional-documentation/architecture/server-endpoints.html",[63,0.016,77,1.877,213,0.016,214,0.016,370,1.807,410,2.188,1579,4.238,1586,4.834]],["title/additional-documentation/architecture/discover-&-fix-workflow.html",[63,0.006,139,0.286,437,0.786,438,0.825,1543,0.825,1587,2.064]],["body/additional-documentation/architecture/discover-&-fix-workflow.html",[47,0.585,63,0.017,67,0.674,213,0.016,214,0.016,437,1.971,438,2.068,998,3.851,1535,3.601,1587,5.919,1588,6.013]],["title/additional-documentation/architecture/data-flow-diagram.html",[139,0.319,957,1.868,1543,0.919,1583,2.052,1589,2.298]],["body/additional-documentation/architecture/data-flow-diagram.html",[63,0.016,213,0.016,214,0.016]],["title/additional-documentation/architecture/high-level-overview.html",[139,0.319,1543,0.919,1562,1.404,1584,1.722,1585,2.298]],["body/additional-documentation/architecture/high-level-overview.html",[63,0.016,213,0.016,214,0.016]],["title/additional-documentation/setup.html",[139,0.412,1125,1.711,1543,1.189]],["body/additional-documentation/setup.html",[17,1.079,39,3.064,47,0.575,52,3.064,61,1.584,63,0.016,81,2.129,147,1.25,165,1.912,169,3.493,213,0.016,214,0.016,298,1.912,305,2.129,370,1.739,478,2.582,505,3.759,542,2.326,564,4.48,998,3.784,1125,2.887,1440,3.347,1579,4.079,1590,5.017,1591,5.832,1592,5.017,1593,4.079,1594,4.079]],["title/additional-documentation/setup/setting-up-firebase.html",[81,0.797,139,0.319,147,0.573,542,1.065,1543,0.919]],["body/additional-documentation/setup/setting-up-firebase.html",[4,1.159,7,0.456,9,0.842,12,0.86,16,1.446,17,1,18,0.958,39,1.716,42,2.98,45,1.385,46,3.781,47,0.635,48,0.36,51,1.433,52,1.076,59,1.014,60,1.616,61,0.556,62,0.7,63,0.018,64,0.66,65,0.929,66,1.014,67,0.569,68,0.938,71,1.526,72,0.49,73,2.413,74,3.094,75,2.299,78,1.044,97,1.454,106,1.227,109,2.607,121,0.777,126,1.802,132,0.892,138,1.076,139,0.724,147,1.087,151,3.673,154,1.076,156,0.938,159,0.907,171,1.214,174,1.322,184,0.517,213,0.008,214,0.008,215,0.74,239,0.86,251,0.817,267,1.273,298,2.152,300,0.86,301,1.159,303,1.147,305,1.214,315,0.807,322,1.452,338,2.105,356,2.025,369,3.9,370,1.855,377,0.817,388,0.531,390,1.123,402,1.821,410,1.179,411,1.644,412,1.677,413,2.397,414,1.371,415,1.927,426,1.544,427,2.052,429,1.523,430,2.401,431,2.246,432,2.246,433,1.95,434,1.446,436,2.481,437,2.37,438,2.36,439,1.544,440,1.47,441,1.624,442,1.624,444,0.907,445,1.859,446,1.371,447,0.817,448,1.597,449,1.446,452,2.104,453,1.95,454,1.371,458,0.777,459,1.446,460,0.907,462,1.846,464,1.832,466,1.239,467,1.302,468,1.852,469,1.544,477,2.3,481,0.672,483,0.86,485,0.86,486,0.907,496,1.624,500,1.239,520,2.284,523,2.438,524,1.433,530,1.716,531,2.839,532,1.433,542,0.817,545,1.32,554,1.446,561,1.433,575,2.284,584,1.32,601,1.147,607,2.284,620,3.967,650,1.32,677,1.955,680,2.98,709,1.955,710,3.484,716,4.706,736,2.105,742,1.076,757,3.548,758,2.438,816,3.27,817,3.396,875,1.433,882,2.284,898,2.599,918,2.848,924,1.147,964,3.249,966,2.284,998,2.839,1020,1.433,1122,2.105,1125,1.014,1127,2.284,1177,2.284,1178,3.249,1186,2.105,1205,2.284,1206,2.284,1207,2.284,1211,1.227,1213,1.433,1214,1.433,1222,2.284,1223,1.227,1224,2.284,1231,1.32,1234,1.433,1255,3.249,1268,1.433,1294,1.433,1337,1.32,1392,1.433,1440,1.014,1476,2.44,1481,1.433,1523,3.27,1535,2.438,1539,1.433,1540,1.433,1555,3.249,1562,1.076,1584,1.32,1593,1.433,1594,1.433,1595,3.249,1596,2.508,1597,1.574,1598,1.574,1599,1.574,1600,2.508,1601,1.574,1602,1.574,1603,1.574,1604,1.574,1605,2.508,1606,1.574,1607,1.574,1608,1.574,1609,5.611,1610,1.574,1611,1.574,1612,1.574,1613,2.508,1614,1.574,1615,3.128,1616,1.574,1617,2.848,1618,1.574,1619,1.574,1620,1.574,1621,1.574,1622,1.574,1623,1.574,1624,1.574,1625,2.508,1626,1.574,1627,1.574,1628,3.128,1629,1.574,1630,1.574,1631,2.508,1632,3.897,1633,3.249,1634,2.508,1635,1.574,1636,1.574,1637,3.128,1638,2.508,1639,3.568,1640,2.508,1641,1.433,1642,1.574,1643,2.508,1644,1.574,1645,2.508,1646,2.508,1647,1.574,1648,2.508,1649,2.508,1650,5.452,1651,1.574,1652,2.508,1653,1.574,1654,1.574,1655,1.574,1656,1.574,1657,1.574,1658,1.574,1659,1.574,1660,3.897,1661,1.574,1662,1.574,1663,2.508,1664,1.574,1665,1.574,1666,1.574,1667,2.508,1668,1.574,1669,1.574,1670,1.433,1671,1.574,1672,1.574,1673,1.574,1674,1.32,1675,1.574,1676,1.574,1677,1.574,1678,1.574,1679,1.574,1680,1.574,1681,1.574,1682,1.574,1683,1.574,1684,1.574,1685,1.574,1686,1.574]],["title/additional-documentation/setup/development-environment.html",[139,0.36,248,1.942,778,1.492,1543,1.037]],["body/additional-documentation/setup/development-environment.html",[4,1.159,7,0.456,9,0.842,12,0.86,16,1.446,17,1,18,0.958,39,1.716,42,2.98,45,1.385,46,3.781,47,0.635,48,0.36,51,1.433,52,1.076,59,1.014,60,1.616,61,0.556,62,0.7,63,0.018,64,0.66,65,0.929,66,1.014,67,0.569,68,0.938,71,1.526,72,0.49,73,2.413,74,3.094,75,2.299,78,1.044,97,1.454,106,1.227,109,2.607,121,0.777,126,1.802,132,0.892,138,1.076,139,0.724,147,1.087,151,3.673,154,1.076,156,0.938,159,0.907,171,1.214,174,1.322,184,0.517,213,0.008,214,0.008,215,0.74,239,0.86,251,0.817,267,1.273,298,2.152,300,0.86,301,1.159,303,1.147,305,1.214,315,0.807,322,1.452,338,2.105,356,2.025,369,3.9,370,1.855,377,0.817,388,0.531,390,1.123,402,1.821,410,1.179,411,1.644,412,1.677,413,2.397,414,1.371,415,1.927,426,1.544,427,2.052,429,1.523,430,2.401,431,2.246,432,2.246,433,1.95,434,1.446,436,2.481,437,2.37,438,2.36,439,1.544,440,1.47,441,1.624,442,1.624,444,0.907,445,1.859,446,1.371,447,0.817,448,1.597,449,1.446,452,2.104,453,1.95,454,1.371,458,0.777,459,1.446,460,0.907,462,1.846,464,1.832,466,1.239,467,1.302,468,1.852,469,1.544,477,2.3,481,0.672,483,0.86,485,0.86,486,0.907,496,1.624,500,1.239,520,2.284,523,2.438,524,1.433,530,1.716,531,2.839,532,1.433,542,0.817,545,1.32,554,1.446,561,1.433,575,2.284,584,1.32,601,1.147,607,2.284,620,3.967,650,1.32,677,1.955,680,2.98,709,1.955,710,3.484,716,4.706,736,2.105,742,1.076,757,3.548,758,2.438,816,3.27,817,3.396,875,1.433,882,2.284,898,2.599,918,2.848,924,1.147,964,3.249,966,2.284,998,2.839,1020,1.433,1122,2.105,1125,1.014,1127,2.284,1177,2.284,1178,3.249,1186,2.105,1205,2.284,1206,2.284,1207,2.284,1211,1.227,1213,1.433,1214,1.433,1222,2.284,1223,1.227,1224,2.284,1231,1.32,1234,1.433,1255,3.249,1268,1.433,1294,1.433,1337,1.32,1392,1.433,1440,1.014,1476,2.44,1481,1.433,1523,3.27,1535,2.438,1539,1.433,1540,1.433,1555,3.249,1562,1.076,1584,1.32,1593,1.433,1594,1.433,1595,3.249,1596,2.508,1597,1.574,1598,1.574,1599,1.574,1600,2.508,1601,1.574,1602,1.574,1603,1.574,1604,1.574,1605,2.508,1606,1.574,1607,1.574,1608,1.574,1609,5.611,1610,1.574,1611,1.574,1612,1.574,1613,2.508,1614,1.574,1615,3.128,1616,1.574,1617,2.848,1618,1.574,1619,1.574,1620,1.574,1621,1.574,1622,1.574,1623,1.574,1624,1.574,1625,2.508,1626,1.574,1627,1.574,1628,3.128,1629,1.574,1630,1.574,1631,2.508,1632,3.897,1633,3.249,1634,2.508,1635,1.574,1636,1.574,1637,3.128,1638,2.508,1639,3.568,1640,2.508,1641,1.433,1642,1.574,1643,2.508,1644,1.574,1645,2.508,1646,2.508,1647,1.574,1648,2.508,1649,2.508,1650,5.452,1651,1.574,1652,2.508,1653,1.574,1654,1.574,1655,1.574,1656,1.574,1657,1.574,1658,1.574,1659,1.574,1660,3.897,1661,1.574,1662,1.574,1663,2.508,1664,1.574,1665,1.574,1666,1.574,1667,2.508,1668,1.574,1669,1.574,1670,1.433,1671,1.574,1672,1.574,1673,1.574,1674,1.32,1675,1.574,1676,1.574,1677,1.574,1678,1.574,1679,1.574,1680,1.574,1681,1.574,1682,1.574,1683,1.574,1684,1.574,1685,1.574,1686,1.574]],["title/additional-documentation/setup/node-tools.html",[47,0.256,139,0.36,998,1.687,1543,1.037]],["body/additional-documentation/setup/node-tools.html",[4,1.159,7,0.456,9,0.842,12,0.86,16,1.446,17,1,18,0.958,39,1.716,42,2.98,45,1.385,46,3.781,47,0.635,48,0.36,51,1.433,52,1.076,59,1.014,60,1.616,61,0.556,62,0.7,63,0.018,64,0.66,65,0.929,66,1.014,67,0.569,68,0.938,71,1.526,72,0.49,73,2.413,74,3.094,75,2.299,78,1.044,97,1.454,106,1.227,109,2.607,121,0.777,126,1.802,132,0.892,138,1.076,139,0.724,147,1.087,151,3.673,154,1.076,156,0.938,159,0.907,171,1.214,174,1.322,184,0.517,213,0.008,214,0.008,215,0.74,239,0.86,251,0.817,267,1.273,298,2.152,300,0.86,301,1.159,303,1.147,305,1.214,315,0.807,322,1.452,338,2.105,356,2.025,369,3.9,370,1.855,377,0.817,388,0.531,390,1.123,402,1.821,410,1.179,411,1.644,412,1.677,413,2.397,414,1.371,415,1.927,426,1.544,427,2.052,429,1.523,430,2.401,431,2.246,432,2.246,433,1.95,434,1.446,436,2.481,437,2.37,438,2.36,439,1.544,440,1.47,441,1.624,442,1.624,444,0.907,445,1.859,446,1.371,447,0.817,448,1.597,449,1.446,452,2.104,453,1.95,454,1.371,458,0.777,459,1.446,460,0.907,462,1.846,464,1.832,466,1.239,467,1.302,468,1.852,469,1.544,477,2.3,481,0.672,483,0.86,485,0.86,486,0.907,496,1.624,500,1.239,520,2.284,523,2.438,524,1.433,530,1.716,531,2.839,532,1.433,542,0.817,545,1.32,554,1.446,561,1.433,575,2.284,584,1.32,601,1.147,607,2.284,620,3.967,650,1.32,677,1.955,680,2.98,709,1.955,710,3.484,716,4.706,736,2.105,742,1.076,757,3.548,758,2.438,816,3.27,817,3.396,875,1.433,882,2.284,898,2.599,918,2.848,924,1.147,964,3.249,966,2.284,998,2.839,1020,1.433,1122,2.105,1125,1.014,1127,2.284,1177,2.284,1178,3.249,1186,2.105,1205,2.284,1206,2.284,1207,2.284,1211,1.227,1213,1.433,1214,1.433,1222,2.284,1223,1.227,1224,2.284,1231,1.32,1234,1.433,1255,3.249,1268,1.433,1294,1.433,1337,1.32,1392,1.433,1440,1.014,1476,2.44,1481,1.433,1523,3.27,1535,2.438,1539,1.433,1540,1.433,1555,3.249,1562,1.076,1584,1.32,1593,1.433,1594,1.433,1595,3.249,1596,2.508,1597,1.574,1598,1.574,1599,1.574,1600,2.508,1601,1.574,1602,1.574,1603,1.574,1604,1.574,1605,2.508,1606,1.574,1607,1.574,1608,1.574,1609,5.611,1610,1.574,1611,1.574,1612,1.574,1613,2.508,1614,1.574,1615,3.128,1616,1.574,1617,2.848,1618,1.574,1619,1.574,1620,1.574,1621,1.574,1622,1.574,1623,1.574,1624,1.574,1625,2.508,1626,1.574,1627,1.574,1628,3.128,1629,1.574,1630,1.574,1631,2.508,1632,3.897,1633,3.249,1634,2.508,1635,1.574,1636,1.574,1637,3.128,1638,2.508,1639,3.568,1640,2.508,1641,1.433,1642,1.574,1643,2.508,1644,1.574,1645,2.508,1646,2.508,1647,1.574,1648,2.508,1649,2.508,1650,5.452,1651,1.574,1652,2.508,1653,1.574,1654,1.574,1655,1.574,1656,1.574,1657,1.574,1658,1.574,1659,1.574,1660,3.897,1661,1.574,1662,1.574,1663,2.508,1664,1.574,1665,1.574,1666,1.574,1667,2.508,1668,1.574,1669,1.574,1670,1.433,1671,1.574,1672,1.574,1673,1.574,1674,1.32,1675,1.574,1676,1.574,1677,1.574,1678,1.574,1679,1.574,1680,1.574,1681,1.574,1682,1.574,1683,1.574,1684,1.574,1685,1.574,1686,1.574]],["title/additional-documentation/setup/enabling-accounts-on-firebase.html",[81,0.797,139,0.319,165,0.876,169,1.6,1543,0.919]],["body/additional-documentation/setup/enabling-accounts-on-firebase.html",[17,1.215,18,2.595,61,1.783,63,0.015,71,1.938,73,1.909,78,1.248,81,2.254,82,3.914,139,0.662,147,1.189,162,2.747,165,2.453,168,3.675,169,4.418,213,0.016,214,0.016,281,3.675,284,3.323,298,1.819,440,2.525,496,2.213,542,2.213,555,4.263,566,3.106,601,3.106,622,4.774,778,2.747,820,4.263,1337,3.577,1342,4.263,1556,4.263,1670,3.881,1687,4.774,1688,6.017,1689,6.567,1690,5.549,1691,4.774]],["title/additional-documentation/firebase.html",[81,1.031,139,0.412,1543,1.189]],["body/additional-documentation/firebase.html",[63,0.016,73,2.015,81,2.232,82,3.279,147,1.453,213,0.016,214,0.016,356,2.015,505,4.369,542,2.704,554,2.594,566,3.279,1172,3.279,1406,5.04,1440,3.355,1476,3.078,1523,3.776,1579,4.098,1692,5.859,1693,5.859,1694,5.859,1695,5.859,1696,4.098,1697,4.098]],["title/additional-documentation/firebase/firebase-authentication.html",[81,0.899,82,1.687,139,0.36,1543,1.037]],["body/additional-documentation/firebase/firebase-authentication.html",[16,2.732,17,1.292,39,2.63,47,0.426,53,2.801,54,2.801,56,2.63,61,1.983,63,0.014,67,0.804,78,1.125,81,2.082,82,4.087,94,1.807,137,5.138,139,0.798,140,3.845,162,3.311,163,4.5,164,5.302,165,2.509,166,4.306,168,2.801,169,2.997,213,0.015,214,0.015,281,3.453,282,4.306,283,5.754,284,4.181,298,2.023,303,3.453,305,2.082,377,1.996,427,1.565,505,3.226,542,2.668,560,4.306,584,3.226,585,3.845,601,2.801,703,3.501,710,3.226,742,2.63,778,2.478,1017,4.306,1122,3.226,1231,3.226,1293,3.845,1322,5.308,1514,4.306,1562,2.63,1583,3.845,1589,4.306,1595,4.316,1674,3.226,1687,5.308,1688,4.306,1698,5.006,1699,5.006,1700,5.006,1701,5.006,1702,5.006,1703,5.006,1704,5.006,1705,5.006,1706,5.006,1707,5.006,1708,6.17,1709,4.306,1710,5.006,1711,5.006,1712,6.17,1713,4.306,1714,5.006,1715,5.006,1716,5.006]],["title/additional-documentation/firebase/database-structure.html",[139,0.36,1172,1.687,1543,1.037,1696,2.108]],["body/additional-documentation/firebase/database-structure.html",[9,0.6,17,1.293,42,2.64,47,0.526,61,1.985,63,0.014,67,0.751,69,2.197,77,1.679,81,1.845,86,3.009,94,1.814,121,2.346,126,2.738,156,1.352,162,3.666,163,4.319,165,1.647,213,0.015,214,0.015,309,3.86,382,2.672,389,2.11,402,1.242,407,0.977,410,1.814,413,1.728,436,2.004,462,1.364,469,2.346,473,2.954,500,1.906,549,3.515,550,3.86,554,2.225,558,4.323,564,3.86,566,3.75,585,3.86,706,4.751,732,4.323,744,3.515,758,3.704,778,2.487,917,5.615,1033,3.86,1125,2.487,1168,4.326,1172,4.145,1293,3.86,1440,3.061,1476,2.64,1510,4.323,1536,4.323,1586,3.515,1592,5.764,1633,3.515,1641,3.515,1674,3.239,1691,4.323,1696,4.686,1697,4.686,1709,4.323,1717,5.025,1718,5.025,1719,5.025,1720,6.185,1721,6.185,1722,5.025,1723,5.025,1724,5.025,1725,5.025,1726,5.025,1727,4.323,1728,5.025,1729,5.025,1730,4.323,1731,5.025]],["title/additional-documentation/firebase/firestore-wrapper.html",[139,0.36,1476,1.584,1543,1.037,1697,2.108]],["body/additional-documentation/firebase/firestore-wrapper.html",[9,0.712,17,1.104,23,1.483,45,1.414,47,0.403,48,0.834,50,4.08,61,1.62,62,1.279,63,0.016,67,0.837,68,0.877,69,2.14,73,2.544,75,2.953,76,2.654,78,1.341,81,1.414,94,2.154,95,0.566,99,1.992,121,1.799,126,2.1,132,1.148,149,4.08,154,3.43,159,2.641,162,3.721,168,2.654,184,0.752,213,0.014,214,0.015,284,2.84,286,1.712,289,1.956,307,3.057,320,3.057,375,2.598,382,2.38,402,1.693,410,1.712,436,1.892,468,2.38,473,1.892,478,2.1,554,2.89,567,4.08,667,4.08,703,3.317,742,2.492,758,2.84,778,2.348,898,2.654,917,5.015,924,2.654,957,5.174,1125,2.348,1172,4.033,1463,4.08,1476,3.709,1509,5.133,1535,2.84,1553,5.133,1556,3.643,1590,4.08,1617,3.317,1696,4.173,1697,5.174,1713,4.08,1727,4.08,1730,5.133,1732,4.743,1733,4.743,1734,4.743,1735,5.966,1736,4.743,1737,4.743,1738,4.743,1739,4.743,1740,4.743,1741,6.528,1742,4.743,1743,4.743,1744,4.743,1745,4.743,1746,4.743,1747,4.743,1748,4.743,1749,5.966,1750,4.743,1751,4.743,1752,4.743,1753,4.743,1754,6.528,1755,5.966,1756,4.743,1757,4.743,1758,4.743,1759,4.743,1760,4.743]],["title/additional-documentation/firebase/firebase-functions.html",[73,1.037,81,0.899,139,0.36,1543,1.037]],["body/additional-documentation/firebase/firebase-functions.html",[9,0.669,16,2.481,17,1.222,53,3.137,54,3.137,61,1.522,63,0.015,67,0.628,68,1.037,73,2.579,76,3.137,81,2.206,86,3.956,126,2.481,156,1.222,163,4.257,164,3.92,165,2.378,168,3.137,213,0.016,214,0.016,281,3.137,303,3.137,427,1.752,435,2.024,541,4.306,542,2.236,543,4.822,566,3.697,601,3.697,709,3.356,898,3.137,1033,4.306,1172,3.137,1217,4.306,1515,5.682,1761,5.605,1762,5.605,1763,5.605,1764,5.605,1765,5.605,1766,5.605,1767,5.605]],["title/routes.html",[41,3.474]],["body/routes.html",[41,3.943,63,0.016,213,0.016,214,0.016]]],"invertedIndex":[["",{"_index":63,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{},"routes.html":{}}}],["0",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["0.100.2",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":669,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":611,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["10/10",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["112px",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["12/12",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["15.1.10",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":1371,"title":{},"body":{"injectables/ToastService.html":{}}}],["17",{"_index":1563,"title":{},"body":{"overview.html":{}}}],["2",{"_index":735,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/ToastService.html":{}}}],["2.1.1",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":738,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["207px",{"_index":908,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["24a36",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.appspot.com",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseapp.com",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseio.com",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":634,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["3",{"_index":877,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{}}}],["3/3",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["330px",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["340px",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":606,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"overview.html":{}}}],["4.0.0",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":886,"title":{},"body":{"injectables/CourseService.html":{},"overview.html":{}}}],["5.0.0",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["5.12.1",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":1372,"title":{},"body":{"injectables/ToastService.html":{}}}],["6.0.7",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1564,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":662,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["_log(collectiontitl",{"_index":1759,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["_selectedcategori",{"_index":1384,"title":{},"body":{"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":797,"title":{},"body":{"injectables/CourseService.html":{}}}],["_selectedtool",{"_index":1385,"title":{},"body":{"injectables/ToolService.html":{}}}],["_tab",{"_index":510,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["a.download",{"_index":1135,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a.href",{"_index":1134,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a[param",{"_index":767,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].touppercas",{"_index":771,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["abil",{"_index":1608,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["abov",{"_index":471,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["abstract",{"_index":1644,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ac",{"_index":506,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["acc",{"_index":681,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc.concat(detail",{"_index":1116,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["acc2",{"_index":1437,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":876,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["access",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["accessor",{"_index":838,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":715,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":165,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["account.if",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["ace'",{"_index":538,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["act",{"_index":641,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["action",{"_index":382,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["activ",{"_index":564,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["activetab",{"_index":511,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["activetab.readonli",{"_index":636,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["actual_compon",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":555,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["add",{"_index":530,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["add/remov",{"_index":688,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add_circl",{"_index":785,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":801,"title":{},"body":{"injectables/CourseService.html":{}}}],["addcourse(cours",{"_index":809,"title":{},"body":{"injectables/CourseService.html":{}}}],["addit",{"_index":1543,"title":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"index.html":{}}}],["adjust",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["admin",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"dependencies.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["afauth",{"_index":287,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["afauth.authst",{"_index":326,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["affect",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["afterviewinit",{"_index":941,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["again",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["aizasybn6dkjkghs5w2yxtkluu8mcurfxkip3dc",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["along",{"_index":1731,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["alphabet",{"_index":769,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":711,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alt",{"_index":1609,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["alt_attribut",{"_index":1667,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["altcondit",{"_index":1669,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["altern",{"_index":1701,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["although",{"_index":1698,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["angular",{"_index":1018,"title":{},"body":{"components/IssueContainerComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":1464,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":932,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":380,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["angularfire2/firestor",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauth",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["angularfireauthmodul",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodul",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["answer",{"_index":1295,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["anyth",{"_index":1635,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["api",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["apikey",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["app.compon",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1555,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["appli",{"_index":397,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["applic",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["application/json",{"_index":1192,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":216,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":653,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["approut",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":464,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["architectur",{"_index":1558,"title":{"additional-documentation/architecture.html":{}},"body":{"index.html":{},"additional-documentation/architecture.html":{}}}],["array",{"_index":369,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":1314,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["arrow_back",{"_index":1323,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["assign",{"_index":964,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["async",{"_index":696,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach",{"_index":499,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["attach_fil",{"_index":972,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":716,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["auth",{"_index":319,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["auth().currentuser.email",{"_index":1237,"title":{},"body":{"injectables/KatanaService.html":{}}}],["auth().currentuser.getidtoken(tru",{"_index":349,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().getredirectresult",{"_index":328,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().setpersistence(auth.auth.persistence.sess",{"_index":342,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().signout",{"_index":347,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().updatecurrentuser(us",{"_index":331,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.googleauthprovid",{"_index":339,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["authdomain",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":82,"title":{"additional-documentation/firebase/firebase-authentication.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["authguard.servic",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{}}}],["authguardservic",{"_index":36,"title":{"injectables/AuthGuardService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"coverage.html":{},"overview.html":{}}}],["authguardservice.authstate.subscribe(st",{"_index":1174,"title":{},"body":{"injectables/KatanaService.html":{}}}],["authguardservice.userdetails.displaynam",{"_index":385,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["authstat",{"_index":323,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["automat",{"_index":1687,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["avail",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["await",{"_index":1206,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["b",{"_index":766,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param",{"_index":768,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].touppercas",{"_index":773,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["background",{"_index":815,"title":{},"body":{"injectables/CourseService.html":{}}}],["badg",{"_index":1334,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge'},{'nam",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":1380,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["badge.component.css",{"_index":1335,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1336,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1332,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:15",{"_index":1344,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:19",{"_index":1343,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:23",{"_index":1345,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:27",{"_index":1341,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":1331,"title":{},"body":{"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["bar",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{}}}],["base",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["basic",{"_index":1150,"title":{},"body":{"injectables/KatanaService.html":{}}}],["be",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["beautifi",{"_index":544,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["becom",{"_index":1534,"title":{},"body":{"index.html":{}}}],["befor",{"_index":742,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["behind",{"_index":1629,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["belong",{"_index":419,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["below",{"_index":1595,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["best",{"_index":1593,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["between",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["bit",{"_index":1725,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["blank",{"_index":821,"title":{},"body":{"injectables/CourseService.html":{}}}],["blob",{"_index":1130,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["blob([csvreport",{"_index":1131,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["block",{"_index":905,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{}}}],["blue",{"_index":875,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["blueprint",{"_index":498,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["bodi",{"_index":1159,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["boolean",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bootstrap",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["both",{"_index":1268,"title":{},"body":{"classes/OptionModel.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bottom",{"_index":459,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["box",{"_index":753,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["breadcrumb",{"_index":353,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":357,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":358,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":935,"title":{},"body":{"modules/HomePageModule.html":{}}}],["breadcrumbscompon",{"_index":179,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["brigham",{"_index":1518,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1561,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1047,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":352,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"index.html":{}}}],["buildeditortab",{"_index":986,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["buildhtml(messag",{"_index":1358,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildinstructornam",{"_index":644,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["buildrouterlink",{"_index":360,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":365,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["built",{"_index":1509,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["button",{"_index":364,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["byui",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["c.id",{"_index":775,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["call",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["call_missed_outgo",{"_index":870,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["came",{"_index":1011,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["campu",{"_index":491,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["canactiv",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["cancel",{"_index":1138,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["canva",{"_index":452,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvas_api_token",{"_index":1533,"title":{},"body":{"index.html":{}}}],["canvasitem",{"_index":1632,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.gethtml",{"_index":1637,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.sethtml($.html",{"_index":1665,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.upd",{"_index":1648,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["capit",{"_index":1602,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card",{"_index":817,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card'},{'nam",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":1376,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["card.component.css",{"_index":942,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":943,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":940,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":948,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:21",{"_index":949,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:26",{"_index":947,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:32",{"_index":958,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:39",{"_index":953,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:61",{"_index":950,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":939,"title":{},"body":{"components/IssueCardComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["carri",{"_index":557,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["case",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["cast",{"_index":900,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["catch",{"_index":1207,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["catch(console.error",{"_index":329,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["catch(funct",{"_index":345,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["catch(this.errorhandl",{"_index":1190,"title":{},"body":{"injectables/KatanaService.html":{}}}],["categor",{"_index":409,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["categori",{"_index":267,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["categories'},{'nam",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":934,"title":{},"body":{"modules/HomePageModule.html":{}}}],["categoriescompon",{"_index":181,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["category.check",{"_index":1317,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["category.titl",{"_index":404,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":1313,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":1316,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["caus",{"_index":1213,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["certain",{"_index":519,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["chalk",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["charact",{"_index":625,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["check",{"_index":709,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["check_circl",{"_index":868,"title":{},"body":{"injectables/CourseService.html":{}}}],["check_circle_outlin",{"_index":869,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["checker",{"_index":603,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["cheerio",{"_index":1481,"title":{},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["cheerio.load(canvasitem.gethtml",{"_index":1652,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["chip",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["chip'},{'nam",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["chip.compon",{"_index":1329,"title":{},"body":{"modules/SidebarModule.html":{}}}],["chip.component.css",{"_index":642,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.html",{"_index":643,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.t",{"_index":640,"title":{},"body":{"components/CourseChipComponent.html":{},"coverage.html":{}}}],["chip.component.ts:20",{"_index":648,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:28",{"_index":658,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:34",{"_index":657,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:42",{"_index":649,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:58",{"_index":655,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip/cours",{"_index":639,"title":{},"body":{"components/CourseChipComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["choic",{"_index":433,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["choice.text",{"_index":1054,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["chosen",{"_index":1403,"title":{},"body":{"injectables/ToolService.html":{}}}],["circl",{"_index":741,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":96,"title":{"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classic",{"_index":1363,"title":{},"body":{"injectables/ToastService.html":{}}}],["clear",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["click",{"_index":756,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["clickabl",{"_index":1622,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["client",{"_index":1223,"title":{},"body":{"injectables/KatanaService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["clone",{"_index":1527,"title":{},"body":{"index.html":{}}}],["close",{"_index":373,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["closemod",{"_index":361,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["cloud",{"_index":1718,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["cloud_download",{"_index":1136,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["cluster_appmodul",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homepagemodul",{"_index":927,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declar",{"_index":928,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_export",{"_index":929,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_sidebarmodul",{"_index":1324,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_declar",{"_index":1325,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_export",{"_index":1326,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_toolpagemodul",{"_index":1373,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["cluster_toolpagemodule_declar",{"_index":1374,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["code",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["codeeditorcompon",{"_index":183,"title":{"components/CodeEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coinced",{"_index":1702,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["collect",{"_index":917,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["collectiontitle(string)data",{"_index":1760,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["color",{"_index":816,"title":{},"body":{"injectables/CourseService.html":{},"components/StatBadgeComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["command",{"_index":1544,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":931,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["compat",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":955,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{}}}],["compodoc",{"_index":1581,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["comput",{"_index":1088,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["condit",{"_index":1639,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["conflict",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consol",{"_index":1556,"title":{},"body":{"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["console.error(",{"_index":1261,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(`${course.course_cod",{"_index":1239,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(error",{"_index":346,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["console.log(typeof",{"_index":1359,"title":{},"body":{"injectables/ToastService.html":{}}}],["const",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(afauth",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(courseservic",{"_index":647,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":1146,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":700,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{}}}],["constructor(opt",{"_index":1270,"title":{},"body":{"classes/OptionModel.html":{}}}],["constructor(priv",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":324,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{},"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":925,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["container'},{'nam",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":1379,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["container.component.css",{"_index":983,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":984,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":982,"title":{},"body":{"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:115",{"_index":1008,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:129",{"_index":1004,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:139",{"_index":1015,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:19",{"_index":995,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:24",{"_index":994,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:29",{"_index":992,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:44",{"_index":1005,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:64",{"_index":996,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:79",{"_index":1013,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:96",{"_index":1002,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":981,"title":{},"body":{"components/IssueContainerComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["content",{"_index":467,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["continu",{"_index":1322,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["control",{"_index":1033,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["control.setvalue(this.issue.tempvalues[optionkey",{"_index":1035,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.updatevalueandvalid",{"_index":1037,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["convert",{"_index":525,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["copi",{"_index":1539,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["core",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":590,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["correctli",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{}}}],["count",{"_index":796,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["cours",{"_index":72,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course'",{"_index":486,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course.account",{"_index":788,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":790,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":683,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["course.course_nam",{"_index":786,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":1232,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.id",{"_index":776,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":787,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":1104,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach((issueitem",{"_index":1109,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach(issueitem",{"_index":1254,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.issueitems.reduce((acc",{"_index":1102,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1436,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":1249,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":789,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":488,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_id",{"_index":480,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_nam",{"_index":487,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_search",{"_index":1682,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["coursechipcompon",{"_index":186,"title":{"components/CourseChipComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursecod",{"_index":857,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":855,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursenam",{"_index":856,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseoverlay",{"_index":891,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["courseresult",{"_index":691,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":783,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":1248,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":1229,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":1242,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselectioncompon",{"_index":188,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":798,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseservic",{"_index":32,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courses.foreach(cours",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":979,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":1071,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":1072,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["coursesidebarcompon",{"_index":190,"title":{"components/CourseSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursesobj",{"_index":799,"title":{},"body":{"injectables/CourseService.html":{}}}],["course}",{"_index":659,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["cover",{"_index":1579,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase.html":{}}}],["coverag",{"_index":1439,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"classes/OptionModel.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["creation",{"_index":1714,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["credenti",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["crumb",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":1087,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrow",{"_index":1097,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrows(issueitem.issues.map(issu",{"_index":1124,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport",{"_index":1107,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport.csv",{"_index":1128,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["ctrl+f",{"_index":583,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["current",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["currentcolor",{"_index":1614,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["currenthtml",{"_index":1625,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["d3",{"_index":1098,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["darken",{"_index":880,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["data",{"_index":957,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["data.st",{"_index":1227,"title":{},"body":{"injectables/KatanaService.html":{}}}],["databas",{"_index":1172,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["databaseurl",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataflow",{"_index":1582,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["datatyp",{"_index":1721,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["db",{"_index":1741,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["decid",{"_index":1596,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["declar",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["decor",{"_index":569,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["default",{"_index":315,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defaulttext",{"_index":434,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defin",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delay",{"_index":1214,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["delet",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{}}}],["depend",{"_index":217,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1515,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["deprec",{"_index":1163,"title":{},"body":{"injectables/KatanaService.html":{}}}],["describ",{"_index":1535,"title":{},"body":{"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["design",{"_index":1604,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["desir",{"_index":822,"title":{},"body":{"injectables/CourseService.html":{}}}],["desiredstatu",{"_index":1003,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["detail",{"_index":356,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["details'},{'nam",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":1377,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["details.component.css",{"_index":1058,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":1059,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":1057,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1060,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1061,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":1056,"title":{},"body":{"components/IssueDetailsComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["determin",{"_index":445,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["develop",{"_index":778,"title":{"additional-documentation/setup/development-environment.html":{}},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["diagram",{"_index":1583,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/architecture.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["direct",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["directori",{"_index":1540,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["disabl",{"_index":601,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["discov",{"_index":438,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discover(canvasitem",{"_index":1634,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discover/search",{"_index":1610,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveri",{"_index":424,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["discoverissu",{"_index":1141,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":1151,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":426,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveroption}",{"_index":456,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["discuss",{"_index":453,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dismiss",{"_index":1362,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":411,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dist",{"_index":1541,"title":{},"body":{"index.html":{}}}],["div",{"_index":572,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["do",{"_index":1398,"title":{},"body":{"injectables/ToolService.html":{}}}],["document",{"_index":1440,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["document.documentelement.style.setproperti",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["document.getelementbyid(\"download",{"_index":1129,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["document.queryselector('.mod",{"_index":1307,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1370,"title":{},"body":{"injectables/ToastService.html":{}}}],["document.queryselector('app",{"_index":902,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["doesn't",{"_index":556,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dogooglelogin",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["don't",{"_index":553,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["down",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["download",{"_index":1086,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["downloadissu",{"_index":1080,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dropdown",{"_index":431,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dsv",{"_index":1099,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["dure",{"_index":562,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dynam",{"_index":1394,"title":{},"body":{"injectables/ToolService.html":{},"dependencies.html":{}}}],["e",{"_index":677,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["e.messag",{"_index":1364,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target",{"_index":1366,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target.readyst",{"_index":1367,"title":{},"body":{"injectables/ToastService.html":{}}}],["each",{"_index":370,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"interfaces/Tool.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["earlier",{"_index":1679,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["easi",{"_index":1733,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["easier",{"_index":1722,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["edit",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor",{"_index":441,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor'",{"_index":522,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor'},{'nam",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["editor.compon",{"_index":1381,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["editor.component.css",{"_index":508,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.html",{"_index":509,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.t",{"_index":504,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:105",{"_index":547,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:128",{"_index":534,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":533,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:27",{"_index":529,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":571,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":565,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":563,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":574,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":518,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:71",{"_index":540,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor/cod",{"_index":503,"title":{},"body":{"components/CodeEditorComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["editorel",{"_index":512,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editortab",{"_index":442,"title":{"interfaces/EditorTab.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editortab.readonli",{"_index":1043,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editortab.titl",{"_index":1040,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editsess",{"_index":580,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editsession(cod",{"_index":597,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["effect",{"_index":1046,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["element",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["elementref",{"_index":568,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["eltyp",{"_index":1001,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["email",{"_index":1751,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["emit",{"_index":321,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["empti",{"_index":620,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["empty/miss",{"_index":1658,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["enabl",{"_index":169,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["end",{"_index":1546,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1586,"title":{"additional-documentation/architecture/server-endpoints.html":{}},"body":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["enter",{"_index":1672,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["entir",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["environ",{"_index":248,"title":{"additional-documentation/setup/development-environment.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1188,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["error('cours",{"_index":1191,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('discov",{"_index":1201,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('fix",{"_index":1246,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('socket",{"_index":1244,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('toollist",{"_index":1181,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandl",{"_index":1142,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandler(",{"_index":1153,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorpagecompon",{"_index":192,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["esseci",{"_index":1600,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["etc",{"_index":455,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["even",{"_index":585,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["event",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":318,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["everyth",{"_index":1686,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ex",{"_index":959,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["exampl",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exist",{"_index":1231,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["expand",{"_index":576,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["expandview",{"_index":514,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["export",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["expos",{"_index":1745,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["express",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["extern",{"_index":1755,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["fail",{"_index":466,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["failed'].includes(this.issue.statu",{"_index":1048,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["fairli",{"_index":1673,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fall",{"_index":779,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["feedback",{"_index":355,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["feel",{"_index":1429,"title":{},"body":{"injectables/ToolService.html":{}}}],["few",{"_index":1624,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ff0000",{"_index":1621,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filenam",{"_index":1127,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fill",{"_index":1678,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filter",{"_index":719,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["find",{"_index":622,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["fire",{"_index":541,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebas",{"_index":81,"title":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebase.auth",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["firestor",{"_index":1697,"title":{"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestore'",{"_index":1743,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestorewrapp",{"_index":1739,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestorewrapper.initializefirebas",{"_index":1742,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["first",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["fit",{"_index":652,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["fix",{"_index":437,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fix(canvasitem",{"_index":1646,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fix/discov",{"_index":1588,"title":{},"body":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}}}],["fix/search",{"_index":1606,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixabl",{"_index":1247,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":1252,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":1259,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixedissu",{"_index":1645,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixedmessag",{"_index":1668,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixissu",{"_index":1143,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":1155,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixmessag",{"_index":460,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixopt",{"_index":439,"title":{"interfaces/FixOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixoption}",{"_index":457,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["flag",{"_index":1553,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["flatissuedetail",{"_index":1111,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["flow",{"_index":1589,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["folder",{"_index":965,"title":{},"body":{"components/IssueCardComponent.html":{},"index.html":{}}}],["follow",{"_index":1523,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["form",{"_index":428,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["format",{"_index":650,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["formcontrol",{"_index":1275,"title":{},"body":{"classes/OptionModel.html":{}}}],["formcontrol}",{"_index":1267,"title":{},"body":{"classes/OptionModel.html":{}}}],["formgroup",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["formgroup(group",{"_index":1282,"title":{},"body":{"classes/OptionModel.html":{}}}],["formsmodul",{"_index":936,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["forward",{"_index":1657,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["found",{"_index":1603,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["four",{"_index":1744,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["framework",{"_index":1513,"title":{},"body":{"index.html":{}}}],["front",{"_index":1545,"title":{},"body":{"index.html":{}}}],["full",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/CourseService.html":{}}}],["fullbuild",{"_index":1548,"title":{},"body":{"index.html":{}}}],["function",{"_index":73,"title":{"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["functions.auth.user().oncr",{"_index":1763,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["g",{"_index":1705,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["gather",{"_index":1294,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["gavel",{"_index":973,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["get",{"_index":751,"title":{"index.html":{}},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{}}}],["getbackgroundcolorclass",{"_index":802,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbackgroundcolorclasses(statu",{"_index":813,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbuttonclass",{"_index":987,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":1000,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":697,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":803,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":818,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses(bodi",{"_index":1157,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":645,"title":{},"body":{"components/CourseChipComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount(statu",{"_index":654,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissueitem",{"_index":1081,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getissueitems(cours",{"_index":1089,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getselectedcategori",{"_index":1408,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":840,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1412,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":804,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":824,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclass",{"_index":805,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":827,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettoollist",{"_index":1144,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":806,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":830,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettypeicon",{"_index":945,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gi",{"_index":629,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["git",{"_index":1526,"title":{},"body":{"index.html":{}}}],["git+https://github.com/byuitechops/canva",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":1736,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["github:byuitechops/logg",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["given",{"_index":703,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["gmail",{"_index":1710,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["go",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["goe",{"_index":1365,"title":{},"body":{"injectables/ToastService.html":{}}}],["good",{"_index":1224,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["googl",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["grab",{"_index":443,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["green",{"_index":878,"title":{},"body":{"injectables/CourseService.html":{}}}],["grey",{"_index":879,"title":{},"body":{"injectables/CourseService.html":{}}}],["group",{"_index":1277,"title":{},"body":{"classes/OptionModel.html":{}}}],["group[option.key",{"_index":1280,"title":{},"body":{"classes/OptionModel.html":{}}}],["handl",{"_index":1168,"title":{},"body":{"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["header",{"_index":1123,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":1193,"title":{},"body":{"injectables/KatanaService.html":{}}}],["height",{"_index":536,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["help",{"_index":560,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["help_outlin",{"_index":974,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["helper",{"_index":1265,"title":{},"body":{"classes/OptionModel.html":{}}}],["here",{"_index":500,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["hex",{"_index":1618,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["high",{"_index":1584,"title":{"additional-documentation/architecture/high-level-overview.html":{}},"body":{"additional-documentation/architecture.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["highlight",{"_index":521,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["hold",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/OptionsViewComponent.html":{}}}],["home",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["home/error",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/issu",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/opt",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["homepagemodul",{"_index":225,"title":{"modules/HomePageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":1719,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["html",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlelement",{"_index":901,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["htmlinputel",{"_index":1315,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["htmlkey",{"_index":444,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlstring",{"_index":1041,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["http",{"_index":1149,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclient",{"_index":1147,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":1171,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpmodul",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/angular/angularfire2",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["https://katana",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.npmjs.com/package/angular2",{"_index":1101,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["i.",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["icon",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["id",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idaho",{"_index":1521,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["idtoken",{"_index":308,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["if(issue.statu",{"_index":1647,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["imag",{"_index":1650,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image).attr('alt",{"_index":1664,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image.attr('alt",{"_index":1655,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image.attr('src",{"_index":1661,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["images.each((i",{"_index":1654,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["img",{"_index":1653,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["img[src=\"${issue.details.image}\"]`).first",{"_index":1662,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["immedi",{"_index":1217,"title":{},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["implement",{"_index":320,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["import",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["in...you",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["includ",{"_index":469,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["index",{"_index":285,"title":{"index.html":{}},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":829,"title":{},"body":{"injectables/CourseService.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inform",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["initi",{"_index":567,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["initializefirebas",{"_index":1753,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["inject",{"_index":277,"title":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":429,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["input('index",{"_index":1022,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issu",{"_index":1021,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issueitem",{"_index":960,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('posit",{"_index":961,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('searchphras",{"_index":578,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('sid",{"_index":1349,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1347,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1346,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('tab",{"_index":577,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('titlecolor",{"_index":1348,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert",{"_index":545,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["insert_drive_fil",{"_index":970,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instal",{"_index":1525,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":566,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["instanceof",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["instantan",{"_index":1707,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["instead",{"_index":1220,"title":{},"body":{"injectables/KatanaService.html":{}}}],["instructor",{"_index":493,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["instructor'",{"_index":651,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructornam",{"_index":665,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructur",{"_index":1512,"title":{},"body":{"index.html":{}}}],["integr",{"_index":505,"title":{},"body":{"components/CodeEditorComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["interfac",{"_index":407,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["intern",{"_index":1754,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["intial",{"_index":1006,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isad",{"_index":698,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":707,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isfix",{"_index":988,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isn\\'t",{"_index":921,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["isn\\\\'t",{"_index":926,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["issu",{"_index":138,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue'",{"_index":470,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue.formgroup",{"_index":1256,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.formgroup.valu",{"_index":1257,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.optionvalu",{"_index":1117,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.optionvalues.newalttext",{"_index":1663,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.questionmodel",{"_index":1258,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.statu",{"_index":680,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.titl",{"_index":980,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["issuecardcompon",{"_index":195,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercompon",{"_index":197,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercomponent}",{"_index":1062,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["issuedetail",{"_index":985,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":199,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":462,"title":{"interfaces/IssueItem.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["issueitem'",{"_index":951,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.categori",{"_index":1119,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.course_id",{"_index":852,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueNavComponent.html":{}}}],["issueitem.issu",{"_index":1103,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":679,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["issueitem.issues.foreach(issu",{"_index":1255,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.issues.includes(issu",{"_index":1105,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":864,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.item_id",{"_index":1118,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.link",{"_index":1120,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.newissue(titl",{"_index":1640,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.titl",{"_index":978,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":1250,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issueitem}",{"_index":494,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["issuelistcompon",{"_index":201,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuenavcompon",{"_index":203,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":682,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["issue}",{"_index":484,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue}'",{"_index":1024,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["it'",{"_index":549,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["item",{"_index":477,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["item'",{"_index":993,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["item_id",{"_index":482,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_typ",{"_index":952,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["itemset",{"_index":1392,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["itself",{"_index":573,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["j",{"_index":1110,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["js",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1724,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["json.parse(event.data",{"_index":1226,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":1233,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":860,"title":{},"body":{"injectables/CourseService.html":{}}}],["json.stringify(messag",{"_index":1361,"title":{},"body":{"injectables/ToastService.html":{}}}],["katan",{"_index":1695,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["katana",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["katana'",{"_index":1580,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["katana.servic",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["katana/server/node_tool",{"_index":1676,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["katana/server/node_tools.j",{"_index":1680,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["katanaservic",{"_index":33,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["katanaservice.error",{"_index":919,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.messag",{"_index":920,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.statu",{"_index":922,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.socket",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["kebob",{"_index":1690,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["keep",{"_index":584,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["key",{"_index":427,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["key.includes('katana_cours",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["keystrok",{"_index":1009,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["last",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":692,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["later",{"_index":1395,"title":{},"body":{"injectables/ToolService.html":{}}}],["launch",{"_index":1547,"title":{},"body":{"index.html":{}}}],["layout",{"_index":1631,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["learn",{"_index":1510,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["left",{"_index":820,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["legend",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["letter",{"_index":1598,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["level",{"_index":1585,"title":{"additional-documentation/architecture/high-level-overview.html":{}},"body":{"additional-documentation/architecture.html":{}}}],["lighten",{"_index":881,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["link",{"_index":401,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["linknam",{"_index":1557,"title":{},"body":{"index.html":{}}}],["linter/syntax",{"_index":602,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["list",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["list'},{'nam",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":1375,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["list.component.css",{"_index":1067,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":1068,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":1066,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":1069,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:18",{"_index":1070,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":1065,"title":{},"body":{"components/IssueListComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["list?useridtoken=${useridtoken}`).subscrib",{"_index":1185,"title":{},"body":{"injectables/KatanaService.html":{}}}],["listen",{"_index":1173,"title":{},"body":{"injectables/KatanaService.html":{}}}],["load",{"_index":386,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["loc",{"_index":1423,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":1425,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":1427,"title":{},"body":{"injectables/ToolService.html":{}}}],["local",{"_index":811,"title":{},"body":{"injectables/CourseService.html":{}}}],["localhost:8000",{"_index":1549,"title":{},"body":{"index.html":{}}}],["locat",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{}}}],["log",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["logger",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["logic",{"_index":1628,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["login",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["loguserstatu",{"_index":1145,"title":{},"body":{"injectables/KatanaService.html":{}}}],["loguserstatus(useremail",{"_index":1161,"title":{},"body":{"injectables/KatanaService.html":{}}}],["long",{"_index":1757,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["look",{"_index":1406,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/firebase.html":{}}}],["loop",{"_index":1708,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["lowercas",{"_index":1597,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["made",{"_index":1641,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["magic",{"_index":1399,"title":{},"body":{"injectables/ToolService.html":{}}}],["main",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["mainli",{"_index":794,"title":{},"body":{"injectables/CourseService.html":{}}}],["maintain",{"_index":1522,"title":{},"body":{"index.html":{}}}],["mainten",{"_index":1517,"title":{},"body":{"index.html":{}}}],["major",{"_index":1627,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["make",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["manag",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["mani",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["manual",{"_index":1716,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["mass",{"_index":1516,"title":{},"body":{"index.html":{}}}],["master",{"_index":782,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{},"routes.html":{}}}],["materi",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["materialize]{@link",{"_index":1100,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializeact",{"_index":379,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":933,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["matter",{"_index":527,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxlin",{"_index":539,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["mcicon",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mdicon",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mean",{"_index":575,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["meet",{"_index":1638,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["menu",{"_index":1689,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["messag",{"_index":458,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["middlewar",{"_index":1212,"title":{},"body":{"injectables/KatanaService.html":{}}}],["minim",{"_index":1642,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["mint",{"_index":884,"title":{},"body":{"injectables/CourseService.html":{}}}],["miscellan",{"_index":1565,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1660,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["modal",{"_index":374,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":359,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalisopen",{"_index":1286,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["mode",{"_index":425,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["modifi",{"_index":704,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":215,"title":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["module.export",{"_index":1666,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["moduleitem",{"_index":483,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["more",{"_index":758,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["more_vert",{"_index":1137,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":1656,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["much",{"_index":624,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["multiselect",{"_index":432,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["mute",{"_index":1554,"title":{},"body":{"index.html":{}}}],["n",{"_index":1121,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["name1",{"_index":770,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":772,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["names.length",{"_index":668,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0",{"_index":672,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0][0",{"_index":673,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1",{"_index":674,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1][0",{"_index":671,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["nav",{"_index":1077,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":1378,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["nav.component.css",{"_index":1078,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":1079,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":1076,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:24",{"_index":1083,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:32",{"_index":1094,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:33",{"_index":1096,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:34",{"_index":1095,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:40",{"_index":1091,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:47",{"_index":1084,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:56",{"_index":1090,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:69",{"_index":1093,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:79",{"_index":1085,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":1075,"title":{},"body":{"components/IssueNavComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["navig",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["navigationend",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["needl",{"_index":631,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["never",{"_index":1219,"title":{},"body":{"injectables/KatanaService.html":{}}}],["new",{"_index":298,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["newalttext",{"_index":1671,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["newcolor",{"_index":1620,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["newli",{"_index":1591,"title":{},"body":{"additional-documentation/setup.html":{}}}],["newstatu",{"_index":1014,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["newwidth",{"_index":907,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["ng",{"_index":1537,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":946,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["ngoninit",{"_index":515,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["node",{"_index":998,"title":{"additional-documentation/setup/node-tools.html":{}},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["node_tool_template.j",{"_index":1677,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodej",{"_index":1529,"title":{},"body":{"index.html":{}}}],["nodetool(require('./node_tools/alt_attributes.j",{"_index":1684,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require('./node_tools/course_search.j",{"_index":1683,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require(./node_tools/tool_file.j",{"_index":1685,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["non",{"_index":1711,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["none",{"_index":667,"title":{},"body":{"components/CourseChipComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["normal",{"_index":1210,"title":{},"body":{"injectables/KatanaService.html":{}}}],["nosql",{"_index":1720,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["note",{"_index":1617,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["noth",{"_index":1734,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["notif",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["notifi",{"_index":1351,"title":{},"body":{"injectables/ToastService.html":{}}}],["npm",{"_index":1531,"title":{},"body":{"index.html":{}}}],["null",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["number",{"_index":481,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["numer",{"_index":764,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":402,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["object.entries(issue.details).reduce((acc",{"_index":1112,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["object.key",{"_index":1016,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":853,"title":{},"body":{"injectables/CourseService.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":1310,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["object.keys(this.issue.html).length",{"_index":1051,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(this.issue.tempvalues).foreach(optionkey",{"_index":1032,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object:const",{"_index":1681,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["observ",{"_index":313,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["occur",{"_index":1590,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["octet/stream",{"_index":1132,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["on",{"_index":898,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["onc",{"_index":759,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["onchang",{"_index":989,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onchange(optionkey",{"_index":1007,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["oninit",{"_index":507,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["onlin",{"_index":490,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["onlyself",{"_index":1036,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onsubmit",{"_index":1287,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open",{"_index":377,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["open/clos",{"_index":1291,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":684,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":646,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["openmod",{"_index":362,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["opportun",{"_index":1704,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["option",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["option'",{"_index":1613,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["option.descript",{"_index":1053,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":1279,"title":{},"body":{"classes/OptionModel.html":{}}}],["option.titl",{"_index":1052,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["optionkey",{"_index":1010,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["optionmodel",{"_index":422,"title":{"classes/OptionModel.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["optionmodel(this.toolservice.selectedtool.discoveropt",{"_index":1304,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionmodel(this.toolservice.selectedtool.fixopt",{"_index":1028,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["options.altcondition.includes('al",{"_index":1659,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["options.categories.push(category.id",{"_index":1318,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":1311,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionsviewcompon",{"_index":205,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["optionvalu",{"_index":472,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["order",{"_index":761,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["other",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["otherwis",{"_index":1615,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["out",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["output",{"_index":317,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["outsid",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["over",{"_index":558,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["overlay",{"_index":687,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{}}}],["overlay.classnam",{"_index":903,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overlay.style.display",{"_index":904,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overview",{"_index":1562,"title":{"overview.html":{},"additional-documentation/architecture/high-level-overview.html":{}},"body":{"overview.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["owner",{"_index":1767,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["packag",{"_index":1463,"title":{"dependencies.html":{}},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["page",{"_index":139,"title":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["page'},{'nam",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["page.compon",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page.component.css",{"_index":914,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.html",{"_index":915,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.t",{"_index":913,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:9",{"_index":916,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.modul",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.t",{"_index":930,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["page/breadcrumbs/breadcrumbs.component.t",{"_index":351,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:21",{"_index":363,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:31",{"_index":378,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:37",{"_index":376,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:44",{"_index":372,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:53",{"_index":366,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/categories/categories.compon",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["page/categories/categories.component.t",{"_index":387,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["page/categories/categories.component.ts:14",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:23",{"_index":400,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:31",{"_index":399,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/cod",{"_index":502,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["page/error",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["page/hom",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page/issu",{"_index":938,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["page/opt",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["page/stat",{"_index":1330,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["page/tool",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["pair",{"_index":1113,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[0",{"_index":1114,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[1",{"_index":1115,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["panorama_fish_ey",{"_index":871,"title":{},"body":{"injectables/CourseService.html":{}}}],["param",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["paramet",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["parser",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1215,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pass",{"_index":524,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["path",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{}}}],["pathmatch",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":368,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":492,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["persist",{"_index":923,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["pertin",{"_index":1752,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["phrase",{"_index":621,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["piec",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["pill",{"_index":1333,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["place",{"_index":1430,"title":{},"body":{"injectables/ToolService.html":{}}}],["platform",{"_index":489,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pleas",{"_index":924,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["point",{"_index":1396,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/architecture.html":{}}}],["popul",{"_index":705,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["port",{"_index":1551,"title":{},"body":{"index.html":{}}}],["posit",{"_index":717,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["possibl",{"_index":1643,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["practic",{"_index":1594,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["pre",{"_index":1230,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pretti",{"_index":623,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["prevent",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["primari",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["privat",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["process",{"_index":305,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["processingmessag",{"_index":1386,"title":{},"body":{"injectables/ToolService.html":{}}}],["prod",{"_index":1538,"title":{},"body":{"index.html":{}}}],["produc",{"_index":1633,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["product",{"_index":1536,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["project",{"_index":1688,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["projectid",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":337,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["promise(async",{"_index":1177,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["prop",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["properli",{"_index":1738,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["properti",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["provid",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["providedin",{"_index":845,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["provider.addscope('email",{"_index":341,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["provider.addscope('profil",{"_index":340,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["public",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["purpos",{"_index":410,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["put",{"_index":1274,"title":{},"body":{"classes/OptionModel.html":{}}}],["queri",{"_index":739,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":967,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":971,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["questionmodel",{"_index":1253,"title":{},"body":{"injectables/KatanaService.html":{}}}],["quit",{"_index":1713,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["quiz",{"_index":479,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["quizquest",{"_index":966,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["quizz",{"_index":454,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ran",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["rc.11",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["rc.2",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["reactiv",{"_index":1266,"title":{},"body":{"classes/OptionModel.html":{}}}],["reactiveformsmodul",{"_index":937,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["read",{"_index":918,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["readi",{"_index":1228,"title":{},"body":{"injectables/KatanaService.html":{}}}],["readonli",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reason",{"_index":552,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["receiv",{"_index":1218,"title":{},"body":{"injectables/KatanaService.html":{}}}],["recommend",{"_index":1758,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["red",{"_index":882,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["redirect",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["redirectto",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":554,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["referenc",{"_index":1636,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["refresh",{"_index":1765,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["reg",{"_index":627,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regard",{"_index":1692,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["regex",{"_index":526,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp",{"_index":528,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp(this.searchphras",{"_index":628,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["reject",{"_index":338,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(",{"_index":1649,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(new",{"_index":1180,"title":{},"body":{"injectables/KatanaService.html":{}}}],["relat",{"_index":550,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["reload",{"_index":371,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["remov",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["remove_circl",{"_index":784,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removeal",{"_index":892,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["removecours",{"_index":807,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":832,"title":{},"body":{"injectables/CourseService.html":{}}}],["render",{"_index":954,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":736,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["report",{"_index":1126,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["repositori",{"_index":1528,"title":{},"body":{"index.html":{}}}],["repres",{"_index":417,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["request",{"_index":309,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["requir",{"_index":436,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["require('./firestor",{"_index":1740,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["require('cheerio",{"_index":1651,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reset",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["resolv",{"_index":1178,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["resolve(data",{"_index":1197,"title":{},"body":{"injectables/KatanaService.html":{}}}],["rest",{"_index":559,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["restor",{"_index":475,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["result",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{},"routes.html":{}}}],["retriev",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["retrieval?useridtoken=${useridtoken",{"_index":1195,"title":{},"body":{"injectables/KatanaService.html":{}}}],["retrievetoken",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["return",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["revers",{"_index":760,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["revok",{"_index":1764,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["right",{"_index":1342,"title":{},"body":{"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":41,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"routes.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToolService.html":{}}}],["router.navigate([`home/tools/${this.toolservice.selectedtool.id}/opt",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodul",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["routermodule.forroot",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":1691,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["run",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["rxj",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["safe",{"_index":591,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["same",{"_index":757,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["save",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["screen",{"_index":1401,"title":{},"body":{"injectables/ToolService.html":{}}}],["search",{"_index":523,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["search_term",{"_index":733,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":693,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbox",{"_index":588,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchphras",{"_index":517,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchtext",{"_index":694,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["see",{"_index":710,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["seen",{"_index":1611,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["select",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["selectedcategori",{"_index":1407,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":1417,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcours",{"_index":839,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedcourse(cours",{"_index":847,"title":{},"body":{"injectables/CourseService.html":{}}}],["selecteddiscoveropt",{"_index":1387,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":800,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedtool",{"_index":1411,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":1420,"title":{},"body":{"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{}}}],["selection.component.css",{"_index":689,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":690,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":686,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:121",{"_index":708,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":1382,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:17",{"_index":725,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":726,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:21",{"_index":718,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":722,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:25",{"_index":724,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":723,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:31",{"_index":721,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":701,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":720,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:50",{"_index":702,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:85",{"_index":713,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":685,"title":{},"body":{"components/CourseSelectionComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["selection/tool",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":1082,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":1092,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":744,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["sent",{"_index":1216,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["sentiment_very_dissatisfi",{"_index":1074,"title":{},"body":{"components/IssueListComponent.html":{}}}],["separ",{"_index":1737,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["server",{"_index":77,"title":{"additional-documentation/architecture/server-endpoints.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["server/settings.json",{"_index":1552,"title":{},"body":{"index.html":{}}}],["server_log",{"_index":1727,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["serverdomain",{"_index":1140,"title":{},"body":{"injectables/KatanaService.html":{}}}],["serverlog(data",{"_index":1747,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["servic",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["session",{"_index":543,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["sessionstorage.selectedcategori",{"_index":1418,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage.selectedcours",{"_index":848,"title":{},"body":{"injectables/CourseService.html":{}}}],["sessionstorage.selectedtool",{"_index":1421,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":859,"title":{},"body":{"injectables/CourseService.html":{}}}],["set",{"_index":147,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{}}}],["seteditorsess",{"_index":516,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["seteditorsession(tab",{"_index":546,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["setissuestatu",{"_index":990,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":1012,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setselectedcategori",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":398,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcours",{"_index":893,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["setselectedcourse(cours",{"_index":842,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{}}}],["setselectedtool(tool",{"_index":1414,"title":{},"body":{"injectables/ToolService.html":{}}}],["settimeout",{"_index":1369,"title":{},"body":{"injectables/ToastService.html":{}}}],["setup",{"_index":1125,"title":{"additional-documentation/setup.html":{}},"body":{"components/IssueNavComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["sever",{"_index":1703,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["short",{"_index":1623,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["show",{"_index":532,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["showeditor",{"_index":991,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["shown",{"_index":826,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{}}}],["side",{"_index":1337,"title":{},"body":{"components/StatBadgeComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["sidebar",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sidebar.compon",{"_index":1328,"title":{},"body":{"modules/SidebarModule.html":{}}}],["sidebar.component.css",{"_index":889,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.html",{"_index":890,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":888,"title":{},"body":{"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:15",{"_index":894,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:23",{"_index":899,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":895,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:52",{"_index":897,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:59",{"_index":896,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar/cours",{"_index":887,"title":{},"body":{"components/CourseSidebarComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["sidebar/sidebar.modul",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarmodul",{"_index":226,"title":{"modules/SidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["sign",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["signific",{"_index":1728,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["signinwithredirect(provid",{"_index":344,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["signout",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["similar",{"_index":1592,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpl",{"_index":1674,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpli",{"_index":1630,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["singl",{"_index":461,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{}}}],["size",{"_index":605,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["sizeof",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["skip",{"_index":465,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["small",{"_index":1732,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["socket",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["socket.addeventlistener('messag",{"_index":1225,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.io",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["socket.onerror",{"_index":1243,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":1238,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sole",{"_index":1717,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["sort",{"_index":714,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":699,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":712,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["space",{"_index":607,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["spawn",{"_index":581,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["speak",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["specif",{"_index":468,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["specifi",{"_index":823,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["spin",{"_index":1542,"title":{},"body":{"index.html":{}}}],["split",{"_index":664,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["spring",{"_index":781,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["src/.../firebase.auth.t",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authguard.service.t",{"_index":278,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/authguard.service.ts:101",{"_index":306,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:20",{"_index":314,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:25",{"_index":316,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:30",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:36",{"_index":311,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:37",{"_index":312,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:63",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:71",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:91",{"_index":310,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/classes.t",{"_index":1264,"title":{},"body":{"classes/OptionModel.html":{},"coverage.html":{}}}],["src/app/classes.ts:14",{"_index":1271,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/classes.ts:27",{"_index":1272,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/course.service.t",{"_index":791,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{}}}],["src/app/course.service.ts:110",{"_index":831,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:122",{"_index":825,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:139",{"_index":828,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:155",{"_index":814,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:17",{"_index":836,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:22",{"_index":834,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:27",{"_index":837,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:32",{"_index":835,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:34",{"_index":841,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:38",{"_index":843,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:45",{"_index":844,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:47",{"_index":808,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:61",{"_index":810,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:79",{"_index":833,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:92",{"_index":819,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/firebase.auth.t",{"_index":1447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/hom",{"_index":350,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["src/app/interfaces.t",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["src/app/katana.service.t",{"_index":1139,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/katana.service.ts:116",{"_index":1162,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:131",{"_index":1152,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:21",{"_index":1167,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:215",{"_index":1156,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:26",{"_index":1148,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:308",{"_index":1154,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:59",{"_index":1170,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:64",{"_index":1160,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:89",{"_index":1158,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/sidebar/cours",{"_index":638,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.module.t",{"_index":1327,"title":{},"body":{"modules/SidebarModule.html":{}}}],["src/app/toast.service.t",{"_index":1350,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:11",{"_index":1353,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:22",{"_index":1357,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:56",{"_index":1355,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":501,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":1383,"title":{},"body":{"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:21",{"_index":1393,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:34",{"_index":1397,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:38",{"_index":1400,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:42",{"_index":1405,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:47",{"_index":1404,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:52",{"_index":1390,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:56",{"_index":1391,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:60",{"_index":1402,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:62",{"_index":1409,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:65",{"_index":1410,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:70",{"_index":1413,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:73",{"_index":1415,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:76",{"_index":1389,"title":{},"body":{"injectables/ToolService.html":{}}}],["stand",{"_index":1700,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["standard",{"_index":1709,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["start",{"_index":1211,"title":{"index.html":{}},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["startup",{"_index":1756,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["stat",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":207,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1338,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["state",{"_index":474,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["statement",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["stattitl",{"_index":1339,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":322,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["statuscolor",{"_index":874,"title":{},"body":{"injectables/CourseService.html":{}}}],["statuscolors[statu",{"_index":883,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicon",{"_index":867,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicons[statu",{"_index":873,"title":{},"body":{"injectables/CourseService.html":{}}}],["step",{"_index":1524,"title":{},"body":{"index.html":{}}}],["still",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["storag",{"_index":812,"title":{},"body":{"injectables/CourseService.html":{}}}],["storagebucket",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":473,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["straightforward",{"_index":1675,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["string",{"_index":415,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["structur",{"_index":1696,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["style",{"_index":396,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":495,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["subaccount",{"_index":695,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["submit",{"_index":1296,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["subscrib",{"_index":1196,"title":{},"body":{"injectables/KatanaService.html":{}}}],["subscript",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["successfulli",{"_index":1712,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["such",{"_index":478,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["suit",{"_index":1706,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["support",{"_index":1559,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":752,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["suspici",{"_index":1729,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["svg",{"_index":1560,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1511,"title":{},"body":{"index.html":{}}}],["tab",{"_index":440,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["tab'",{"_index":548,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.sess",{"_index":596,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setmode('ace/mode/html",{"_index":598,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.settabsize(4",{"_index":604,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setuseworker(fals",{"_index":600,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setusewrapmode(tru",{"_index":599,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.titl",{"_index":635,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tabl",{"_index":706,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["tab}",{"_index":997,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["tag",{"_index":1020,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tag_fac",{"_index":1073,"title":{},"body":{"components/IssueListComponent.html":{}}}],["take",{"_index":1273,"title":{},"body":{"classes/OptionModel.html":{}}}],["taken",{"_index":1293,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["team",{"_index":1514,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["technic",{"_index":1693,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["tell",{"_index":1222,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["temp",{"_index":1532,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["temporari",{"_index":1699,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["tempvalu",{"_index":476,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["term",{"_index":497,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["termin",{"_index":1530,"title":{},"body":{"index.html":{}}}],["text",{"_index":430,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["text_rotation_non",{"_index":1605,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["the_tool_nam",{"_index":1601,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["then((cours",{"_index":754,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["then(this.dogooglelogin",{"_index":348,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["then(useridtoken",{"_index":1183,"title":{},"body":{"injectables/KatanaService.html":{}}}],["thing",{"_index":793,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcategori",{"_index":1416,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":846,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitem",{"_index":850,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":851,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedtool",{"_index":1419,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._tab",{"_index":592,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this._tabs.foreach(tab",{"_index":594,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.activetab",{"_index":619,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.afauth.auth",{"_index":343,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authguardservice.canactiv",{"_index":1179,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authguardservice.retrievetoken",{"_index":1182,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authstate.emit(fals",{"_index":327,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authstate.emit(this.canactiv",{"_index":334,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":749,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":1428,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.closemod",{"_index":1106,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.course.error",{"_index":676,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.id",{"_index":661,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor",{"_index":666,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.includ",{"_index":670,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.replac",{"_index":663,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitem",{"_index":675,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitems.reduce((acc",{"_index":678,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.courseresult",{"_index":755,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":763,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":765,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce(acc",{"_index":865,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseservice.addcourse(cours",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.courses.find(c",{"_index":774,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach((cours",{"_index":1108,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.courses.foreach(c",{"_index":911,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.courses.length",{"_index":1308,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1435,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":906,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":1240,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.removecourse(c",{"_index":912,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.selectedcours",{"_index":910,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":1241,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedissueitem",{"_index":1063,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":1064,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":858,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.coursesobj[key",{"_index":854,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.dogooglelogin",{"_index":333,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.editor",{"_index":608,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.findall(reg",{"_index":630,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.sethighlightactiveline(tru",{"_index":615,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption(\"maxlin",{"_index":612,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption(\"minlin",{"_index":610,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tab.readonli",{"_index":617,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tru",{"_index":614,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setsession(tab.sess",{"_index":618,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.settheme('ace/theme/termin",{"_index":613,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.error",{"_index":1262,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandl",{"_index":1199,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandler(err",{"_index":1189,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.formgroup",{"_index":1305,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":1312,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":866,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.gettoollist",{"_index":1175,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.get(`/api/tool",{"_index":1184,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/api/us",{"_index":1198,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post(`/api/cours",{"_index":1194,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":1026,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup",{"_index":1029,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.get(optionkey",{"_index":1034,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.value[optionkey",{"_index":1050,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.html[editortab.htmlkey",{"_index":1042,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel",{"_index":1027,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel.togroup",{"_index":1030,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":1044,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalu",{"_index":1031,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalues[optionkey",{"_index":1049,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":1025,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":1319,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":746,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.lastsortedbi",{"_index":762,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":381,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":1309,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":1276,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.optionmodel",{"_index":1303,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":1306,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":1278,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.removecourse(cours",{"_index":861,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.router.navig",{"_index":335,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.router.navigate(['hom",{"_index":1263,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.router.navigate([`home/tools/${this.toolservice.selectedtool.id}/issu",{"_index":1320,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":383,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":743,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":750,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchphras",{"_index":626,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":734,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":740,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":862,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":863,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedissueitem",{"_index":849,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.seteditorsession(this._tabs[0",{"_index":616,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.sockets.push(socket",{"_index":1209,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":747,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.tab",{"_index":593,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":748,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.toastservice.toasterror(err",{"_index":1260,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":1426,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":1203,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":1202,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":403,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":1236,"title":{},"body":{"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.editortab",{"_index":1038,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.editortabs.map(editortab",{"_index":1039,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":1235,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":1187,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":963,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":968,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.us",{"_index":325,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.user.subscribe(us",{"_index":330,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetail",{"_index":332,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetails.email.includes('@byui.edu",{"_index":336,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.viewexpand",{"_index":633,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["those",{"_index":561,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["though",{"_index":586,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["thought",{"_index":1723,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["three",{"_index":732,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["through",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["throughout",{"_index":1612,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["time",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["titl",{"_index":413,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["titlecolor",{"_index":1340,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["toast",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1368,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1354,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1352,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1356,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":35,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice.toast('you\\'l",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["toggl",{"_index":535,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["togroup",{"_index":1269,"title":{},"body":{"classes/OptionModel.html":{}}}],["token",{"_index":1766,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["tool",{"_index":47,"title":{"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["tool'",{"_index":423,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["tool.icon",{"_index":405,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":1422,"title":{},"body":{"injectables/ToolService.html":{}}}],["tool.servic",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":406,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":1234,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool_log",{"_index":1730,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["toolcategori",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolid",{"_index":1200,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":1186,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toollog(data",{"_index":1748,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["toolpagemodul",{"_index":227,"title":{"modules/ToolPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{}}}],["toolselectioncompon",{"_index":210,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":34,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1438,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selecteddiscoveropt",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1321,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.fixedmessag",{"_index":1055,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":384,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toollist",{"_index":1176,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolservice.toolviewopen",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":956,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["tooltyp",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolview",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":211,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":1388,"title":{},"body":{"injectables/ToolService.html":{}}}],["top",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{}}}],["total",{"_index":656,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["track",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tri",{"_index":1205,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["true",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["two",{"_index":1626,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["type",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["typeicon",{"_index":944,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":977,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeof",{"_index":1360,"title":{},"body":{"injectables/ToastService.html":{}}}],["types/d3",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["types[this.issueitem.categori",{"_index":969,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typic",{"_index":1749,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["undefin",{"_index":777,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":496,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["underscor",{"_index":1599,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["unexpectedli",{"_index":1245,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["univers",{"_index":1520,"title":{},"body":{"index.html":{}}}],["untouch",{"_index":463,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["unus",{"_index":587,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["unwant",{"_index":1715,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["up",{"_index":542,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["updat",{"_index":531,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["uri",{"_index":745,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["url",{"_index":367,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["us",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["useabl",{"_index":999,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["user'",{"_index":307,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["user_log",{"_index":1726,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["userdetail",{"_index":288,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["useremail",{"_index":1164,"title":{},"body":{"injectables/KatanaService.html":{}}}],["useridtoken",{"_index":1204,"title":{},"body":{"injectables/KatanaService.html":{}}}],["userlog(data",{"_index":1750,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["util",{"_index":1607,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["valid",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["validators.requir",{"_index":1281,"title":{},"body":{"classes/OptionModel.html":{}}}],["valu",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["variabl",{"_index":1448,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{}}}],["variou",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["verifi",{"_index":279,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{}}}],["verifynewus",{"_index":1762,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["via",{"_index":795,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["view",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["view'},{'nam",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["view.component.css",{"_index":1284,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":1285,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":1283,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:13",{"_index":1431,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:20",{"_index":1433,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:21",{"_index":1434,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:25",{"_index":1301,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:27",{"_index":1432,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:29",{"_index":1300,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:33",{"_index":1298,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:39",{"_index":1288,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:48",{"_index":1302,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:49",{"_index":1299,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:60",{"_index":1297,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:67",{"_index":1289,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:75",{"_index":1290,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:84",{"_index":1292,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/opt",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":975,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":976,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":570,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{}}}],["viewchild('blueprint",{"_index":729,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('editor",{"_index":579,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["viewchild('issuedetail",{"_index":1023,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('searchbi",{"_index":730,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":731,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":727,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":728,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":962,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewexpand",{"_index":513,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["visibl",{"_index":637,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["void",{"_index":375,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wait",{"_index":1221,"title":{},"body":{"injectables/KatanaService.html":{}}}],["want",{"_index":1670,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["warn",{"_index":872,"title":{},"body":{"injectables/CourseService.html":{}}}],["wave",{"_index":1045,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["web",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket",{"_index":1169,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/discover?useridtoken=${useridtoken",{"_index":1208,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/fix?useridtoken=${useridtoken",{"_index":1251,"title":{},"body":{"injectables/KatanaService.html":{}}}],["well",{"_index":354,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["whatev",{"_index":551,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["whether",{"_index":435,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["whichev",{"_index":1550,"title":{},"body":{"index.html":{}}}],["white",{"_index":885,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/StatBadgeComponent.html":{}}}],["whitespac",{"_index":737,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["window",{"_index":537,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window.location.hostname.replace(/www",{"_index":1165,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.location.href",{"_index":1424,"title":{},"body":{"injectables/ToolService.html":{}}}],["window.location.href.includes('tool",{"_index":909,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["window.location.port",{"_index":1166,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":660,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1133,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["window['ace'].edit(this.editorel.nativeel",{"_index":609,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/edit_session').editsess",{"_index":582,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/searchbox",{"_index":589,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['html_beautify'](tab['htmlstr",{"_index":595,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["winter",{"_index":780,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["within",{"_index":485,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["without",{"_index":1122,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["word",{"_index":520,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["work",{"_index":1017,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["workaround",{"_index":1019,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["workflow",{"_index":1587,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}}}],["wrap",{"_index":632,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["wrapper",{"_index":1476,"title":{"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wrapper'",{"_index":1746,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wrapper.git",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["wrapper.j",{"_index":1735,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["written",{"_index":1761,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["ws",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["yellow",{"_index":1616,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'd",{"_index":1619,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'r",{"_index":1694,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["young",{"_index":1519,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main component for the entire application.\nIt holds the primary pieces that allow the user to\nnavigate from the top down.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor. This creates subscriptions to route changes to adjust values\nas needed. For example, if the user navigates to the tool view (i.e. they ran\na tool), then many values in various services are removed or reset to prevent\nconflicting values between services.\nThis will also retrieve the list of tools from the Katana service when it is\ncreated.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides toast notification functionality.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides Firebase authentication functionality.\nUsed in app.component.html (i.e. DO NOT DELETE).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { CourseService } from './course.service';\nimport { KatanaService } from './katana.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\nimport { AuthGuardService } from './authguard.service'; // Being used in app.component.html (i.e. DO NOT DELETE)\n\n/**\n * This is the main component for the entire application.\n * It holds the primary pieces that allow the user to\n * navigate from the top down.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /**\n     * Constructor. This creates subscriptions to route changes to adjust values\n     * as needed. For example, if the user navigates to the tool view (i.e. they ran\n     * a tool), then many values in various services are removed or reset to prevent\n     * conflicting values between services.\n     *\n     * This will also retrieve the list of tools from the Katana service when it is\n     * created.\n     *\n     * @param router Used to navigate the user as needed.\n     * @param courseService Provides information and management for selected courses.\n     * @param katanaService Provides functionality for making API calls to the Katana server.\n     * @param toolService Provides information and management for available tools.\n     * @param toastService Provides toast notification functionality.\n     * @param authGuardService Provides Firebase authentication functionality.\n     * Used in app.component.html (i.e. DO NOT DELETE).\n     */\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        private toolService: ToolService,\n        private toastService: ToastService,\n        private authGuardService: AuthGuardService) {\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false;\n                toolService.selectedDiscoverOptions = false;\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false;\n                });\n\n                // document.documentElement.style.setProperty(`--course-sidebar-width`, '112px');\n                // document.documentElement.style.setProperty(`--course-chip-width`, '92px');\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                if (!toolService.selectedTool) {\n                    router.navigate(['/']);\n                    return;\n                }\n\n                if (toolService.selectedDiscoverOptions === false) {\n                    router.navigate([`home/tools/${this.toolService.selectedTool.id}/options`]);\n                    toastService.toast('You\\'ll need to run the tool again to go back to the Issues page.');\n                }\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                    // document.documentElement.style.setProperty(`--course-sidebar-width`, '340px');\n                    // document.documentElement.style.setProperty(`--course-chip-width`, '330px');\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                const course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\nLogging you in...\nYou must log in with a BYUI Google account.\nIf this is your first time, speak with an Admin to get your account enabled.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Logging you in...You must log in with a BYUI Google account.If this is your first time, speak with an Admin to get your account enabled.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HomePageModule\n                            \n                            \n                                    SidebarModule\n                            \n                            \n                                    ToolPageModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport 'materialize-css';\nimport 'rxjs';\n\n/* Firebase */\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from './firebase.auth';\nimport { AuthGuardService } from './authguard.service';\n\n/* Modules */\nimport { SidebarModule } from './sidebar/sidebar.module';\nimport { HomePageModule } from './home-page/home-page.module';\nimport { ToolPageModule } from './tool-page/tool-page.module';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CategoriesComponent } from './home-page/categories/categories.component';\nimport { ToolViewComponent } from './tool-page/tool-view/tool-view.component';\nimport { ToolSelectionComponent } from './home-page/tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './home-page/options-view/options-view.component';\nimport { ErrorPageComponent } from './home-page/error-page/error-page.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: 'categories',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: 'home',\n        component: CategoriesComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/error',\n        component: ErrorPageComponent\n    },\n    {\n        path: 'home/tools/:tool_id/options',\n        component: OptionsViewComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools/:tool_id/issues',\n        component: ToolViewComponent,\n        canActivate: [AuthGuardService]\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        SidebarModule,\n        HomePageModule,\n        ToolPageModule,\n        HttpModule,\n        HttpClientModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFirestoreModule,\n        AngularFireAuthModule\n    ],\n    providers: [\n        AuthGuardService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authguard.service.ts\n        \n\n            \n                Description\n            \n            \n                Verifies the user is correctly logged in with a valid\nGoogle BYUI account. Redirects the user to the Google\nlogin page as needed. Provides validation for the user\nto access various routes.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Private\n                                userDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                retrieveToken\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authguard.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                angularfire2 - https://github.com/angular/angularfire2\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify location and navigate the user to new pages as needed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            \nUsed to prevent the user from navigating through Katana if they\nare not logged in with a valid google (byui) account.\n\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            \nRedirects the user to the google login page, where they sign in,\nand then are returned to Katana to have their credentials processed.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the user's idToken for Firebase, so requests can be validated on the\nserver.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            \nSigns the user out of Katana and redirects them to the Google login\npage.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:36\n                            \n                        \n\n                \n                    \n                        angularfire2 - https://github.com/angular/angularfire2\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:37\n                            \n                        \n\n                \n                    \n                        Used to verify location and navigate the user to new pages as needed\n*********************************************************************************\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:20\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDetails:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:25\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { User } from 'firebase';\nimport { auth } from 'firebase';\nimport { Observable } from 'rxjs';\n\n/**\n* Verifies the user is correctly logged in with a valid\n* Google BYUI account. Redirects the user to the Google\n* login page as needed. Provides validation for the user\n* to access various routes.\n*/\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private user: Observable;\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private userDetails: User = null;\n\n    /**\n     * Event emitted when auth status changes\n     */\n    @Output() authState = new EventEmitter();\n\n    /** *********************************************************************************\n     * @param afAuth angularfire2 - https://github.com/angular/angularfire2\n     * @param router Used to verify location and navigate the user to new pages as needed\n     ***********************************************************************************/\n    constructor(public afAuth: AngularFireAuth,\n        public router: Router) {\n        this.user = afAuth.authState;\n        this.authState.emit(false);\n\n        auth().getRedirectResult()\n            .catch(console.error);\n\n        this.user.subscribe(user => {\n            if (user) {\n                auth().updateCurrentUser(user);\n                this.userDetails = user;\n            } else if (!user) {\n                if (this.userDetails) {\n                    this.userDetails = null;\n                }\n                this.doGoogleLogin();\n            }\n            this.authState.emit(this.canActivate());\n            this.router.navigate(['/']);\n        });\n    }\n\n    /** *********************************************************************************\n     * Used to prevent the user from navigating through Katana if they\n     * are not logged in with a valid google (byui) account.\n     ***********************************************************************************/\n    canActivate(): boolean {\n        return (this.userDetails !== null && this.userDetails.email.includes('@byui.edu'));\n    }\n\n    /** *********************************************************************************\n     * Redirects the user to the google login page, where they sign in,\n     * and then are returned to Katana to have their credentials processed.\n     ***********************************************************************************/\n    doGoogleLogin() {\n        return new Promise((resolve, reject) => {\n            const provider = new auth.GoogleAuthProvider();\n            provider.addScope('profile');\n            provider.addScope('email');\n            auth().setPersistence(auth.Auth.Persistence.SESSION)\n                .then(() => {\n                    this.afAuth.auth\n                        .signInWithRedirect(provider)\n                        .catch(function (error) {\n                            console.error(error);\n                        });\n                });\n        });\n    }\n\n    /** *********************************************************************************\n     * Signs the user out of Katana and redirects them to the Google login\n     * page.\n     ***********************************************************************************/\n    signOut() {\n        return auth().signOut()\n            .then(this.doGoogleLogin)\n            .catch(console.error);\n    }\n\n    /** *********************************************************************************\n     * Retrieves the user's idToken for Firebase, so requests can be validated on the\n     * server.\n     ***********************************************************************************/\n    retrieveToken() {\n        return auth().currentUser.getIdToken(true)\n            .catch(console.error);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n\n\n    \n        Description\n    \n    \n        \nBuilds the breadcrumbs for navigation, as well as the feedback and\nuser details in the navigation bar.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                            \n                                closeModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:21\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify current location and navigate user to new page.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify currently selected tool.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Enables Sign Out button. Being used in \nbreadcrumbs.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            \nBuilds a URL, then navigates the router to it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nArray of each piece of the path to navigate to.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    boolean - Returns false to prevent full page reload.\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            \nCloses the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            \nOpens the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:21\n                            \n                        \n\n                \n                    \n                        \nUsed to open and close the modal for feedback.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:31\n                            \n                        \n\n                \n                    \n                        Used to verify currently selected tool.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { AuthGuardService } from '../../authguard.service'; // Being used in breadcrumbs.component.html (i.e. DO NOT DELETE)\nimport { MaterializeAction } from 'angular2-materialize';\n\n/** ******************************************************************\n * Builds the breadcrumbs for navigation, as well as the feedback and\n * user details in the navigation bar.\n ********************************************************************/\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\nexport class BreadcrumbsComponent {\n\n    /** ******************************************************************\n     * Used to open and close the modal for feedback.\n     ********************************************************************/\n    modalActions = new EventEmitter();\n\n    /** ******************************************************************\n     * Constructor\n     * @param router Used to verify current location and navigate user to new page.\n     * @param toolService Used to verify currently selected tool.\n     * @param authGuardService Enables Sign Out button. Being used in \n     * breadcrumbs.component.html (i.e. DO NOT DELETE)\n     ********************************************************************/\n    constructor(private router: Router,\n        public toolService: ToolService,\n        private authGuardService: AuthGuardService) { }\n\n    /** ******************************************************************\n     * Opens the feedback modal.\n     ********************************************************************/\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /** ******************************************************************\n     * Closes the feedback modal.\n     ********************************************************************/\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /** ******************************************************************\n     * Builds a URL, then navigates the router to it.\n     * @param pathPieces - Array of each piece of the path to navigate to.\n     * @returns boolean - Returns false to prevent full page reload.\n     ********************************************************************/\n    buildRouterLink(pathPieces) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n\n            Home\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    {{authGuardService.userDetails.displayName}}\n                \n                \n                    \n                \n                \n                    \n                        Sign Out\n                    \n                \n            \n\n            \n                \n                    feedback\n                \n            \n\n        \n    \n\n\n\n\n    \n        Loading...\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedTool.title}}                                                {{authGuardService.userDetails.displayName}}                                                                                                                                Sign Out                                                                                                feedback                                                    Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/categories/categories.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer for all available tool categories. Each Category is generated\nbased on the available tools.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/categories/categories.component.ts:14\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to generate each available category\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Verifies if course selection is open, \nso styling can be applied. Being used in \ncategories.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            \nThis sets the selected Category on the Tool service.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe category to be set as the selected category\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Returns false to prevent the entire page (just the router) from reloading\n\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:23\n                            \n                        \n\n                \n                    \n                        Used to generate each available category\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Being used in categories.component.html (i.e. DO NOT DELETE)\n\n/** **********************************************************\n * Container for all available tool categories. Each {@link Category} is generated\n * based on the available tools.\n ************************************************************/\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param toolService Used to generate each available category\n     * @param courseService Verifies if course selection is open, \n     * so styling can be applied. Being used in \n     * categories.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(public toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /** **********************************************************\n     * This sets the selected {@link Category} on the Tool service.\n     * @param {object} category - The category to be set as the selected category\n     * @returns {false} Returns false to prevent the entire page (just the router) from reloading\n     ************************************************************/\n    setSelectedCategory(category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n\n}\n\n    \n\n    \n        \n    \n        {{category.title}}\n        \n            \n                \n                    {{tool.icon}}\n                    {{tool.title}}\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{category.title}}                                                        {{tool.icon}}                    {{tool.title}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a category. Tools are categorized based\non their purpose. Each category is displayed on the\nhome page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MDIcon used to represent the category in the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the category \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The string used by tools to identify the category they belong to \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CodeEditorComponent.html":{"url":"components/CodeEditorComponent.html","title":"component - CodeEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CodeEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/code-editor/code-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-code-editor\n            \n\n            \n                styleUrls\n                code-editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./code-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _tabs\n                            \n                            \n                                activeTab\n                            \n                            \n                                editor\n                            \n                            \n                                editorEl\n                            \n                            \n                                viewExpanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditorSession\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchPhrase\n                            \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/code-editor/code-editor.component.ts:59\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        searchPhrase\n                    \n                    \n                        If certain key words should be highlighted by the editor's\nsearch functionality, this should be passed as an input as\na string. It will be converted into a regex no matter, so\na regex string (to be passed into the RegExp constructor) \ncan also be passed in.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabs\n                    \n                    \n                        The tabs to add to the code editor. This may include tabs\nlike \"Current HTML\" and \"Updated HTML\" to show the user how\nthe HTML will be changed by the tool.\n\n                            \n                            Type:    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandView\n                            \n                            \n                        \n                    \n                \n                \n                    \nexpandView()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Fired on component load, this sets up the editor, creates the tabs provided\nby the selected tool, creates the sessions for each tab, beautifies their code,\ninserts their code, and then sets the settings and options for the editor.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditorSession\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditorSession(tab: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Sets the editor's session to the selected tab's session\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The tab (and it's related info) to set as the\neditor's current session\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _tabs:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:59\n                            \n                        \n\n                \n                    \n                        Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\nthe passed in tabs don't store as references correctly, so adding\nthe session to them doesn't carry over to the rest of the methods.\nThis helps with those reference issues. This is set during the \"ngOnInit\"\nmethod.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeTab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeTab:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        The currently active tab on the tabs bar of the editor.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:38\n                            \n                        \n\n                \n                    \n                        The editor instance. This is set after it has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                        Element reference to the editor div itself so we can \ninitiate the Ace editor instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewExpanded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:50\n                            \n                        \n\n                \n                    \n                        Whether or not the editor is in \"edit\" mode. This just means that\nit is expanded, currently. Whether or not it can be edited is \ndetermined by the tab's \"readOnly\" property.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\n\n/**\n * Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n */\n@Component({\n    selector: 'app-code-editor',\n    templateUrl: './code-editor.component.html',\n    styleUrls: ['./code-editor.component.css']\n})\nexport class CodeEditorComponent implements OnInit {\n\n    /** \n     * The tabs to add to the code editor. This may include tabs\n     * like \"Current HTML\" and \"Updated HTML\" to show the user how\n     * the HTML will be changed by the tool.\n     */\n    @Input('tabs') tabs: any[];\n\n    /**\n     * If certain key words should be highlighted by the editor's\n     * search functionality, this should be passed as an input as\n     * a string. It will be converted into a regex no matter, so\n     * a regex string (to be passed into the RegExp constructor) \n     * can also be passed in.\n     */\n    @Input('searchPhrase') searchPhrase: string;\n\n    /**\n     * Element reference to the editor div itself so we can \n     * initiate the Ace editor instance.\n     */\n    @ViewChild('editor') editorEl: ElementRef;\n\n    /**\n     * The editor instance. This is set after it has been initialized.\n     */\n    editor: any;\n\n    /**\n     * The currently active tab on the tabs bar of the editor.\n     */\n    activeTab: any;\n\n    /**\n     * Whether or not the editor is in \"edit\" mode. This just means that\n     * it is expanded, currently. Whether or not it can be edited is \n     * determined by the tab's \"readOnly\" property.\n     */\n    viewExpanded: boolean = false;\n\n    /**\n     * Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\n     * the passed in tabs don't store as references correctly, so adding\n     * the session to them doesn't carry over to the rest of the methods.\n     * This helps with those reference issues. This is set during the \"ngOnInit\"\n     * method.\n     */\n    _tabs: any[] = [];\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Fired on component load, this sets up the editor, creates the tabs provided\n     * by the selected tool, creates the sessions for each tab, beautifies their code,\n     * inserts their code, and then sets the settings and options for the editor.\n     */\n    ngOnInit() {\n        // The EditSession class is used to spawn new sessions in the editor\n        let EditSession = window['ace'].require('ace/edit_session').EditSession;\n        // Allows Ctrl+F Search functionality (keep, even though it says the var is unused)\n        let searchBox = window['ace'].require('ace/searchbox');\n\n        // Save a correct reference to the tab objects that is safe to use\n        this._tabs = this.tabs;\n\n        // Create and add an editor session to each tab, beautify its code, and insert it\n        this._tabs.forEach(tab => {\n            let code = window['html_beautify'](tab['htmlString'] || ' '); // Beautifies the code\n            tab.session = new EditSession(code);\n            tab.session.setMode('ace/mode/html');\n            tab.session.setUseWrapMode(true);\n            tab.session.setUseWorker(false); // Disables the linter/syntax checker\n            tab.session.setTabSize(4); // Sets the tab size to 4 spaces\n        });\n\n        // Create the editor, set the options, and set the first session\n        this.editor = window['ace'].edit(this.editorEl.nativeElement);\n        this.editor.setOption(\"minLines\", 10);\n        this.editor.setOption(\"maxLines\", 10);\n        this.editor.setTheme('ace/theme/terminal');\n        this.editor.setReadOnly(true);\n        this.editor.setHighlightActiveLine(true);\n        this.setEditorSession(this._tabs[0]);\n    }\n\n    /**\n     * Sets the editor's session to the selected tab's session\n     * @param tab The tab (and it's related info) to set as the\n     * editor's current session\n     */\n    setEditorSession(tab) {\n        if (!tab.session) return;\n        this.editor.setReadOnly(tab.readOnly);\n        this.editor.setSession(tab.session);\n        this.activeTab = tab;\n\n        // This \"if\" prevents it from searching with an empty search phrase,\n        // which finds pretty much every empty character...\n        if (this.searchPhrase) {\n            // Converts the provided search phrase to a RegExp\n            let reg = new RegExp(this.searchPhrase, 'gi');\n            // Finds and highlights all matches to the RegExp\n            this.editor.findAll(reg, {\n                needle: reg,\n                wrap: true,\n                regExp: true\n            });\n        }\n    }\n\n    /**\n     * Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n     */\n    expandView() {\n        this.viewExpanded = !this.viewExpanded;\n        this.editor.setOption(\"maxLines\", this.viewExpanded ? 25 : 10);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{tab.title}}\n        \n\n        \n            {{activeTab && activeTab.readOnly ? 'visibility' : 'code'}}\n        \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{tab.title}}                            {{activeTab && activeTab.readOnly ? \\'visibility\\' : \\'code\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CodeEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single course \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                        platform\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The sub-account the course is under in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether or not the course is a Blueprint course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The code for the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an error is returned by a tool, it is attached to the course here \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course's ID in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current instructor for the course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The IssueItems for this course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The platform it belongs to (online, campus, pathway) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the course is currently be processed through a tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The term the course is set to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to the course in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseChipComponent.html":{"url":"components/CourseChipComponent.html","title":"component - CourseChipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseChipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-chip/course-chip.component.ts\n\n\n    \n        Description\n    \n    \n        Represents a Course to be acted on. Generated based on the list of \nCourses stored in CourseService.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-chip\n            \n\n            \n                styleUrls\n                course-chip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-chip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildInstructorName\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-chip/course-chip.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify the currently selected course\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify if the tool view is open.\nBeing used in course-chip.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        course\n                    \n                    \n                        The Course this chip represents\n\n                            \n                            Type:    Course\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildInstructorName\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildInstructorName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Formats the instructor's name to fit on the chip appropriately.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The formatted instructor name\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nIssue status to match\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | string\n\n                            \n                                \n                                    The total number of issues matching the provided status.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:28\n                            \n                        \n\n                \n                    \n                        Allows this component to identify the currently selected course\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service'; // Being used in course-chip.component.html (i.e. DO NOT DELETE)\nimport { Course } from '../../interfaces';\n\n/**\n * Represents a {@link Course} to be acted on. Generated based on the list of \n * {@link Course}s stored in {@link CourseService}.\n */\n@Component({\n    selector: 'app-course-chip',\n    templateUrl: './course-chip.component.html',\n    styleUrls: ['./course-chip.component.css']\n})\nexport class CourseChipComponent {\n\n    /**\n     * The {@link Course} this chip represents\n     */\n    @Input() course: Course;\n\n    /**\n     * Constructor\n     * @param courseService Allows this component to identify the currently selected course\n     * @param toolService Allows this component to identify if the tool view is open.\n     * Being used in course-chip.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService) { }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     */\n    openCourse(): void {\n        window.open('https://byui.instructure.com/courses/' + this.course.id, '_blank');\n    }\n\n    /**\n     * Formats the instructor's name to fit on the chip appropriately.\n     * @returns {string} The formatted instructor name\n     */\n    buildInstructorName(): string {\n        let names = this.course.instructor.replace(/,/, '').split(' ');\n        var instructorName = this.course.instructor === 'none' ? 'No Instructor' : this.course.instructor;\n        if (names.length > 1 && this.course.instructor.includes(',')) {\n            instructorName = `${names[1][0]}. ${names[0]}`;\n        } else if (names.length > 1) {\n            instructorName = `${names[0][0]}. ${names[1]}`;\n        }\n        return instructorName;\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {string} status - Issue status to match\n     * @returns {number} The total number of issues matching the provided status.\n     */\n    getIssueCount(status): number | string {\n        if (!this.course.issueItems) return 0;\n        if (this.course.error) return 'E';\n        return this.course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n\n        \n            {{course.course_code}}\n            \n                {{buildInstructorName()}}\n            \n        \n\n        \n            \n                {{getIssueCount()}}\n            \n        \n        .\n    \n\n    \n        clear\n    \n    \n        open_in_new\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{course.course_code}}                            {{buildInstructorName()}}                                                        {{getIssueCount()}}                            .                clear                open_in_new    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseChipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-selection/course-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Provides the user management for the selected courses, including a course search\noverlay to add/remove courses.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            This retrieves all courses that match the given parameters from Canvas \nand returns them as an array of course objects that have been modified \nby us. The returned results will populate the 'courseResults' array and \nwill display in the results table in the course-selection html file.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the selected course from courseResults\nis already in the courses array in courseService.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course that is being checked\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether the course is already added\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Sorts the courseResults array according to the course attribute defined by 'param'\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The object key to be sorted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    The new position of the object in the array\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Element reference to the blueprint filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                        Results of a search \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:31\n                            \n                        \n\n                \n                    \n                        Holds what the last search was sorted by \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        Element reference to the search-by filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:28\n                            \n                        \n\n                \n                    \n                        Whether or not a search is currently processing \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:25\n                            \n                        \n\n                \n                    \n                        Element reference to the search text input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:17\n                            \n                        \n\n                \n                    \n                        Element reference to the sub-account filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:19\n                            \n                        \n\n                \n                    \n                        Element reference to the term filter input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { KatanaService } from '../../katana.service';\nimport { CourseService } from '../../course.service';\nimport { Course } from '../../interfaces';\n\n/**\n * Provides the user management for the selected courses, including a course search\n * overlay to add/remove courses.\n */\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent {\n    /** Element reference to the sub-account filter input */\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    /** Element reference to the term filter input */\n    @ViewChild('term') private term: ElementRef;\n    /** Element reference to the blueprint filter input */\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    /** Element reference to the search-by filter input */\n    @ViewChild('searchBy') private searchBy: ElementRef;\n    /** Element reference to the search text input */\n    @ViewChild('searchText') private searchText: ElementRef;\n\n    /** Whether or not a search is currently processing */\n    searching: boolean = false;\n\n    /** Holds what the last search was sorted by */\n    lastSortedBy: string;\n\n    /** Results of a search */\n    courseResults: Course[] = [];\n\n    /**\n     * Constructor\n     * @param {KatanaService} katanaService Provides functionality for making API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     */\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /**\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     */\n    async getCourses() {\n        // Canvas makes you have an input of at least three characters to use the search_term in the API\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            // Replace any whitespaces with '%20' for the query parameter\n            var searchText = this.searchText.nativeElement.value.replace(/\\s/g, '%20');\n\n            // Set the loading circle to display before retrieving the courses\n            this.searching = true;\n\n            // Send the search parameters to the katana service to build the correct URI\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchText: searchText,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you \n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchText === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        }\n    }\n\n    /**\n     * Sorts the courseResults array according to the course attribute defined by 'param'\n     * @param {string} param The object key to be sorted\n     * @returns {number} The new position of the object in the array\n     */\n    sortBy(param) {\n        // If they click on the same category more than once, it will reverse the order of the results\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        // Sort numerically \n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            // Sort alphabetically\n            this.courseResults.sort((a, b) => {\n                let name1 = a[param].toUpperCase();\n                let name2 = b[param].toUpperCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /**\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course The course that is being checked\n     * @returns {boolean} Whether the course is already added\n     */\n    isAdded(course) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n}\n\n    \n\n    \n        \n  Course Selection\n  \n    \n      \n        Sub-Account\n          \n             -->\n            Development\n            Campus\n            Pathway\n            All\n          \n        \n        Term\n          \n             -->\n            Fall\n            Winter\n            Spring\n            Master Courses\n            All\n          \n        \n        Blueprint\n          \n             -->\n            True\n            False\n            All\n          \n        \n        Search By\n          \n            Instructor\n            Course\n          \n        \n        \n          Search Term\n          \n        \n      \n      Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n      \n        \n          \n            +/-\n            Name\n            Code\n            Instructor\n            Account\n            Term\n            Blueprint\n            ID\n            Open in Canvas\n          \n        \n        \n          \n            \n              \n                {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n              \n              {{course.course_name}}\n              {{course.course_code}}\n              {{course.instructor}}\n              {{course.account}}\n              {{course.term}}\n              {{course.blueprint}}\n              {{course.id}}\n              \n                \n                  open_in_new\n                \n              \n            \n          \n          \n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              Searching ...\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Course Selection                    Sub-Account                       -->            Development            Campus            Pathway            All                          Term                       -->            Fall            Winter            Spring            Master Courses            All                          Blueprint                       -->            True            False            All                          Search By                      Instructor            Course                                    Search Term                              Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                                    +/-            Name            Code            Instructor            Account            Term            Blueprint            ID            Open in Canvas                                                                              {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                            {{course.course_name}}              {{course.course_code}}              {{course.instructor}}              {{course.account}}              {{course.term}}              {{course.blueprint}}              {{course.id}}                                                open_in_new                                                                                                                                                                                                                                                                                                                                                              Searching ...                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides information and management for a variety of things, but mainly the\ncourses the user selects via the CourseSelectionComponent. Also provides\nfunctionality for styling and counts based on Courses' IssueItems.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getBackgroundColorClasses\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssueCount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:47\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Adds a course to the list of currently selected courses. This\nwill also add and remove them from the user's local storage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBackgroundColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBackgroundColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:155\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the background color for an issue card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:92\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for a single course.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:122\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the left of an issue on\na card. It is determined by the status of the icon. (i.e. \"fixed\")\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The text used to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:139\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon color for the status icon of an\nindividual issue, as shown on an IssueItem card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:110\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for all courses.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Removes a course from the list of currently selected courses.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:22\n                            \n                        \n\n                \n                    \n                        The currently selected Course.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:32\n                            \n                        \n\n                \n                    \n                        Whether or not the CourseSelectionComponent is open.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:17\n                            \n                        \n\n                \n                    \n                        Holds all of the currently selected Courses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:27\n                            \n                        \n\n                \n                    \n                        The currently selected IssueItem.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:34\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:45\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Course, IssueItem } from './interfaces';\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen: boolean = false;\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        sessionStorage.selectedCourse = course.id;\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        } else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                const issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce(acc => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        const statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        };\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        const statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        };\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        const statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        };\n        return statusColors[status];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSidebarComponent.html":{"url":"components/CourseSidebarComponent.html","title":"component - CourseSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-sidebar/course-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        The sidebar containing selected course management and the\nCourseSelectionComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-sidebar\n            \n\n            \n                styleUrls\n                course-sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                courseOverlay\n                            \n                            \n                                removeAll\n                            \n                            \n                                setSelectedCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\nBeing used in course-sidebar.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Toggles the CourseSelectionComponent overlay open and closed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Removes all courses from the sidebar. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course to the one provided.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service'; // Being used in course-sidebar.component.html (i.e. DO NOT DELETE)\nimport { Course } from '../../interfaces';\n\n/**\n * The sidebar containing selected course management and the\n * {@link CourseSelectionComponent}.\n */\n@Component({\n    selector: 'app-course-sidebar',\n    templateUrl: './course-sidebar.component.html',\n    styleUrls: ['./course-sidebar.component.css']\n})\nexport class CourseSidebarComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * Being used in course-sidebar.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService) { }\n\n    /**\n     * Toggles the {@link CourseSelectionComponent} overlay open and closed.\n     */\n    courseOverlay() {\n        // cast the returned Element object to an HTMLElement object\n        let overlay: HTMLElement = document.querySelector('app-course-selection');\n\n        // toggle add the 'open' class to the app-course-selection component\n        if (overlay.className === 'open') {\n            overlay.className = 'close';\n        } else if (overlay.className === 'close') {\n            overlay.className = 'open';\n        } else {\n            overlay.style.display = 'block';\n            overlay.className = 'open';\n        }\n\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n        // let newWidth = this.courseService.courseSelectionOpen ? '207px' : '112px';\n        // document.documentElement.style.setProperty(`--course-sidebar-width`, newWidth);\n    }\n\n    /**\n     * Sets the currently selected course to the one provided.\n     * @param {Course} course The course to set as the currently selected course.\n     */\n    setSelectedCourse(course: Course) {\n        if (window.location.href.includes('tool-view')) {\n            this.courseService.selectedCourse = course;\n        }\n    }\n\n    /** Removes all courses from the sidebar. */\n    removeAll() {\n        this.courseService.courses.forEach(c => this.courseService.removeCourse(c));\n    }\n}\n    \n\n    \n        \n    Courses\n    \n        Remove All\n        \n    \n\n    \n        \n            {{courseService.courseSelectionOpen ? 'close' : 'add'}}\n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Courses            Remove All                                    {{courseService.courseSelectionOpen ? \\'close\\' : \\'add\\'}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's discovery mode.\nDisplayed on the options page for the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not it is a required option on the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorTab.html":{"url":"interfaces/EditorTab.html","title":"interface - EditorTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tab to be generated on the HTML editor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        htmlKey\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlKey\n                                    \n                                \n                                \n                                    \n                                        htmlKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use to grab the html string off the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Determines if the user can edit the code \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tab \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/error-page/error-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error-page.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/error-page/error-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Collects errors in Katana and allows\nthem to be read and displayed to the user. Being used in \nerror-page.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { KatanaService } from '../../katana.service'; // Being used in error-page.component.html (i.e. DO NOT DELETE)\n\n@Component({\n    selector: 'app-error-page',\n    templateUrl: './error-page.component.html',\n    styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent {\n    \n    /** **********************************************************\n     * Constructor\n     * @param katanaService Collects errors in Katana and allows\n     * them to be read and displayed to the user. Being used in \n     * error-page.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(private katanaService: KatanaService) { }\n\n}\n\n    \n\n    \n        \n\n    {{katanaService.error ? katanaService.error.message : 'There isn\\'t any error information available to display'}}\n\n    Status: {{katanaService.error ? katanaService.error.status : '---'}}\n\n    If this error persists, please contact a Katana admin.\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{katanaService.error ? katanaService.error.message : \\'There isn\\\\'t any error information available to display\\'}}    Status: {{katanaService.error ? katanaService.error.status : \\'---\\'}}    If this error persists, please contact a Katana admin.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FixOption.html":{"url":"interfaces/FixOption.html","title":"interface - FixOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FixOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's fix mode.\nDisplayed on each issue discovered by the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the option is required in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n  Modules\n  HomePageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home-page/home-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BreadcrumbsComponent\n                            \n                            \n                                    ErrorPageComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\n\nimport { CategoriesComponent } from './categories/categories.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorPageComponent } from './error-page/error-page.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        BreadcrumbsComponent,\n        FormsModule,\n        ReactiveFormsModule,\n        ErrorPageComponent\n    ],\n    declarations: [\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent,\n        ErrorPageComponent\n    ]\n})\nexport class HomePageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single issue in an IssueItem. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        formGroup\n                                \n                                \n                                        html\n                                \n                                \n                                            Optional\n                                        optionModel\n                                \n                                \n                                            Optional\n                                        optionValues\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tempValues\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object containing issue-specific details \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML string used to display the contents of the issue in its IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                    \n                                \n                                \n                                    \n                                        formGroup:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {@link FormGroup} generated for the issue's {@link FixOption}s \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If included, this is the HTML for the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionModel\n                                    \n                                \n                                \n                                    \n                                        optionModel:     OptionModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The OptionModel used to generated any FixOptions used by the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionValues\n                                    \n                                \n                                \n                                    \n                                        optionValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The results of form generated by the above OptionModel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the issue (untouched, approved, skipped, fixed, failed) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tempValues\n                                    \n                                \n                                \n                                    \n                                        tempValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to store the current state of the form to restore it on page reload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the issue \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-card/issue-card.component.ts\n\n\n    \n        Description\n    \n    \n        Manages the display for a single IssueItem.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                        The IssueItem used by this component.\n\n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                        The position of the component in the IssueListComponent.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the top left of a card.\nIt is based on the IssueItem's item_type property, or the type of\nthe item in Canvas. (i.e. Page)\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The icon title to use to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            This class implements AfterViewInit, which runs after the element\nis rendered completely on the page. This is so we can add the tooltip\ndata correctly to the type icon.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the element in the view for this component that\ncontains it's item type icon (ex. Page, Discussion, Quiz).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Manages the display for a single {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    /**\n     * The {@link IssueItem} used by this component.\n     */\n    @Input('issueItem') issueItem: IssueItem;\n    /**\n     * The position of the component in the {@link IssueListComponent}.\n     */\n    @Input('position') position: number;\n    /**\n     * Reference to the element in the view for this component that\n     * contains it's item type icon (ex. Page, Discussion, Quiz).\n     */\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n\n    /**\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly to the type icon.\n     */\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /**\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     * @returns {string} The icon title to use to display the icon.\n     */\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-container/issue-container.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the display of a single Issue.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                issueDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEditorTabs\n                            \n                            \n                                getButtonClasses\n                            \n                            \n                                isFixed\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                setIssueStatus\n                            \n                            \n                                showEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-container/issue-container.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-container.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of the item's issues array the issue is at.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue attached to the display.\n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildEditorTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildEditorTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Using the {@link Tab}s provided by the Node Tool, builds\nuseable tab objects for each issue.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The tabs to use to build the editor instance.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Determines the classes used to style buttons based on the\ncurrent status of the issue they belong to.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                What status the issue current is.\n\n                                                        \n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Either \"button\" or \"icon\".\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFixed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Returns whether or not the item's status is fixed or failed.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not this issue's status is fixed or failed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Fired when the component is intialized, this manages the item's display.\nIt inserts the form for the Issue's FixOptions if available.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(optionKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Manages the validity of the form on each keystroke.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        optionKey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The key of the option this came from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Sets the status of the issue.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new status to set the issue to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:139\n                            \n                        \n\n\n                \n                    \n                            Since Object.keys does not work in angular templating, this is\na workaround. It checks if the issue has any HTML to display in\nthe editor. Used by the app-code-editor tag to determine if it\nshould display.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:29\n                            \n                        \n\n                \n                    \n                        Element reference to the card containing details about the issue.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-container.component.html (i.e. DO NOT DELETE)\nimport { ToolService } from '../../tool.service';\nimport { Issue } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the display of a single {@link Issue}.\n */\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    /**\n     * The issue attached to the display.\n     */\n    @Input('issue') issue: Issue;\n\n    /**\n     * The index of the item's issues array the issue is at.\n     */\n    @Input('index') index: number;\n\n    /**\n     * Element reference to the card containing details about the issue.\n     */\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-container.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(private toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /**\n     * Fired when the component is intialized, this manages the item's display.\n     * It inserts the form for the {@link Issue}'s {@link FixOption}s if available.\n     */\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n        this.issue.optionModel = new OptionModel(this.toolService.selectedTool.fixOptions);\n        this.issue.formGroup = this.issue.optionModel.toGroup();\n\n        // Update option values if there are values saved for any options\n        if (this.issue.tempValues) {\n            Object.keys(this.issue.tempValues).forEach(optionKey => {\n                let control = this.issue.formGroup.get(optionKey);\n                control.setValue(this.issue.tempValues[optionKey], { onlySelf: true });\n                control.updateValueAndValidity();\n            });\n        }\n    }\n\n    /**\n     * Using the {@link Tab}s provided by the Node Tool, builds\n     * useable tab objects for each issue.\n     * @returns {Object[]} The tabs to use to build the editor instance.\n     */\n    buildEditorTabs() {\n        if (!this.toolService.selectedTool.editorTabs) return;\n        return this.toolService.selectedTool.editorTabs.map(editorTab => {\n            return {\n                title: editorTab.title,\n                htmlString: this.issue.html[editorTab.htmlKey],\n                readOnly: editorTab.readOnly\n            }\n        });\n    }\n\n    /**\n     * Sets the status of the issue.\n     * @param newStatus The new status to set the issue to.\n     */\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    /**\n     * Determines the classes used to style buttons based on the\n     * current status of the issue they belong to.\n     * @param {string} desiredStatus What status the issue current is.\n     * @param {string} elType Either \"button\" or \"icon\".\n     * @returns {string} The classes to apply to the element.\n     */\n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn white';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2'\n        }\n        return classes;\n    }\n\n    /**\n     * Manages the validity of the form on each keystroke.\n     * @param optionKey The key of the option this came from.\n     */\n    onChange(optionKey) {\n        if (['untouched', 'fixed', 'failed'].includes(this.issue.status)) {\n            this.issue.status = 'untouched';\n        }\n        if (!this.issue.tempValues) {\n            this.issue.tempValues = {};\n        }\n        this.issue.tempValues[optionKey] = this.issue.formGroup.value[optionKey];\n    }\n\n    /**\n     * Returns whether or not the item's status is fixed or failed.\n     * @returns {boolean} Whether or not this issue's status is fixed or failed.\n     */\n    isFixed() {\n        return this.issue.status === 'fixed' || this.issue.status === 'failed';\n    }\n\n    /**\n     * Since Object.keys does not work in angular templating, this is\n     * a workaround. It checks if the issue has any HTML to display in\n     * the editor. Used by the app-code-editor tag to determine if it\n     * should display.\n     */\n    showEditor() {\n        return Object.keys(this.issue.html).length > 0;\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{issue.title}}\n        \n\n        \n            \n                {{option.title}}\n                {{option.description}}\n                \n\n                    \n                    \n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n    \n\n    \n    \n\n        \n            \n                {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n            \n            \n                block\n            \n            {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n        \n\n        \n            \n                {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n            \n\n            {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n        \n\n        \n            FIXED {{toolService.selectedTool.fixedMessage ? ' - ' + toolService.selectedTool.fixedMessage : ''}}\n        \n        \n            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n        \n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{issue.title}}                                            {{option.title}}                {{option.description}}                                                                                                                                                                            {{choice.text}}                                                                                                                    {{choice.text}}                                                                                                                                                    {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                                        block                        {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                                            {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}                        {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}                            FIXED {{toolService.selectedTool.fixedMessage ? \\' - \\' + toolService.selectedTool.fixedMessage : \\'\\'}}                            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-details/issue-details.component.ts\n\n\n    \n        Description\n    \n    \n        Container for all IssueContainerComponents used to display\nissues within the currently selected IssueItem.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-details/issue-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-details/issue-details.component.ts:19\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-details.component.html (i.e. DO NOT DELETE)\n\n/**\n * Container for all {@link IssueContainerComponent}s used to display\n * issues within the currently selected {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-details.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Issues\n    \n    {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents an item in Canvas, such as a page or quiz. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category the item belongs to (pages, quizzes, moduleItems, etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course ID the item belongs to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Issues discovered by a tool within this item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content ID of the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to view the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the item in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-list/issue-list.component.ts\n\n\n    \n        Description\n    \n    \n        Display for the list of IssueItems in the currently selected course.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-list/issue-list.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-list.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:18\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\nBeing used in issue-list.component.html (i.e. DO NOT DELETE)\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-list.component.html (i.e. DO NOT DELETE)\n\n/**\n * Display for the list of {@link IssueItem}s in the currently selected course.\n */\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\nexport class IssueListComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-list.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process.\n            Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process.            Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-nav/issue-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Container for managing various actions on the tool view page,\nsuch as the \"Fix All Approved\" button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                downloadIssues\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Downloads a CSV to the user's computer containing all of the\ncurrently displayed issues.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Returns the user the IssueItems belonging to the provided course.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to retrieve the IssueItems from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The IssueItems belonging to the provided course.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course and currently selected IssueItem.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The issue to use to set the currently selected IssueItem.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:34\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:33\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { csvFormatRows } from 'd3-dsv';\n\n/**\n * Container for managing various actions on the tool view page,\n * such as the \"Fix All Approved\" button.\n */\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param katanaService Provides functionality to make API calls to the Katana server.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService) { }\n\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Returns the user the {@link IssueItem}s belonging to the provided course.\n     * @param course The course to retrieve the IssueItems from.\n     * @returns {IssueItem[]} The IssueItems belonging to the provided course.\n     */\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    /**\n     * Sets the currently selected course and currently selected {@link IssueItem}.\n     * @param course The course to set as the currently selected course.\n     * @param issue The issue to use to set the currently selected IssueItem.\n     */\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n\n    /**\n     * Downloads a CSV to the user's computer containing all of the\n     * currently displayed issues.\n     */\n    downloadIssues() {\n        let csvReport = '';\n        this.courseService.courses.forEach((course, i) => {\n            course.issueItems.forEach((issueItem, j) => {\n                if (i  {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    }))) + '\\n';\n                } else {\n                    // Make the log without the header\n                    csvReport += csvFormatRows(issueItem.issues.map(issue => {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    })) + '\\n';\n                }\n            });\n        });\n\n        // Setup the link to download the csv report\n        let fileName = 'csvReport.csv';\n        let a = document.getElementById(\"download\");\n        var blob = new Blob([csvReport], { type: \"octet/stream\" });\n        var url = window.URL.createObjectURL(blob);\n\n        a.href = url;\n        a.download = fileName;\n    }\n}\n    \n\n    \n        \n\n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n\n    \n    \n        \n            \n                cloud_download\n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                     -->\n                \n            \n        \n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    cloud_download                Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                     -->                                                    Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/katana.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides access to make calls to the Katana server.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                serverDomain\n                            \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                errorHandler\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                            \n                                logUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, authGuardService: AuthGuardService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/katana.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nCurrently used to retrieve basic data from the server.\n\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information about available tools on the server.\n\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information and management for the currently selected courses.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to navigate the user as needed.\n\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides toast functionality.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:131\n                            \n                        \n\n\n                \n                    \n                            Runs a tool on the server in discovery mode, then returns the issue items discovered.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items discovered by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nerrorHandler(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:308\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:215\n                            \n                        \n\n\n                \n                    \n                            Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items fixed by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves a list of courses from Canvas.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the list of tools from the server.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logUserStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogUserStatus(userEmail: string, message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:116\n                            \n                        \n\n\n                \n                    \n                            Has the server log when a user's auth status changes (log in, log out, etc.)\nDEPRECATED\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEmail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     Error\n\n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:26\n                            \n                        \n\n                \n                    \n                        If an error is returned by the server, it is stored here for public access.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverDomain:     \n\n                    \n                \n                    \n                        \n                            Default value : window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:21\n                            \n                        \n\n                \n                    \n                        Handles formatting the correct URL for the web sockets.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:59\n                            \n                        \n\n                \n                    \n                        Currently open web sockets.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService } from './course.service';\nimport { ToolService } from './tool.service';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\nimport { auth, database } from 'firebase';\nimport { AuthGuardService } from './authguard.service';\n\n/**\n * Provides access to make calls to the Katana server.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class KatanaService {\n\n    /**\n     * Handles formatting the correct URL for the web sockets.\n     */\n    serverDomain = window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '');\n\n    /**\n     * If an error is returned by the server, it is stored here for public access.\n     */\n    error: Error;\n\n    /**\n     * Constructor\n     * @param http - Currently used to retrieve basic data from the server.\n     * @param toolService - Provides information about available tools on the server.\n     * @param courseService  - Provides information and management for the currently selected courses.\n     * @param router - Used to navigate the user as needed.\n     * @param toastService - Provides toast functionality.\n     */\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private authGuardService: AuthGuardService,\n        private toastService: ToastService) {\n\n        // Listens to changes in the auth state, and if the user is valid,\n        // it retrieves the list of tools from the server\n        authGuardService.authState.subscribe(state => {\n            if (state) {\n                this.getToolList()\n                    .catch(console.error);\n            } else {\n                toolService.toolList = [];\n            }\n        });\n\n    }\n\n    /**\n     * Currently open web sockets.\n     */\n    sockets: WebSocket[] = [];\n\n    /** ***************************************************************\n     * Retrieves the list of tools from the server.\n     *****************************************************************/\n    getToolList() {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('ToolList: User is not authenticated.'));\n            }\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.get(`/api/tool-list?userIdToken=${userIdToken}`).subscribe(\n                        (toolList: any): any => {\n                            this.toolService.toolList = toolList;\n                            resolve();\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n\n        });\n    }\n\n    /** ***************************************************************\n     * Retrieves a list of courses from Canvas.\n     *****************************************************************/\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Course Search: User is not authenticated.'));\n            }\n            const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.post(`/api/course-retrieval?userIdToken=${userIdToken}`, body, { headers: headers }).subscribe(\n                        (data) => {\n                            resolve(data);\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n        });\n    }\n\n    /**\n     * Has the server log when a user's auth status changes (log in, log out, etc.)\n     * DEPRECATED\n     */\n    logUserStatus(userEmail: string, message: string) {\n        const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        headers.append('Content-Type', 'application/json');\n\n        this.http.post('/api/user-status', { userEmail, message }, { headers: headers }).subscribe(\n            () => { },\n            this.errorHandler);\n    }\n\n    /**\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     */\n    discoverIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Discover: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            let completed = 0;\n\n            let userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/discover?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            /* Normally, you would just listen for the 'open' event and start sending messages\n            to the server. However, the auth middleware on the server causes a delay that\n            prevents the event listeners for each particular web socket from being set up. The\n            messages sent immediately when the web socket are opened are received, but never\n            handled. Instead, it is set up here to wait for the server to tell the client that\n            it is good to go before it starts sending messages. */\n            socket.addEventListener('message', (event) => {\n                const data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    courses.forEach(course => {\n                        // Set the course processing\n                        course.processing = true;\n                        // Remove any pre-existing error\n                        delete course.error;\n\n                        let data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    const course = data;\n\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === courses.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    /**\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     */\n    fixIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Fix: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            const fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            let userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            let completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/fix?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('message', (event) => {\n                const data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    fixables.forEach(course => {\n                        course.processing = true;\n                        // Save the option values for each issue, but remove the formGroup and questionModel\n                        course.issueItems.forEach(issueItem => {\n                            issueItem.issues.forEach(issue => {\n                                if (issue.formGroup) {\n                                    issue.optionValues = issue.formGroup.value;\n                                    delete issue.formGroup;\n                                    delete issue.questionModel;\n                                }\n                            });\n                        });\n\n                        let data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    const course = data;\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === fixables.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    errorHandler(e) {\n        console.error(e);\n        this.error = e;\n        this.router.navigate(['home', 'error']);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes.ts\n        \n\n            \n                Description\n            \n            \n                Helper for building a reactive form. Used to create the\n{@link FormGroup} and {@link FormControl}s needed for\nboth the {@link OptionsViewComponent} and the options on\neach {@link IssueContainerComponent}.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Options to build the form from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                        Options to build the form from.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes.ts:27\n                            \n                        \n\n\n                \n                    \n                            Takes the provided options and puts them into a new {@link FormGroup}.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormControl, Validators, FormGroup } from '@angular/forms';\n\n/**\n * Helper for building a reactive form. Used to create the\n * {@link FormGroup} and {@link FormControl}s needed for\n * both the {@link OptionsViewComponent} and the options on\n * each {@link IssueContainerComponent}.\n */\nexport class OptionModel {\n\n    /**\n     * Options to build the form from.\n     */\n    options = [];\n\n    /**\n     * Constructor\n     * @param options Options to build the form from.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Takes the provided options and puts them into a new {@link FormGroup}.\n     */\n    toGroup() {\n        const group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/options-view/options-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the options page. Holds all related\noptions components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                modalIsOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodalIsOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Determines the open/close status of the modal.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the modal is currently open.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Actions taken when the user clicks the \"Run Tool\" button.\nGathers up the answers on the options form, then submits\nthem to the Katana Service to run the tool in discovery mode.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:33\n                            \n                        \n\n                \n                    \n                        The {@link formGroup} to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:49\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:29\n                            \n                        \n\n                \n                    \n                        The OptionModel to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        The options to display on the page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:48\n                            \n                        \n\n                \n                    \n                        Provides information and management for available courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { FormGroup } from '@angular/forms';\nimport { DiscoverOption } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the options page. Holds all related\n * options components.\n */\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\nexport class OptionsViewComponent {\n\n    /**\n     * The options to display on the page.\n     */\n    options: DiscoverOption[];\n    /**\n     * The {@link OptionModel} to use for the form.\n     */\n    optionModel: OptionModel;\n    /**\n     * The {@link formGroup} to use for the form.\n     */\n    formGroup: FormGroup;\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param {ToolService} toolService Provides information and management for available courses.\n     * @param {KatanaService} katanaService Provides functionality to make API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     * @param {Router} router Used to navigate the user as needed.\n     */\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.optionModel = new OptionModel(this.toolService.selectedTool.discoverOptions);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Determines the open/close status of the modal.\n     * @returns {boolean} Whether or not the modal is currently open.\n     */\n    modalIsOpen(): boolean {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    /**\n     * Actions taken when the user clicks the \"Run Tool\" button.\n     * Gathers up the answers on the options form, then submits\n     * them to the Katana Service to run the tool in discovery mode.\n     */\n    onSubmit(): void {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        var options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        let categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n}\n    \n\n    \n        \n    \n\n        \n            \n                Options\n                \n                    {{toolService.selectedTool.title}}\n                \n\n                \n                    Description\n                    {{toolService.selectedTool.description}}\n                \n\n                \n                    Categories\n                    \n                        \n                            \n                            {{category}}\n                        \n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    arrow_back\n    \n        Click here to Add Courses\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Options                                    {{toolService.selectedTool.title}}                                                    Description                    {{toolService.selectedTool.description}}                                                    Categories                                                                                                    {{category}}                                                                                                {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice}}                                                                                                                                        {{choice}}                                                                                                                                Cancel                Run Tool                                    No Courses Selected        You must select at least one course before continuing.                Got it!        arrow_back            Click here to Add Courses    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarModule.html":{"url":"modules/SidebarModule.html","title":"module - SidebarModule","body":"\n                   \n\n\n\n\n  Modules\n  SidebarModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\n\n\nSidebarModule\n\nSidebarModule\n\nSidebarModule -->\n\nCourseChipComponent->SidebarModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nSidebarModule -->\n\nCourseSelectionComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nSidebarModule -->\n\nCourseSidebarComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent \n\nCourseSidebarComponent \n\nCourseSidebarComponent  -->\n\nSidebarModule->CourseSidebarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/sidebar/sidebar.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseChipComponent\n                            \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseSidebarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CourseSidebarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\n\nimport { CourseSidebarComponent } from './course-sidebar/course-sidebar.component';\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseChipComponent } from './course-chip/course-chip.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule\n    ],\n    exports: [\n        CourseSidebarComponent\n    ],\n    declarations: [\n        CourseSidebarComponent,\n        CourseSelectionComponent,\n        CourseChipComponent\n    ]\n})\nexport class SidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/stat-badge/stat-badge.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a single number and title in a pill container.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                            \n                                titleColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                        The side of the pill the number should be display on.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                        The number to display.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                        The title to display on the pill.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleColor\n                    \n                    \n                        The color of the title.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'white'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * Displays a single number and title in a pill container.\n */\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    /**\n     * The title to display on the pill.\n     */\n    @Input('statTitle') statTitle: string;\n    /**\n     * The number to display.\n     */\n    @Input('statCount') statCount: number;\n    /**\n     * The color of the title.\n     */\n    @Input('titleColor') titleColor: string = 'white';\n    /**\n     * The side of the pill the number should be display on.\n     */\n    @Input('side') side: string = 'right';\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides methods to notify the user of errors and various message\nvia toast notification.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Displays a message to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Message to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Displays an error to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Error to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n/**\n * Provides methods to notify the user of errors and various message\n * via toast notification.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Displays an error to the user via toast notification.\n     * @param {Error} e Error to display\n     */\n    toastError(e) {\n        function buildHTML(message) {\n            console.log(typeof message, message);\n            if (typeof message === 'object') {\n                message = JSON.stringify(message);\n            }\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        // If just text is sent in\n        let text = e;\n\n        // Classic Error\n        if (e instanceof Error) {\n            text = e.message;\n\n            // If a web socket goes down unexpectedly\n        } else if (e instanceof Event && e.target instanceof WebSocket && (e.target.readyState === 3 || e.target.readyState === 2)) {\n            text = 'Websocket unexpectedly closed. Server may be down.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    /**\n     * Displays a message to the user via toast notification.\n     * @param {string} text Message to display\n     */\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tool available from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                            Optional\n                                        editorTabs\n                                \n                                \n                                            Optional\n                                        fixMessage\n                                \n                                \n                                            Optional\n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                                \n                                        toolType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the tool's uses \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DiscoverOptions for this tool, used to generate the options page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editorTabs\n                                    \n                                \n                                \n                                    \n                                        editorTabs:     EditorTab[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorTab[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The tabs to go into the HTML editor on the issue, if needed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixMessage\n                                    \n                                \n                                \n                                    \n                                        fixMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The message to display at the bottom of each IssueContainerComponent when the issue has been fixed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     FixOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FixOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FixOptions for this tool, used to generate the options on each IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MCIcon used to represent the tool in the ToolSelectionComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID used to identify the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tool (displayed to the user) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category this tool belongs to and will display in through the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolType\n                                    \n                                \n                                \n                                    \n                                        toolType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tool's type - Determines some of the actions available to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number;\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolPageModule.html":{"url":"modules/ToolPageModule.html","title":"module - ToolPageModule","body":"\n                   \n\n\n\n\n  Modules\n  ToolPageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\n\n\nToolPageModule\n\nToolPageModule\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tool-page/tool-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CodeEditorComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        IssueContainerComponent,\n        ToolViewComponent,\n        StatBadgeComponent,\n        CodeEditorComponent,\n    ]\n})\nexport class ToolPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/tool-selection/tool-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Handles the view for selecting tools.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/tool-selection/tool-selection.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in tool-selection.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/tool-selection/tool-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Being used in tool-selection.component.html (i.e. DO NOT DELETE)\n\n/**\n * Handles the view for selecting tools.\n */\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Being used in tool-selection.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public toolService: ToolService, private courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                The Tool Service contains information and management for\nall tools available from the service. It handles information\nlike which tool is currently selected, whether or not the user\nis currently using a tool, and what categories are available to\nthe user.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:76\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:52\n                            \n                        \n\n                \n                    \n                        The category selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:56\n                            \n                        \n\n                \n                    \n                        The tool selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:21\n                            \n                        \n\n                \n                    \n                        The categories available to the user. This will be replaced with\ndynamic generation at a later point.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:34\n                            \n                        \n\n                \n                    \n                        Whether or not a tool is currently doing it's magic.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:38\n                            \n                        \n\n                \n                    \n                        The message to display on the screen while a tool is processing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:60\n                            \n                        \n\n                \n                    \n                        The discovery options chosen by the user on the options page for the selected tool.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:47\n                            \n                        \n\n                \n                    \n                        The list of available tools, as retrieved from the server.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:42\n                            \n                        \n\n                \n                    \n                        Whether or not the user is currently looking at the tool view.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:62\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:70\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:73\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Tool, Category } from './interfaces';\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing: boolean = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage: string = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen: boolean = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n\n        const loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/tool-view/tool-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the tool view.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/tool-view/tool-view.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for the currently selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Determines the current total count of issues from all selected courses\ndiscovered by the currently selected tool.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:20\n                            \n                        \n\n                \n                    \n                        Provides information and management for the currently selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\n\n/**\n * Container for the tool view.\n */\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for the currently selected courses.\n     * @param toolService Provides information and management for available tools.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService) { }\n\n    /**\n     * Determines the current total count of issues from all selected courses\n     * discovered by the currently selected tool.\n     */\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n\n    \n        \n    \n    \n        {{toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            {{toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/authguard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/classes.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/firebase.auth.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/home-page/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/home-page/error-page/error-page.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/home-page/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/home-page/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                EditorTab\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                FixOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/katana.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-chip/course-chip.component.ts\n            \n            \n                component\n            \n            \n                CourseChipComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-sidebar/course-sidebar.component.ts\n            \n            \n                component\n            \n            \n                CourseSidebarComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/tool-page/code-editor/code-editor.component.ts\n            \n            \n                component\n            \n            \n                CodeEditorComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/tool-page/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/tool-page/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/compiler : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @types/d3-dsv : ^1.0.33\n        \n            angular2-crumbs : ^1.2.1\n        \n            angular2-materialize : ^15.1.10\n        \n            angularfire2 : ^5.0.0-rc.11\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : git+https://github.com/byuitechops/canvas-api-wrapper.git\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            firebase : ^5.2.0\n        \n            firebase-admin : ^5.12.1\n        \n            logger : github:byuitechops/logger\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            object-sizeof : ^1.2.0\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.1\n        \n            socket.io : ^2.1.1\n        \n            ws : ^5.2.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nThis tool is built to interface with Canvas, a Learning Management System built by Instructure. It provides the framework for a development team to build and deploy mass-maintenance tools. It is not build by Instructure. It was built by Brigham Young University - Idaho, and is maintained by them.\nSetup\nTo set up your own instance of Katana, follow these steps:\n\nInstall Git and use it to clone the repository\n\nInstall NodeJS if is not installed\n\nIn the terminal, run: npm install\n\n(TEMP: Set up CANVAS_API_TOKEN environment variable | Will become canvas developer key)\n\nDeploy Firebase using the steps described in this document\n\nBuild production files with ng build --prod\n\nCopy the server directory and the contents of the /dist folder into the directory you will be deploying from\n\nUse npm start to spin up Katana\n\nFollow any additional setup processes you need\n\n\nDevelopment\nFor development, use this command to build the angular front-end and launch the server immediately after:\nnpm run fullbuild\nIt can then be accessed via localhost:8000 (or whichever port you specify in server/settings.json).\nFlags\n\n\n\nFlag\nPurpose\n\n\n\n\n--mute\nPrevents database logging from appearing in the console\n\n\n\nDocumentation\nClient (Angular)\n\nLinkName \nArchitecture\nLinkName\nHow To...\nLinkName\nFirebase Integration\nLinkName\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolPageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nCourseSidebarComponent \n\nCourseSidebarComponent \n\nCourseSidebarComponent  -->\n\nSidebarModule->CourseSidebarComponent \n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nSidebarModule -->\n\nCourseChipComponent->SidebarModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nSidebarModule -->\n\nCourseSelectionComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nSidebarModule -->\n\nCourseSidebarComponent->SidebarModule\n\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        17 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../firebase.auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/firebase.auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    firebase: {\n        apiKey: 'AIzaSyBN6dkjkGHs5W2YXTkLUu8mCurFXkip3Dc',\n        authDomain: 'katana-24a36.firebaseapp.com',\n        databaseURL: 'https://katana-24a36.firebaseio.com',\n        projectId: 'katana-24a36',\n        storageBucket: 'katana-24a36.appspot.com'\n    }\n}\n                        \n                    \n\n                \n                    \n                        Used to connect the client to firebase for authentication.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture.html":{"url":"additional-documentation/architecture.html","title":"additional-page - Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture\nThese documents will cover points of Katana's architecture not covered by Compodoc.\nDocumentation\n Dataflow Diagram\n High Level Overview\n Server Endpoints\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/server-endpoints.html":{"url":"additional-documentation/architecture/server-endpoints.html","title":"additional-page - Server Endpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Endpoints\n(This will cover each server endpoint and its purpose)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/discover-&-fix-workflow.html":{"url":"additional-documentation/architecture/discover-&-fix-workflow.html","title":"additional-page - Discover & Fix Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tool Discover & Fix Workflow\n(This will describe the fix/discover workflow used by the node tools)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/data-flow-diagram.html":{"url":"additional-documentation/architecture/data-flow-diagram.html","title":"additional-page - Data Flow Diagram","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/high-level-overview.html":{"url":"additional-documentation/architecture/high-level-overview.html","title":"additional-page - High Level Overview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup.html":{"url":"additional-documentation/setup.html","title":"additional-page - Setup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProcesses\nWith Katana setup, various processes have to occur, such as integrating a newly created Node Tool, activating a new user in Firebase, or similar. This documentation will cover each process and its best practices.\nDocumentation\n Setting Up Firebase\n Enabling Accounts on Firebase\n Node Tools\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/setting-up-firebase.html":{"url":"additional-documentation/setup/setting-up-firebase.html","title":"additional-page - Setting Up Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nEach node tool will follow the same process and have the same settings/ options available. That process is as follows:\nSettings Object\nAt the bottom of each tool is an object that determines many attributes of the tool. The various keys and options on the object are described below:\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ndiscover\nfunction\n\nThe discover function that will tell the tool what items to get from Canvas and decide how to display them\ndiscover\ntrue\n\n\nfix\nfunction\n\nThe fix function that will tell the tool what items to fix and how to do it\nfix\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should all essecially be the same\n'the_tool_name'\ntrue\n\n\ntitle\nstring\n\nThe tool name capitalizing each word and using spaces. The tool filename, id, and title should all essecially be the same\n'The Tool Name'\ntrue\n\n\ndescription\nstring\n\nA description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\ntoolType\nstring\nfix/search\nThis determines if the tool will use both the discover and fix functions for fix, or if it will only utilize the discover function and disable the ability to approve fixes and make changes to content for search\n'fix'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis will determine which category the tool will show up under on the home page\n'html'\ntrue\n\n\nfixMessage\nstring\n\nThis message will appear on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/ fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool is run\nSee below for details\nfalse\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\n\nThe following are also object keys, but are object arrays:\ndiscoverOptions\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'currentColor'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" type options\n'Red'\nfalse\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one discover option.\nfixOptions\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'newColor'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" type options\n'#ff0000'\nfalse\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one fix option.\neditorTabs\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\ntrue, false\nAn option to make the editor read-only or not\ntrue\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover\nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function, and the fix function should simply be to make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix\nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the issue status and based on any other conditions\nUpdate the status of the issues if changes are made or if otherwise needed\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible and should be abstracted to the discover function if possible.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder ./katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen ./katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything and run Katana and you should see it!\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/development-environment.html":{"url":"additional-documentation/setup/development-environment.html","title":"additional-page - Development Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nEach node tool will follow the same process and have the same settings/ options available. That process is as follows:\nSettings Object\nAt the bottom of each tool is an object that determines many attributes of the tool. The various keys and options on the object are described below:\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ndiscover\nfunction\n\nThe discover function that will tell the tool what items to get from Canvas and decide how to display them\ndiscover\ntrue\n\n\nfix\nfunction\n\nThe fix function that will tell the tool what items to fix and how to do it\nfix\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should all essecially be the same\n'the_tool_name'\ntrue\n\n\ntitle\nstring\n\nThe tool name capitalizing each word and using spaces. The tool filename, id, and title should all essecially be the same\n'The Tool Name'\ntrue\n\n\ndescription\nstring\n\nA description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\ntoolType\nstring\nfix/search\nThis determines if the tool will use both the discover and fix functions for fix, or if it will only utilize the discover function and disable the ability to approve fixes and make changes to content for search\n'fix'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis will determine which category the tool will show up under on the home page\n'html'\ntrue\n\n\nfixMessage\nstring\n\nThis message will appear on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/ fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool is run\nSee below for details\nfalse\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\n\nThe following are also object keys, but are object arrays:\ndiscoverOptions\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'currentColor'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" type options\n'Red'\nfalse\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one discover option.\nfixOptions\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'newColor'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" type options\n'#ff0000'\nfalse\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one fix option.\neditorTabs\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\ntrue, false\nAn option to make the editor read-only or not\ntrue\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover\nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function, and the fix function should simply be to make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix\nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the issue status and based on any other conditions\nUpdate the status of the issues if changes are made or if otherwise needed\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible and should be abstracted to the discover function if possible.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder ./katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen ./katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything and run Katana and you should see it!\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/node-tools.html":{"url":"additional-documentation/setup/node-tools.html","title":"additional-page - Node Tools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nEach node tool will follow the same process and have the same settings/ options available. That process is as follows:\nSettings Object\nAt the bottom of each tool is an object that determines many attributes of the tool. The various keys and options on the object are described below:\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ndiscover\nfunction\n\nThe discover function that will tell the tool what items to get from Canvas and decide how to display them\ndiscover\ntrue\n\n\nfix\nfunction\n\nThe fix function that will tell the tool what items to fix and how to do it\nfix\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should all essecially be the same\n'the_tool_name'\ntrue\n\n\ntitle\nstring\n\nThe tool name capitalizing each word and using spaces. The tool filename, id, and title should all essecially be the same\n'The Tool Name'\ntrue\n\n\ndescription\nstring\n\nA description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\ntoolType\nstring\nfix/search\nThis determines if the tool will use both the discover and fix functions for fix, or if it will only utilize the discover function and disable the ability to approve fixes and make changes to content for search\n'fix'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis will determine which category the tool will show up under on the home page\n'html'\ntrue\n\n\nfixMessage\nstring\n\nThis message will appear on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/ fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool is run\nSee below for details\nfalse\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\n\nThe following are also object keys, but are object arrays:\ndiscoverOptions\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'currentColor'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" type options\n'Red'\nfalse\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one discover option.\nfixOptions\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe object key to reference the option's parameters in the options object in the tool\n'newColor'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\nchoices\nstring array\n\nAn array of options that the user may select from if the type is multiselect or dropdown, otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" type options\n'#ff0000'\nfalse\n\n\nrequired\nboolean\ntrue, false\nAn option to make the input type required or not\ntrue\ntrue\n\n\n\nNote: This is an array of objects, meaning you can have more than one fix option.\neditorTabs\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\ntrue, false\nAn option to make the editor read-only or not\ntrue\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover\nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function, and the fix function should simply be to make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix\nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the issue status and based on any other conditions\nUpdate the status of the issues if changes are made or if otherwise needed\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible and should be abstracted to the discover function if possible.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder ./katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen ./katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything and run Katana and you should see it!\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/enabling-accounts-on-firebase.html":{"url":"additional-documentation/setup/enabling-accounts-on-firebase.html","title":"additional-page - Enabling Accounts on Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnabling an account (Firebase Admins Only)\nNew, valid account added to Firebase are disabled automatically by the Firebase Functions (if set up on your firebase instance).\nTo enable an account:\n\nNavigate to the Firebase Console\nLog in with a valid account that has admin access to your Katana firebase project\nSelect the Katana firebase project from the available projects\nSelect the \"Authentication\" tab under the Develop menu on the left\nSelect the \"Users\" tab on the Authentication page\nFind the user you want to enable and select the Kebob menu on the right side of their row\nSelect \"Enable Account\"\n\n\n(Selecting the Authentication Tab)\n\n\n(Enabling an Account)\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase.html":{"url":"additional-documentation/firebase.html","title":"additional-page - Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase\nThe following documentation regards integration with Firebase. This covers the technical details of how it is integrated. If you're looking at setting up your instance of Katan, refer to Setting Up Firebase.\nDocumentation\n Database Structure\n Firebase Authentication\n Firebase Functions\n Firestore Wrapper\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-authentication.html":{"url":"additional-documentation/firebase/firebase-authentication.html","title":"additional-page - Firebase Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Authentication Process\nKatana uses Firebase authentication services, although this may be temporary. As it stands, a developer key is not available to the team working on the Katana project. As an alternative, which coincedently opens up several new opportunities by integrating with Google authentication, Katana uses Firebase authentication with only Google Accounts allowed. Users cannot create new accounts, and must use an existing Google account. It must be a BYUI G-Suite Account, or their google account will be removed from Katana instantaneously.\nSign-Up Process\nWhen a user accesses Katana for the first time, they will be redirected to a Google login page. It will allow them to log in with any google account, but it will keep looping them back to the login page if they use a standard gmail or non-BYUI google account. After successfully logging into a valid BYUI google account, they will be taken back to Katana, where they will be automatically logged in.\nHowever, they cannot access the tool quite yet. It may continue to loop them back to the Google login page, even with a BYUI Google account. This is because all accounts are automatically disabled on creation (see below). This helps prevent unwanted users from accessing it without being given access manually. An admin must enable their account before they can continue.\nAuthentication Process\nBelow is a diagram with a simple overview of the authentication process using Firebase. This is the flow after the user has successfully signed up with a valid account. \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/database-structure.html":{"url":"additional-documentation/firebase/database-structure.html","title":"additional-page - Database Structure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDatabase Structure\nThe structure of the database is simple. It's sole purpose is to store logs.\nThe current Katana structure uses Firestore, a product produced by Firebase. It is a cloud-hosted, NoSQL database that handles datatypes easier than Firebase database.\nKatana uses its own Firestore Wrapper to handle sending information to the database. Refer to that if you are currently developing in Katana and would like to learn more about interfacing with Firestore.\nCollections\nCollections in a NoSQL database are similar to tables. They are just a \"collection\" of \"documents.\" A document is similar to a row in a standard database table. They can also be thought of as a stored JSON object (with a bit more control over datatypes).\nThe current setup requires three collections:\n\n\n\nCollection Title\nDescription\n\n\n\n\nuser_logs\nThis can store logs for user actions. This can include users logging in and out, changing account information, and similar actions. (BYUI Katana instance currently only stores users logging in and out)\n\n\nserver_logs\nActions taken by the server or significant events that should be logged should be logged here. This might include suspicious endpoint activity, or even just any request made to the server. (BYUI Katana instance currently does not store any information in this collection)\n\n\ntool_logs\nThis should be used to store logs generated by tools being run by users. (BYUI Katana instance currently stores every tool that runs, along with any related IssueItems)\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firestore-wrapper.html":{"url":"additional-documentation/firebase/firestore-wrapper.html","title":"additional-page - Firestore Wrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirestore Wrapper\nThe Firestore Wrapper, which is built specifically for Katana, is a small, easy wrapper used to log actions to Firestore. It does nothing more.\nView firestore-wrapper.js on Github\nSetup\nIf you use this separately from Katana, which it is not built for, the structure of your database will need to match what is described in Database Structure. It also requires the firebase-admin package to properly run. To implement the wrapper in your code:\nconst firestoreWrapper = require('./firestore-wrapper.js');\nconst db = firestoreWrapper.initializeFirebase();\nFrom there on, db can be used to access all of Firestore's API.\n\nFunctions\nFour public functions are exposed by the wrapper's export:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\nserverLog(data)\ndata (object)\nvoid\nThis saves data to the server_logs collection in Firestore, such as when a specific API is being tracked.\n\n\ntoolLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically used for when tools are being ran.\n\n\nuserLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically logs when users log in and out. Please note that this only logs the user's email and information pertinent to the action that occurred. No other user information is stored.\n\n\ninitializeFirebase()\nnone\nDatabase Reference\nInitializes the app and returns a reference to the database. The database reference is also used internally, so this function must be called before using any other external functions. This will also console log any database logging if the --db flag was given at startup. It will log all information provided to log, which can be quite long. It is not recommended that you use this flag. It is available for development purposes.\n\n\n\nOne private function is used internally:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\n_log(collectionTitle, data)\ncollectionTitle(string)data (object)\nvoid\nUsed by the logging functions available externally, this just logs data to Firestore. The other functions are just wrappers for this internal function.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-functions.html":{"url":"additional-documentation/firebase/firebase-functions.html","title":"additional-page - Firebase Functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Functions\nFirebase provides a service called Firebase Functions that allows functions to be written that run on key events fired on the database. This is used to control if an account is valid or not when a user signs up. Currently, only one function is deployed to the BYUI instance of Katana.\n\n\n\nFunction\nEvent\nDescription\n\n\n\n\nverifyNewUsers()\nfunctions.auth.user().onCreate(...)\nChecks whether or not the user is a BYUI Google account, and if they are not, removes their account immediately. If they are, it disables their account and revokes their refresh tokens (to disable their current session).\n\n\n\nYou must be an admin or owner on your firebase instance to deploy Firebase Functions.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
=======
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.465,1,1.083]],["body/components/AppComponent.html",[0,0.752,1,1.538,2,0.404,3,0.404,4,0.915,5,1.007,6,1.007,7,0.313,8,2.666,9,0.548,10,4.471,11,3.843,12,1.967,13,3.12,14,4.471,15,3.843,16,2.079,17,1.207,18,3.12,19,3.843,20,3.843,21,1.007,22,2.398,23,2.286,24,2.874,25,1.451,26,4.471,27,1.451,28,6.081,29,1.277,30,2.379,31,3.64,32,2.169,33,3.496,34,2.515,35,4.296,36,3.496,37,0.756,38,3.102,39,3.198,40,4.471,41,3.429,42,2.493,43,5.242,44,2.056,45,1.793,46,3.429,47,0.617,48,1.039,49,2.676,50,3.843,51,4.471,52,2.874,53,3.532,54,2.493,55,3.129,56,2.339,57,4.471,58,4.471,59,2.339,60,2.339,61,1.613,62,0.756,63,0.019,64,0.766,65,0.428,66,0.617,67,0.776,68,1.317,69,1.692,70,2.054,71,1.63,72,1.102,73,2.268,74,2.493,75,1.524,76,2.493,77,1.198,78,1.038,79,3.429,80,3.843,81,1.318,82,2.493,83,1.973,84,2.307,85,0.85,86,0.621,87,3.001,88,5.242,89,1.365,90,1.167,91,1.994,92,2.666,93,1.365,94,2.165,95,0.357,96,0.335,97,1.47,98,1.729,99,2.537,100,3.102,101,3.843,102,4.471,103,0.533,104,3.102,105,3.102,106,2.874,107,3.843,108,4.471,109,2.676,110,4.471,111,3.102,112,1.994,113,2.666,114,4.931,115,3.843,116,5.227,117,2.666,118,3.843,119,3.102,120,2.666,121,1.228,122,2.379,123,2.379,124,3.102,125,3.102,126,2.079,127,3.102,128,2.666,129,3.102,130,3.102,131,2.666,132,0.533,133,3.102,134,3.102,135,3.102,136,1.442,137,2.379,138,0.978,139,0.38,140,4.021,141,2.379,142,3.102,143,1.528,144,3.102,145,3.102,146,3.102,147,0.989,148,3.102,149,2.666,150,3.102,151,2.339,152,3.102,153,2.666,154,1.729,155,2.379,156,0.591,157,3.102,158,3.102,159,1.228,160,3.102,161,3.102,162,2.826,163,2.874,164,3.12,165,1.702,166,3.843,167,4.471,168,2.493,169,2.339,170,0.793,171,0.852,172,1.383,173,1.451,174,1.692,175,1.007,176,3.102,177,3.102,178,1.007,179,0.831,180,1.007,181,0.533,182,1.007,183,0.831,184,0.506,185,1.007,186,0.831,187,1.007,188,0.793,189,1.451,190,0.831,191,1.007,192,0.793,193,0.562,194,1.007,195,0.831,196,1.007,197,0.533,198,1.007,199,0.831,200,1.007,201,0.831,202,1.007,203,0.831,204,1.007,205,0.756,206,1.007,207,0.831,208,0.96,209,1.007,210,0.533,211,0.793,212,1.007,213,0.011,214,0.011]],["title/modules/AppModule.html",[215,1.52,216,2.82]],["body/modules/AppModule.html",[0,0.779,1,1.994,2,0.546,3,0.546,7,0.423,36,3.802,41,4.22,47,0.48,55,2.501,61,1.178,63,0.019,68,1.17,81,1.236,85,1.002,86,0.84,89,1.844,94,2.925,95,0.707,96,0.452,121,1.659,159,1.659,170,1.071,181,0.946,192,1.406,205,1.34,210,0.72,211,1.406,213,0.013,214,0.013,215,2.311,216,5.266,217,2.337,218,3.947,219,3.947,220,3.602,221,3.602,222,3.602,223,3.602,224,3.602,225,4.467,226,4.467,227,4.467,228,3.536,229,4.191,230,5.501,231,3.602,232,3.215,233,3.84,234,2.925,235,5.501,236,3.602,237,5.501,238,3.602,239,1.844,240,3.602,241,3.215,242,4.191,243,3.215,244,5.501,245,4.191,246,5.501,247,3.602,248,2.501,249,4.191,250,4.191,251,2.997,252,3.602,253,5.501,254,3.947,255,4.191,256,4.191,257,2.925,258,4.22,259,2.925,260,3.215,261,3.215,262,2.925,263,3.84,264,3.602,265,5.501,266,3.232,267,1.36,268,5.501,269,5.501,270,4.22,271,5.279,272,4.191,273,4.191,274,4.191,275,4.191,276,4.191]],["title/injectables/AuthGuardService.html",[36,2.113,277,1.685]],["body/injectables/AuthGuardService.html",[2,0.46,3,0.46,7,0.356,9,0.6,17,1.463,18,3.145,29,0.86,31,4.066,36,2.563,37,1.709,41,3.758,42,1.968,44,1.146,45,1.883,52,3.149,56,2.563,59,2.563,61,1.858,62,0.86,63,0.019,64,0.516,65,0.881,66,0.487,67,0.782,68,1.072,77,1.313,81,1.792,85,0.86,86,0.707,87,1.847,89,1.553,95,0.406,96,0.381,97,1.137,99,2.756,103,0.842,106,3.907,121,1.94,132,1.221,139,0.86,156,1.158,159,1.398,162,3.403,163,3.907,164,4.958,165,1.973,193,0.639,213,0.012,214,0.012,241,2.708,243,4.316,247,3.035,271,5.68,277,2.347,278,3.035,279,4.898,280,3.758,281,3.852,282,5.68,283,5.68,284,2.563,285,0.576,286,2.286,287,6.608,288,6.078,289,1.516,290,6.078,291,6.078,292,6.078,293,3.53,294,6.608,295,3.53,296,5.627,297,3.927,298,2.145,299,3.53,300,2.156,301,1.516,302,3.53,303,3.628,304,4.899,305,1.516,306,3.53,307,3.149,308,4.899,309,3.758,310,3.53,311,3.53,312,3.53,313,6.078,314,3.53,315,0.86,316,3.53,317,4.211,318,2.924,319,4.211,320,2.269,321,3.53,322,1.146,323,3.53,324,1.553,325,3.53,326,3.53,327,3.53,328,3.53,329,3.927,330,3.53,331,3.53,332,6.078,333,3.53,334,3.53,335,3.53,336,3.53,337,3.035,338,2.464,339,3.53,340,3.53,341,3.53,342,3.53,343,3.53,344,3.53,345,3.53,346,3.53,347,3.53,348,3.53,349,3.53]],["title/components/BreadcrumbsComponent.html",[0,0.465,179,1.083]],["body/components/BreadcrumbsComponent.html",[0,0.73,1,0.93,2,0.452,3,0.452,4,1.023,5,1.126,6,1.126,7,0.35,9,0.683,15,4.16,17,1.149,18,3.486,21,1.126,22,2.431,23,2.316,25,1.571,27,1.571,29,1.358,30,2.661,31,3.896,34,2.736,36,3.599,37,1.601,44,1.126,47,0.554,48,0.628,49,2.453,56,2.532,62,1.179,63,0.019,64,0.881,65,0.668,66,0.769,67,0.867,71,1.494,72,0.861,83,2.098,84,2.453,85,0.826,86,0.695,89,1.527,93,1.527,94,2.421,95,0.399,96,0.374,97,1.525,98,1.934,99,1.447,103,0.832,109,2.453,121,2.388,132,1.159,138,0.98,139,0.739,141,3.713,156,1.209,169,2.532,170,0.886,171,0.922,172,1.497,173,1.571,174,1.779,175,1.126,178,1.126,179,1.617,180,1.126,181,0.596,182,1.126,183,0.93,184,0.566,185,1.126,186,0.93,187,1.126,188,0.886,189,1.571,190,0.93,191,1.126,192,0.886,193,0.628,194,1.126,195,0.93,196,1.126,197,0.596,198,1.126,199,0.93,200,1.126,201,0.93,202,1.126,203,0.93,204,1.126,205,0.845,206,1.126,207,0.93,208,1.073,209,1.126,210,0.596,211,0.886,212,1.126,213,0.012,214,0.012,239,1.527,251,2.019,266,2.251,270,3.713,279,4.867,285,0.566,286,1.996,289,1.497,297,3.378,298,1.958,301,1.724,303,3.6,315,0.845,318,3.327,350,3.76,351,2.982,352,3.6,353,6.032,354,4.84,355,7.078,356,1.733,357,4.84,358,6.344,359,4.627,360,4.84,361,4.627,362,4.627,363,4.84,364,3.378,365,4.84,366,3.469,367,2.13,368,4.84,369,2.889,370,1.497,371,2.251,372,3.469,373,3.787,374,5.277,375,1.733,376,3.469,377,2.646,378,3.469,379,2.661,380,1.815,381,3.713,382,1.917,383,3.469,384,4.16,385,4.84,386,3.713]],["title/components/CategoriesComponent.html",[0,0.465,181,0.694]],["body/components/CategoriesComponent.html",[0,0.76,1,1.042,2,0.506,3,0.506,4,1.146,5,1.262,6,1.262,7,0.392,9,0.725,11,4.498,21,1.262,22,2.461,23,2.345,25,1.699,27,1.699,29,1.441,31,2.917,32,2.294,34,2.767,37,1.441,47,0.617,48,0.704,49,2.603,53,2.917,56,2.737,62,1.275,63,0.019,64,0.925,65,0.722,66,0.816,67,0.834,71,1.823,72,1.02,78,1.614,83,2.226,84,2.603,85,0.77,86,0.779,90,1.463,93,1.71,95,0.447,96,0.419,97,1.373,99,1.621,103,0.9,109,2.784,132,1.135,138,1.02,139,0.641,147,1.399,170,0.993,171,0.997,172,1.619,173,1.699,174,1.866,175,1.262,178,1.262,179,1.042,180,1.262,181,1.088,182,1.262,183,1.042,184,0.634,185,1.262,186,1.042,187,1.262,188,0.993,189,1.699,190,1.042,191,1.262,192,0.993,193,0.704,194,1.262,195,1.042,196,1.262,197,0.668,198,1.262,199,1.042,200,1.262,201,1.042,202,1.262,203,1.042,204,1.262,205,0.947,206,1.262,207,1.042,208,1.202,209,1.262,210,0.668,211,0.993,212,1.262,213,0.013,214,0.013,267,2.454,279,4.014,285,0.634,286,1.873,289,1.619,301,1.202,324,1.71,350,3.528,370,2.043,371,2.433,377,2.183,387,3.341,388,1.403,389,2.755,390,1.873,391,5.233,392,6.604,393,5.233,394,2.713,395,3.887,396,4.014,397,4.014,398,4.498,399,3.887,400,3.887,401,1.543,402,0.993,403,3.887,404,4.498,405,4.498,406,4.498]],["title/interfaces/Category.html",[267,1.311,407,0.731]],["body/interfaces/Category.html",[2,0.371,3,0.371,7,0.287,9,0.779,12,1.85,17,1.12,45,0.841,47,0.638,48,0.516,63,0.019,64,0.417,65,0.978,66,0.993,67,0.891,72,1.095,75,0.972,77,0.764,78,1.428,85,0.547,95,0.751,96,0.308,103,0.723,132,0.49,136,1.326,138,1.085,139,0.8,147,0.63,156,0.952,165,1.365,171,1.172,181,0.859,184,0.685,193,0.761,197,0.859,210,0.49,213,0.012,214,0.01,251,1.754,266,1.326,267,2.348,285,0.465,300,1.85,301,1.818,305,1.301,315,1.024,322,1.365,356,1.505,367,1.85,370,1.818,371,1.326,382,1.129,388,0.764,389,2.565,390,1.505,401,2.145,402,1.502,407,1.293,408,1.404,409,2.199,410,1.582,411,1.756,412,2.212,413,2.603,414,2.587,415,2.168,416,2.199,417,3.029,418,2.452,419,2.86,420,2.426,421,1.129,422,2.328,423,2.564,424,1.255,425,1.85,426,1.978,427,1.908,428,2.706,429,1.433,430,2.457,431,1.955,432,1.955,433,2.426,434,1.955,435,1.973,436,2.299,437,1.702,438,1.505,439,1.978,440,1.879,441,1.754,442,2.083,443,1.491,444,1.326,445,1.433,446,1.255,447,1.189,448,2.202,449,1.326,450,1.491,451,1.491,452,2.281,453,1.255,454,1.85,455,1.85,456,1.491,457,2.46,458,1.129,459,1.326,460,1.326,461,1.582,462,1.55,463,1.326,464,1.073,465,1.326,466,1.129,467,1.754,468,1.189,469,1.129,470,1.326,471,1.491,472,1.491,473,1.129,474,1.404,475,1.491,476,1.491,477,2.225,478,1.129,479,1.404,480,1.491,481,1.621,482,1.491,483,1.491,484,1.255,485,1.491,486,1.255,487,1.326,488,1.491,489,1.491,490,2.199,491,1.491,492,1.404,493,1.404,494,1.955,495,1.255,496,1.404,497,1.189,498,2.071,499,2.071,500,1.404,501,1.073]],["title/components/CodeEditorComponent.html",[0,0.465,183,1.083]],["body/components/CodeEditorComponent.html",[0,0.703,1,0.675,2,0.604,3,0.328,4,0.743,5,0.818,6,0.818,7,0.254,9,0.47,16,2.157,17,0.73,21,0.818,22,2.331,23,2.221,25,1.244,27,1.244,29,1.487,37,1.65,39,3.274,42,2.136,44,1.505,47,0.512,48,0.84,56,1.318,62,0.614,63,0.019,64,0.678,65,0.843,66,0.77,67,0.635,68,0.884,71,1.389,72,0.716,73,1.66,85,0.328,86,0.505,87,1.318,95,0.29,96,0.413,97,0.585,103,0.891,109,1.686,132,0.891,138,0.972,140,1.932,141,2.939,147,1.588,151,2.005,154,1.404,156,1.228,159,1.836,170,0.644,171,1.252,172,1.603,173,1.244,174,1.644,175,0.818,178,0.818,179,0.675,180,0.818,181,0.433,182,0.818,183,1.389,184,1.182,185,0.818,186,0.675,187,0.818,188,0.644,189,1.244,190,0.675,191,0.818,192,0.644,193,0.456,194,0.818,195,0.675,196,0.818,197,0.433,198,0.818,199,0.675,200,0.818,201,0.675,202,0.818,203,0.675,204,0.818,205,0.614,206,0.818,207,0.675,208,0.779,209,0.818,210,0.433,211,0.644,212,0.818,213,0.009,214,0.011,280,2.939,285,0.411,289,1.817,298,1.682,315,0.933,317,4.454,318,2.768,320,2.463,370,1.435,375,1.66,386,2.939,402,1.185,415,1.651,425,1.686,427,1.244,429,2.08,435,1.855,440,2.808,441,3.125,445,1.306,446,2.584,447,1.598,452,1.244,469,1.517,470,1.782,473,2.052,477,1.306,502,3.188,503,5.892,504,5.258,505,2.165,506,2.463,507,5.182,508,3.986,509,3.832,510,3.832,511,5.182,512,5.872,513,5.182,514,5.182,515,5.182,516,5.047,517,3.832,518,4.637,519,4.637,520,3.832,521,3.832,522,2.939,523,4.637,524,5.872,525,3.775,526,5.041,527,4.637,528,5.182,529,3.832,530,5.575,531,2.519,532,2.586,533,2.287,534,2.939,535,2.519,536,2.519,537,3.294,538,3.832,539,3.832,540,3.832,541,3.832,542,2.519,543,2.939,544,1.598,545,5.892,546,5.182,547,3.237,548,3.832,549,2.519,550,5.182,551,2.287,552,2.939,553,2.519,554,3.832,555,3.832,556,2.939,557,3.193,558,2.939,559,3.832,560,3.832,561,3.294,562,3.832,563,3.294,564,2.939,565,3.832,566,2.519,567,2.939,568,2.519,569,2.889,570,3.975,571,3.331,572,1.619,573,2.463,574,2.519,575,3.832,576,3.832,577,2.519,578,3.832,579,3.832,580,2.519,581,2.519,582,2.519,583,3.832,584,2.519,585,2.519,586,2.519,587,1.758,588,1.932,589,2.519,590,2.519,591,2.519,592,2.519,593,1.932,594,2.519,595,2.519,596,2.519,597,2.519,598,2.519,599,3.832,600,2.519,601,2.519,602,2.519,603,2.519,604,1.758,605,2.519,606,2.519,607,2.519,608,2.519,609,1.758,610,1.932,611,2.519,612,2.519,613,2.519,614,4.637,615,3.832,616,2.519,617,2.519,618,2.519,619,2.519,620,1.619,621,1.932,622,2.519,623,2.519,624,2.519,625,2.519,626,2.519,627,2.519,628,2.939,629,3.832,630,3.294,631,2.519,632,2.519,633,2.165,634,2.519,635,3.832,636,2.519,637,2.519,638,2.519,639,2.519,640,2.519,641,4.637,642,2.519,643,3.832,644,3.832,645,3.832]],["title/interfaces/Course.html",[72,0.624,407,0.731]],["body/interfaces/Course.html",[2,0.345,3,0.345,7,0.268,9,0.761,12,1.754,17,1.087,45,0.783,47,0.631,48,0.481,63,0.019,64,0.582,65,1.016,66,1.025,67,0.871,72,1.15,75,0.905,77,0.711,78,1.391,85,0.519,95,0.736,96,0.286,103,0.685,132,0.685,136,1.234,138,1.07,139,0.761,147,0.881,156,1.087,165,1.945,171,1.142,181,0.685,184,0.78,193,1.085,197,0.823,210,0.456,213,0.012,214,0.01,251,1.107,266,1.234,267,2.196,285,0.433,300,2.107,301,2.023,305,1.853,315,0.971,322,1.294,356,1.427,367,2.636,370,1.646,371,1.234,382,1.051,388,0.711,389,2.499,390,0.95,401,2.122,402,1.458,407,1.267,408,1.307,409,1.389,410,0.999,411,1.702,412,1.5,413,2.504,414,1.754,415,2.173,416,1.389,417,2.951,418,2.22,419,2.786,420,2.342,421,1.051,422,2.259,423,2.475,424,1.168,425,1.754,426,1.896,427,1.852,428,2.636,429,1.359,430,2.406,431,1.854,432,1.854,433,2.342,434,1.854,435,2.145,436,2.22,437,1.631,438,1.427,439,1.896,440,1.801,441,1.663,442,1.997,443,1.389,444,1.234,445,1.359,446,1.168,447,1.107,448,2.384,449,1.234,450,1.389,451,1.389,452,2.349,453,1.168,454,1.754,455,1.754,456,1.389,457,2.358,458,1.051,459,1.234,460,1.234,461,1.801,462,1.872,463,1.234,464,0.999,465,1.234,466,1.051,467,1.663,468,1.107,469,1.051,470,1.234,471,1.389,472,1.389,473,1.051,474,1.307,475,1.389,476,1.389,477,2.179,478,1.051,479,1.307,480,1.389,481,1.852,482,1.389,483,1.389,484,1.168,485,1.389,486,1.168,487,1.854,488,2.784,489,2.784,490,3.134,491,2.085,492,1.963,493,1.963,494,2.786,495,1.168,496,1.963,497,1.663,498,2.951,499,2.951,500,1.963,501,1.5]],["title/components/CourseChipComponent.html",[0,0.465,186,1.083]],["body/components/CourseChipComponent.html",[0,0.806,1,0.882,2,0.428,3,0.428,4,0.97,5,1.068,6,1.068,7,0.332,9,0.664,16,2.893,21,1.068,22,2.416,23,2.302,25,1.513,27,1.513,29,1.319,32,2.357,34,2.554,37,1.574,47,0.514,48,0.981,49,2.383,60,2.439,62,1.136,63,0.019,64,1.009,65,0.748,66,0.748,67,0.664,68,0.888,71,1.452,72,1.18,83,2.038,84,2.383,85,0.767,86,0.659,90,1.238,93,1.447,95,0.379,96,0.355,97,1.257,99,1.372,103,0.801,118,5.553,120,4.008,132,1.229,138,1.081,143,2.296,151,1.721,156,1.032,170,0.841,171,0.888,172,1.442,173,1.513,174,1.834,175,1.068,178,1.068,179,0.882,180,1.068,181,0.565,182,1.068,183,0.882,184,0.536,185,1.068,186,1.579,187,1.068,188,0.841,189,1.513,190,0.882,191,1.068,192,0.841,193,0.596,194,1.068,195,0.882,196,1.068,197,0.565,198,1.068,199,0.882,200,1.068,201,0.882,202,1.068,203,0.882,204,1.068,205,0.801,206,1.068,207,0.882,208,1.018,209,1.068,210,0.565,211,0.841,212,1.068,213,0.011,214,0.016,285,0.536,286,1.669,289,1.442,298,1.913,322,2.203,324,1.447,375,1.669,377,2.695,389,1.945,390,1.669,401,1.737,407,0.596,415,1.816,417,2.902,418,2.595,429,2.008,440,2.217,452,1.913,462,0.925,473,1.846,481,2.019,494,2.519,646,4.637,647,5.096,648,2.827,649,4.662,650,4.662,651,6.22,652,6.46,653,5.065,654,5.892,655,1.834,656,4.662,657,3.289,658,4.113,659,4.662,660,4.662,661,3.576,662,4.662,663,3.289,664,3.576,665,3.289,666,3.289,667,2.827,668,3.289,669,3.289,670,3.289,671,3.289,672,3.289,673,5.892,674,4.662,675,2.827,676,4.662,677,3.576,678,3.289,679,3.289,680,3.289,681,3.289,682,3.289,683,3.289,684,3.289,685,2.114,686,3.289,687,2.827,688,1.834,689,2.296,690,2.827,691,4.008,692,3.576]],["title/components/CourseSelectionComponent.html",[0,0.465,188,1.032]],["body/components/CourseSelectionComponent.html",[0,0.62,1,0.626,2,0.304,3,0.304,4,0.689,5,0.758,6,0.758,7,0.446,9,0.61,13,2.523,17,0.689,21,0.758,22,2.304,23,2.195,25,1.174,27,1.174,29,1.078,32,2.256,33,3.212,37,1.678,44,1.174,47,0.315,48,0.423,53,1.302,59,2.314,61,1.244,62,1.447,63,0.019,64,0.868,65,0.889,66,0.687,67,0.286,68,1.132,69,1.304,70,1.929,71,1.808,72,1.179,73,1.294,74,3.004,75,1.508,76,2.016,77,0.969,83,1.361,85,0.648,86,0.468,90,0.879,91,1.501,95,0.269,96,0.252,97,1.583,98,1.302,99,2.873,103,0.621,109,2.371,132,1.172,137,1.791,138,0.832,143,2.654,147,0.516,151,2.314,155,2.773,156,0.843,159,0.925,165,1.929,170,0.597,171,0.949,172,2.059,173,1.174,174,1.469,175,0.758,178,0.758,179,0.626,180,0.758,181,0.401,182,0.758,183,0.626,184,0.721,185,0.758,186,0.626,187,0.758,188,1.273,189,1.174,190,0.626,191,0.758,192,0.597,193,0.423,194,0.758,195,0.626,196,0.758,197,0.401,198,0.758,199,0.626,200,0.758,201,0.626,202,0.758,203,0.626,204,0.758,205,0.569,206,0.758,207,0.626,208,0.722,209,0.758,210,0.401,211,0.597,212,0.758,213,0.016,214,0.013,267,0.758,285,0.381,286,1.584,289,1.118,298,1.174,301,1.667,305,1.118,315,0.881,329,1.63,352,1.394,369,3.844,375,0.836,377,1.508,386,1.791,402,1.518,407,0.423,411,1.13,415,1.4,427,1.174,429,2.268,430,1.665,435,1.783,448,1.584,452,1.85,469,1.432,481,0.758,492,1.781,493,1.781,494,2.316,496,2.453,498,3.322,499,3.279,525,4.672,557,3.369,558,2.773,571,4.467,572,3.463,573,3.663,593,1.791,620,1.501,633,2.007,646,4.76,677,1.791,691,3.108,692,2.773,693,5.232,694,1.791,695,2.773,696,3.615,697,3.108,698,3.108,699,6.44,700,4.981,701,5.387,702,6.14,703,5.387,704,4.424,705,3.82,706,3.615,707,3.615,708,2.007,709,3.615,710,2.335,711,2.523,712,3.615,713,3.615,714,2.324,715,4.981,716,2.335,717,3.463,718,2.523,719,4.981,720,3.615,721,2.335,722,6.14,723,3.615,724,2.773,725,3.108,726,2.007,727,6.14,728,2.335,729,2.335,730,2.335,731,2.335,732,2.335,733,2.335,734,2.335,735,2.335,736,2.335,737,2.335,738,2.335,739,2.335,740,2.007,741,2.335,742,2.335,743,1.63,744,1.63,745,2.335,746,4.424,747,2.335,748,1.791,749,1.791,750,2.335,751,2.335,752,1.302,753,3.615,754,2.335,755,2.335,756,2.335,757,2.335,758,2.335,759,2.335,760,1.791,761,2.335,762,2.335,763,2.335,764,2.335,765,3.615,766,2.007,767,1.791,768,1.501,769,2.335,770,2.335,771,2.335,772,4.424,773,2.335,774,2.335,775,3.615,776,3.615,777,2.335,778,2.335,779,2.335,780,3.615,781,2.335,782,3.615,783,2.335,784,2.335,785,2.335,786,3.393,787,2.335,788,1.681,789,3.615,790,3.615,791,3.615,792,3.615,793,4.981,794,3.615,795,3.615,796,3.615,797,3.615,798,3.615,799,3.615,800,3.615]],["title/injectables/CourseService.html",[32,1.311,277,1.685]],["body/injectables/CourseService.html",[2,0.335,3,0.335,7,0.26,9,0.726,13,2.72,17,0.742,24,1.655,29,1.371,32,1.265,37,1.722,44,1.526,49,1.715,54,2.922,60,2.742,62,1.543,63,0.019,64,0.947,65,0.817,66,0.94,67,0.776,68,0.999,69,1.149,70,1.395,71,1.846,72,1.179,73,1.395,84,1.715,85,0.507,86,0.516,95,0.296,96,0.607,97,1.505,103,0.67,106,1.655,109,1.715,112,2.505,132,1.279,138,1.128,143,1.919,147,0.862,156,1.259,159,2.075,172,1.621,184,0.42,188,1.339,213,0.009,214,0.009,270,1.975,277,1.961,285,0.42,289,1.205,298,1.265,301,1.454,307,2.505,315,1.145,318,2.806,322,2.461,375,2.015,377,1.625,390,1.395,396,2.989,397,4.02,401,1.814,402,1.339,407,0.466,411,0.996,412,2.487,415,1.988,427,0.836,430,2.527,435,1.395,437,1.919,445,2.159,448,1.395,461,1.466,462,1.858,463,2.186,464,1.769,465,2.186,466,1.861,481,2.21,495,1.133,497,2.186,532,2.922,533,1.537,556,1.975,557,1.347,609,3.658,664,4.02,667,3.349,687,2.214,688,1.436,689,3.658,690,2.214,705,1.975,711,3.658,743,1.797,760,4.02,786,4.318,801,2.214,802,3.896,803,3.896,804,3.896,805,2.989,806,5.681,807,5.241,808,5.241,809,5.241,810,5.241,811,5.241,812,3.896,813,3.896,814,3.896,815,3.896,816,3.896,817,3.896,818,3.896,819,2.575,820,3.896,821,2.575,822,3.896,823,3.896,824,3.896,825,2.575,826,3.896,827,3.658,828,3.807,829,3.896,830,2.575,831,4.543,832,5.241,833,5.241,834,4.02,835,3.896,836,2.575,837,4.505,838,3.896,839,2.575,840,2.989,841,3.896,842,2.575,843,3.896,844,2.575,845,2.575,846,2.575,847,2.575,848,2.575,849,2.575,850,2.214,851,3.896,852,2.575,853,2.575,854,2.214,855,2.575,856,2.575,857,1.797,858,4.7,859,2.575,860,2.575,861,2.575,862,2.575,863,2.575,864,2.214,865,2.575,866,2.575,867,3.896,868,2.575,869,2.575,870,4.7,871,5.241,872,2.575,873,2.575,874,2.575,875,2.575,876,2.214,877,2.575,878,2.575,879,2.575,880,2.575,881,2.214,882,2.214,883,2.575,884,2.575,885,2.575,886,3.896,887,4.318,888,3.349,889,2.214,890,2.575,891,4.7,892,2.214,893,4.505,894,2.989,895,3.896,896,2.575,897,1.975,898,2.214]],["title/components/CourseSidebarComponent.html",[0,0.465,190,1.083]],["body/components/CourseSidebarComponent.html",[0,0.757,1,0.931,2,0.452,3,0.452,4,1.024,5,1.127,6,1.127,7,0.35,9,0.683,21,1.127,22,2.431,23,2.324,25,1.572,27,1.572,29,1.358,32,2.343,34,2.589,37,1.546,47,0.526,48,0.877,49,2.454,54,3.364,62,1.18,63,0.019,64,0.882,65,0.77,66,0.77,67,0.683,68,1.285,69,1.871,70,2.415,71,1.918,72,1.195,78,1.124,83,2.099,84,2.454,85,0.786,86,0.696,90,1.307,93,1.528,95,0.4,96,0.522,97,1.295,99,1.448,103,0.833,114,2.985,115,5.798,116,2.985,117,2.985,132,1.037,138,0.98,147,1.334,153,4.163,156,1.15,170,0.887,171,0.923,172,1.725,173,1.572,174,1.779,175,1.127,178,1.127,179,0.931,180,1.127,181,0.597,182,1.127,183,0.931,184,0.566,185,1.127,186,0.931,187,1.127,188,1.622,189,1.572,190,1.617,191,1.127,192,0.887,193,0.629,194,1.127,195,0.931,196,1.127,197,0.597,198,1.127,199,0.931,200,1.127,201,0.931,202,1.127,203,0.931,204,1.127,205,0.846,206,1.127,207,0.931,208,1.074,209,1.127,210,0.597,211,0.887,212,1.127,213,0.012,214,0.012,285,0.566,286,1.734,289,1.498,324,1.528,373,3.924,375,1.997,377,2.742,388,1.298,401,1.428,402,1.238,407,0.629,532,3.11,537,4.794,646,4.588,655,1.936,695,4.278,854,4.163,899,5.042,900,2.985,901,4.843,902,6.347,903,6.034,904,6.034,905,4.843,906,3.472,907,3.472,908,3.472,909,3.472,910,2.891,911,3.472,912,3.472,913,4.843,914,3.472,915,6.347,916,3.472,917,2.985,918,5.577,919,4.843,920,3.472,921,3.472,922,2.664,923,3.472,924,3.472]],["title/interfaces/DiscoverOption.html",[407,0.731,426,1.6]],["body/interfaces/DiscoverOption.html",[2,0.358,3,0.358,7,0.277,9,0.836,12,2.152,17,1.157,45,0.811,47,0.631,48,0.498,63,0.019,64,0.402,65,1.026,66,1.029,67,0.887,72,1.088,75,0.937,77,0.737,78,1.5,85,0.533,95,0.744,96,0.297,103,0.704,132,0.473,136,1.279,138,1.078,139,0.792,147,0.608,156,0.932,165,1.329,171,1.157,181,0.704,184,0.667,193,0.741,197,0.841,210,0.473,213,0.012,214,0.01,251,1.147,266,1.279,267,2.214,285,0.448,300,1.801,301,1.945,305,1.266,315,1.191,322,1.329,356,1.465,367,1.801,370,1.676,371,1.279,382,1.089,388,0.737,389,2.532,390,0.984,401,2.133,402,1.607,407,1.285,408,1.355,409,1.439,410,1.035,411,1.764,412,1.54,413,2.59,414,1.801,415,2.169,416,1.439,417,2.852,418,2.415,419,2.693,420,2.383,421,1.089,422,2.293,423,2.693,424,1.801,425,2.152,426,2.145,427,2.143,428,2.843,429,1.666,430,2.598,431,2.274,432,2.274,433,2.843,434,2.693,435,2.073,436,2.695,437,1.666,438,1.465,439,1.936,440,1.84,441,1.707,442,2.04,443,1.439,444,1.279,445,1.395,446,1.21,447,1.147,448,2.173,449,1.279,450,1.439,451,1.439,452,2.265,453,1.21,454,1.801,455,1.801,456,1.439,457,2.408,458,1.089,459,1.279,460,1.279,461,1.54,462,1.523,463,1.279,464,1.035,465,1.279,466,1.089,467,1.707,468,1.147,469,1.089,470,1.279,471,1.439,472,1.439,473,1.089,474,1.355,475,1.439,476,1.439,477,2.202,478,1.089,479,1.355,480,1.439,481,1.587,482,1.439,483,1.439,484,1.21,485,1.439,486,1.21,487,1.279,488,1.439,489,1.439,490,2.141,491,1.439,492,1.355,493,1.355,494,1.904,495,1.21,496,1.355,497,1.147,498,2.016,499,2.016,500,1.355,501,1.035]],["title/interfaces/EditorTab.html",[407,0.731,442,1.685]],["body/interfaces/EditorTab.html",[2,0.373,3,0.373,7,0.289,9,0.781,12,1.857,17,1.174,45,0.845,47,0.632,48,0.519,63,0.019,64,0.419,65,0.979,66,0.993,67,0.887,72,1.096,75,0.977,77,0.768,78,1.43,85,0.549,95,0.753,96,0.309,103,0.726,132,0.493,136,1.333,138,1.096,139,0.781,147,0.634,156,0.955,165,1.37,171,1.246,181,0.726,184,0.817,193,0.764,197,0.861,210,0.493,213,0.012,214,0.01,251,1.195,266,1.333,267,2.234,285,0.467,300,1.857,301,1.971,305,1.306,315,1.028,322,1.37,356,1.511,367,1.857,370,1.71,371,1.333,382,1.135,388,0.768,389,2.658,390,1.026,401,2.146,402,1.505,407,1.294,408,1.412,409,1.499,410,1.079,411,1.734,412,1.588,413,2.605,414,1.857,415,2.165,416,1.499,417,2.902,418,2.305,419,2.74,420,2.432,421,1.135,422,2.333,423,2.57,424,1.261,425,1.857,426,1.984,427,2,428,2.712,429,1.438,430,2.46,431,1.963,432,1.963,433,2.432,434,1.963,435,1.978,436,2.305,437,1.707,438,1.511,439,1.984,440,2.217,441,2.09,442,2.305,443,2.208,444,2.57,445,1.707,446,1.857,447,2.305,448,2.206,449,1.333,450,1.499,451,1.499,452,2.283,453,1.261,454,1.857,455,1.857,456,1.499,457,2.468,458,1.135,459,1.333,460,1.333,461,1.588,462,1.554,463,1.333,464,1.079,465,1.333,466,1.135,467,1.76,468,1.195,469,1.135,470,1.333,471,1.499,472,1.499,473,1.135,474,1.412,475,1.499,476,1.499,477,2.228,478,1.135,479,1.412,480,1.499,481,1.626,482,1.499,483,1.499,484,1.261,485,1.499,486,1.261,487,1.333,488,1.499,489,1.499,490,2.208,491,1.499,492,1.412,493,1.412,494,1.963,495,1.261,496,1.412,497,1.195,498,2.079,499,2.079,500,1.412,501,1.079]],["title/components/ErrorPageComponent.html",[0,0.465,192,1.032]],["body/components/ErrorPageComponent.html",[0,0.785,1,1.147,2,0.557,3,0.557,4,1.262,5,1.39,6,1.39,7,0.432,9,0.525,16,2.594,17,1.063,21,1.39,22,2.484,23,2.367,25,1.811,27,1.811,29,1.511,33,3.724,37,1.043,47,0.487,48,0.775,49,2.73,61,1.848,62,1.043,63,0.019,64,0.907,65,0.591,66,0.77,67,0.76,69,1.645,72,0.958,78,1.295,83,2.335,84,2.73,85,0.726,86,0.858,91,2.752,95,0.493,96,0.462,97,0.994,98,2.387,138,1.053,139,0.683,168,3.11,170,1.094,171,1.063,172,1.725,173,1.811,174,1.938,175,1.39,178,1.39,179,1.147,180,1.39,181,0.736,182,1.39,183,1.147,184,0.698,185,1.39,186,1.147,187,1.39,188,1.094,189,1.811,190,1.147,191,1.39,192,1.68,193,1.374,194,1.39,195,1.147,196,1.39,197,0.736,198,1.39,199,1.147,200,1.39,201,1.147,202,1.39,203,1.147,204,1.39,205,1.043,206,1.39,207,1.147,208,1.324,209,1.39,210,0.736,211,1.094,212,1.39,213,0.014,214,0.014,263,4.588,322,1.811,350,3.11,411,1.68,708,3.679,925,3.679,926,5.578,927,6.817,928,4.28,929,4.278,930,4.278,931,6.574,932,5.578,933,4.28,934,5.578,935,5.578,936,3.329,937,4.278,938,4.28]],["title/interfaces/FixOption.html",[407,0.731,439,1.6]],["body/interfaces/FixOption.html",[2,0.358,3,0.358,7,0.277,9,0.836,12,2.152,17,1.157,45,0.811,47,0.631,48,0.498,63,0.019,64,0.402,65,1.026,66,1.023,67,0.887,72,1.088,75,0.937,77,0.737,78,1.5,85,0.533,95,0.744,96,0.297,103,0.704,132,0.473,136,1.279,138,1.088,139,0.77,147,0.608,156,0.932,165,1.329,171,1.157,181,0.704,184,0.667,193,0.741,197,0.841,210,0.473,213,0.012,214,0.01,251,1.147,266,1.279,267,2.214,285,0.448,300,1.801,301,1.945,305,1.266,315,1.191,322,1.329,356,1.465,367,1.801,370,1.791,371,1.279,382,1.089,388,0.737,389,2.532,390,0.984,401,2.133,402,1.607,407,1.285,408,1.355,409,1.439,410,1.035,411,1.764,412,1.54,413,2.59,414,1.801,415,2.169,416,1.439,417,2.852,418,2.415,419,2.693,420,2.383,421,1.089,422,2.293,423,2.693,424,1.21,425,2.152,426,1.936,427,2.143,428,2.843,429,1.666,430,2.598,431,2.274,432,2.274,433,2.843,434,2.693,435,2.073,436,2.695,437,1.846,438,1.75,439,2.145,440,1.84,441,1.707,442,2.04,443,1.439,444,1.279,445,1.395,446,1.21,447,1.147,448,2.173,449,1.279,450,1.439,451,1.439,452,2.265,453,1.21,454,1.801,455,1.801,456,1.439,457,2.408,458,1.089,459,1.279,460,1.279,461,1.54,462,1.523,463,1.279,464,1.035,465,1.279,466,1.089,467,1.707,468,1.147,469,1.089,470,1.279,471,1.439,472,1.439,473,1.089,474,1.355,475,1.439,476,1.439,477,2.202,478,1.089,479,1.355,480,1.439,481,1.587,482,1.439,483,1.439,484,1.21,485,1.439,486,1.21,487,1.279,488,1.439,489,1.439,490,2.141,491,1.439,492,1.355,493,1.355,494,1.904,495,1.21,496,1.355,497,1.147,498,2.016,499,2.016,500,1.355,501,1.035]],["title/modules/HomePageModule.html",[215,1.52,225,2.597]],["body/modules/HomePageModule.html",[2,0.629,3,0.629,7,0.487,47,0.422,55,2.886,63,0.019,66,0.667,68,0.921,85,0.983,86,0.969,89,2.128,95,0.792,96,0.522,121,1.914,170,1.235,179,2.034,181,1.24,192,1.939,193,0.875,205,1.757,210,1.24,213,0.015,214,0.015,215,2.268,217,2.696,218,4.222,219,3.108,225,4.942,228,3.875,233,4.207,234,4.207,239,2.128,252,4.156,258,3.709,259,3.375,260,3.709,262,3.375,263,3.375,264,4.156,350,2.696,380,2.529,421,1.914,939,4.156,940,4.156,941,4.156,942,4.156,943,4.624,944,3.375,945,4.624,946,4.835,947,4.835,948,5.646,949,5.646]],["title/interfaces/Issue.html",[138,0.624,407,0.731]],["body/interfaces/Issue.html",[2,0.351,3,0.351,7,0.272,9,0.766,12,1.776,17,1.095,45,0.796,47,0.629,48,0.489,63,0.019,64,0.394,65,1.006,66,1.021,67,0.893,72,1.084,75,0.92,77,0.724,78,1.399,85,0.526,95,0.74,96,0.291,103,0.694,132,0.464,136,1.255,138,1.125,139,0.787,147,0.597,156,1.023,165,1.31,171,1.294,181,0.694,184,0.658,193,0.731,197,0.923,210,0.464,213,0.013,214,0.01,251,1.126,266,1.255,267,2.204,285,0.44,300,1.776,301,1.777,305,1.249,315,0.983,322,1.957,356,2.158,367,1.776,370,1.66,371,1.877,382,1.069,388,1.082,389,2.74,390,0.966,401,2.149,402,1.709,407,1.271,408,1.33,409,1.412,410,1.016,411,1.793,412,1.519,413,2.583,414,1.776,415,2.161,416,1.412,417,2.969,418,2.239,419,2.672,420,2.943,421,1.069,422,2.723,423,2.496,424,1.188,425,1.776,426,1.915,427,1.865,428,2.827,429,1.376,430,2.418,431,1.877,432,1.877,433,2.362,434,1.877,435,1.921,436,2.239,437,1.829,438,1.445,439,2.125,440,1.82,441,1.684,442,2.017,443,1.412,444,1.255,445,1.376,446,1.188,447,1.126,448,2.158,449,1.255,450,1.412,451,1.412,452,2.257,453,1.188,454,1.776,455,1.776,456,1.412,457,2.643,458,1.069,459,1.255,460,1.255,461,1.82,462,1.615,463,1.877,464,1.519,465,1.877,466,1.598,467,2.017,468,1.684,469,1.598,470,1.877,471,2.112,472,2.808,473,1.598,474,1.988,475,2.112,476,2.808,477,2.19,478,1.069,479,1.33,480,1.412,481,1.57,482,1.412,483,1.412,484,1.188,485,1.412,486,1.188,487,1.255,488,1.412,489,1.412,490,2.112,491,1.412,492,1.33,493,1.33,494,1.877,495,1.188,496,1.33,497,1.126,498,1.988,499,1.988,500,1.33,501,1.016]],["title/components/IssueCardComponent.html",[0,0.465,195,1.083]],["body/components/IssueCardComponent.html",[0,0.818,1,0.897,2,0.436,3,0.436,4,0.987,5,1.087,6,1.087,7,0.599,9,0.578,19,4.057,21,1.087,22,2.421,23,2.307,25,1.532,27,1.532,29,1.332,32,2.328,37,1.626,47,0.412,48,0.99,49,2.077,62,0.815,63,0.019,64,0.799,65,0.99,66,0.652,67,0.796,68,1.042,69,1.612,70,2.241,71,1.466,72,1.003,85,0.712,86,0.671,90,1.26,95,0.385,96,0.59,97,0.777,103,1.021,126,2.195,132,1.076,138,1.097,139,0.849,170,0.855,171,0.899,172,2.01,173,1.532,174,1.751,175,1.087,178,1.087,179,0.897,180,1.087,181,0.575,182,1.087,183,0.897,184,0.546,185,1.087,186,0.897,187,1.087,188,0.855,189,1.532,190,0.897,191,1.087,192,0.855,193,0.606,194,1.087,195,1.592,196,1.087,197,0.575,198,1.087,199,0.897,200,1.087,201,1.466,202,1.087,203,0.897,204,1.087,205,0.815,206,1.087,207,0.897,208,1.035,209,1.087,210,0.575,211,0.855,212,1.087,213,0.011,214,0.011,215,2.235,280,3.621,285,0.546,286,1.69,289,1.46,320,3.817,324,1.473,375,1.198,388,1.265,390,1.69,401,1.612,407,0.606,411,1.517,412,2.644,413,1.69,415,0.941,429,1.863,445,1.609,452,1.532,453,2.755,454,2.077,461,1.776,462,1.975,477,2.134,479,2.925,481,1.532,484,2.077,502,3.17,532,2.632,551,2.817,557,2.469,571,3.817,572,2.152,573,3.034,655,1.866,692,3.621,725,5.382,828,3.817,831,3.621,837,4.057,950,4.069,951,5.229,952,2.877,953,6.261,954,4.72,955,4.72,956,6.261,957,6.497,958,5.938,959,4.72,960,3.347,961,3.347,962,3.347,963,4.72,964,4.72,965,3.347,966,4.72,967,4.057,968,5.468,969,3.295,970,3.347,971,3.621,972,3.347,973,3.347,974,3.347,975,3.347,976,4.555,977,5.104,978,3.621,979,3.347,980,3.347,981,3.347,982,3.347,983,3.347,984,3.347,985,3.347,986,3.347,987,3.347,988,3.347,989,3.347,990,4.057,991,4.057,992,3.621]],["title/components/IssueContainerComponent.html",[0,0.465,197,0.694]],["body/components/IssueContainerComponent.html",[0,0.674,1,0.602,2,0.292,3,0.292,4,1.273,5,0.729,6,0.729,7,0.227,9,0.648,21,0.729,22,2.289,23,2.206,25,1.139,27,1.139,29,1.051,32,1.968,34,2.205,37,1.628,44,1.401,45,0.663,47,0.489,48,0.407,49,1.9,54,1.956,61,0.986,62,1.289,63,0.019,64,0.91,65,0.774,66,0.879,67,0.795,68,1.069,69,1.439,70,2.17,71,0.94,72,0.905,78,1.132,83,1.624,84,1.9,85,0.689,86,0.45,87,2.258,90,0.846,93,0.989,95,0.259,96,0.711,97,1.302,98,1.253,99,0.937,103,0.742,109,0.989,132,1.22,138,1.171,143,1.107,147,1.079,151,1.175,154,1.253,156,0.93,159,0.89,170,0.574,171,1.008,172,1.735,173,1.139,174,1.439,175,0.729,178,0.729,179,0.602,180,0.729,181,0.386,182,0.729,183,0.602,184,0.704,185,0.729,186,0.602,187,0.729,188,0.574,189,1.139,190,0.602,191,0.729,192,0.574,193,0.407,194,0.729,195,0.602,196,0.729,197,0.839,198,0.729,199,0.602,200,0.729,201,0.602,202,0.729,203,0.602,204,0.729,205,0.547,206,0.729,207,0.602,208,0.695,209,0.729,210,0.386,211,0.574,212,0.729,213,0.008,214,0.008,281,1.956,285,0.914,289,1.085,298,1.401,301,1.335,320,2.255,322,2.141,352,2.912,356,1.256,364,3.693,369,2.094,370,1.509,375,1.746,388,1.503,390,1.256,394,1.568,396,2.691,397,2.691,401,1.56,402,1.247,407,0.407,411,1.628,412,1.32,413,1.545,415,1.791,419,1.632,422,0.89,427,1.139,428,2.147,429,1.471,430,1.624,435,1.746,437,2.278,439,0.89,440,1.836,441,2.339,445,1.663,447,0.937,448,1.256,457,1.107,461,1.32,463,2.461,464,2.397,465,2.897,466,2.32,470,2.008,477,1.196,481,1.139,500,2.403,501,0.846,502,3.146,508,3.711,516,4.193,533,1.341,543,2.691,547,2.449,557,1.836,569,1.956,570,2.691,571,3.766,572,2.255,573,2.775,609,2.449,621,1.724,688,3.552,717,3.136,743,1.568,788,1.632,828,2.255,881,3.016,882,3.016,888,1.931,892,1.931,893,1.931,897,1.724,917,3.016,936,2.094,937,2.691,950,4.038,992,2.691,993,5.189,994,3.509,995,5.292,996,4.878,997,4.878,998,4.878,999,3.509,1000,3.509,1001,4.878,1002,3.509,1003,3.509,1004,4.878,1005,3.509,1006,5.608,1007,2.247,1008,2.247,1009,2.247,1010,3.509,1011,2.094,1012,3.509,1013,3.509,1014,5.292,1015,2.247,1016,5.292,1017,3.509,1018,2.247,1019,2.247,1020,2.247,1021,3.509,1022,2.247,1023,3.509,1024,3.509,1025,3.509,1026,3.509,1027,2.247,1028,4.878,1029,2.247,1030,3.509,1031,3.016,1032,2.691,1033,3.509,1034,2.691,1035,2.247,1036,2.247,1037,2.247,1038,2.247,1039,2.247,1040,2.247,1041,2.247,1042,2.247,1043,2.247,1044,2.247,1045,2.247,1046,2.247,1047,4.317,1048,2.247,1049,1.724,1050,2.247,1051,2.247,1052,2.247,1053,2.247,1054,3.509,1055,2.247,1056,2.247,1057,2.247,1058,2.247,1059,3.509,1060,6.491,1061,3.509,1062,2.247,1063,2.247,1064,2.247,1065,2.247,1066,2.247,1067,2.247,1068,2.247,1069,2.247,1070,2.247,1071,1.931,1072,2.247,1073,2.247,1074,3.016,1075,3.016,1076,4.878,1077,4.878]],["title/components/IssueDetailsComponent.html",[0,0.465,199,1.083]],["body/components/IssueDetailsComponent.html",[0,0.78,1,1.127,2,0.547,3,0.547,4,1.24,5,1.365,6,1.365,7,0.424,9,0.676,21,1.365,22,2.48,23,2.363,25,1.79,27,1.79,29,1.498,32,2.416,37,1.343,47,0.481,48,0.761,49,2.873,62,1.024,63,0.019,64,0.899,65,0.761,66,0.761,67,0.852,68,1.172,69,1.814,70,2.202,71,1.817,72,1.074,83,2.457,84,2.873,85,0.718,86,0.843,90,1.582,95,0.484,96,0.454,97,0.976,103,0.948,138,1.18,156,1.05,170,1.074,171,1.05,172,1.705,173,1.79,174,1.925,175,1.365,178,1.365,179,1.127,180,1.365,181,0.723,182,1.365,183,1.127,184,0.686,185,1.365,186,1.127,187,1.365,188,1.074,189,1.79,190,1.127,191,1.365,192,1.074,193,0.761,194,1.365,195,1.127,196,1.365,197,0.948,198,1.365,199,1.75,200,1.365,201,1.127,202,1.365,203,1.127,204,1.365,205,1.024,206,1.365,207,1.127,208,1.301,209,1.365,210,0.723,211,1.074,212,1.365,213,0.013,214,0.013,285,0.686,286,1.974,324,1.85,356,1.974,388,1.478,401,1.626,411,1.409,462,1.55,486,2.426,502,2.86,655,2.344,950,3.671,1078,4.718,1079,3.614,1080,5.513,1081,6.956,1082,4.205,1083,4.205,1084,4.205,1085,4.739,1086,5.513]],["title/interfaces/IssueItem.html",[407,0.731,462,1.136]],["body/interfaces/IssueItem.html",[2,0.36,3,0.36,7,0.279,9,0.772,12,1.808,17,1.106,45,0.815,47,0.632,48,0.744,63,0.019,64,0.404,65,0.999,66,0.988,67,0.877,72,1.097,75,1.4,77,0.741,78,1.412,85,0.535,95,0.745,96,0.298,103,0.706,132,0.475,136,1.285,138,1.124,139,0.81,147,0.611,156,0.935,165,1.334,171,1.159,181,0.706,184,0.67,193,0.744,197,0.843,210,0.475,213,0.012,214,0.01,251,1.153,266,1.911,267,2.306,285,0.451,300,1.808,301,1.795,305,1.271,315,1.001,322,1.334,356,1.471,367,1.808,370,1.68,371,1.285,382,1.094,388,0.741,389,2.537,390,0.989,401,2.173,402,1.483,407,1.276,408,1.361,409,1.446,410,1.04,411,1.719,412,1.546,413,2.592,414,1.808,415,2.166,416,1.446,417,2.996,418,2.265,419,2.929,420,2.389,421,1.094,422,2.298,423,2.525,424,1.216,425,1.808,426,1.942,427,1.884,428,2.676,429,1.4,430,2.435,431,1.911,432,1.911,433,2.389,434,1.911,435,1.944,436,2.265,437,1.671,438,1.756,439,1.942,440,1.846,441,1.714,442,2.046,443,1.446,444,1.285,445,1.4,446,1.216,447,1.153,448,2.316,449,1.285,450,1.446,451,1.446,452,2.362,453,1.216,454,2.158,455,2.158,456,1.446,457,2.416,458,1.094,459,1.285,460,1.285,461,1.546,462,1.631,463,1.285,464,1.04,465,1.285,466,1.094,467,2.046,468,1.153,469,1.094,470,1.285,471,1.446,472,1.446,473,1.094,474,1.361,475,1.446,476,1.446,477,2.438,478,1.627,479,2.024,480,2.841,481,2.044,482,2.841,483,2.841,484,1.808,485,1.446,486,1.808,487,1.285,488,1.446,489,1.446,490,2.15,491,1.446,492,1.361,493,1.361,494,1.911,495,1.216,496,1.361,497,1.153,498,2.024,499,2.024,500,1.361,501,1.04]],["title/components/IssueListComponent.html",[0,0.465,201,1.083]],["body/components/IssueListComponent.html",[0,0.753,1,1.015,2,0.493,3,0.493,4,1.117,5,1.229,6,1.229,7,0.382,9,0.63,21,1.229,22,2.454,23,2.339,25,1.669,27,1.669,29,1.422,32,2.377,37,1.644,44,1.229,47,0.546,48,0.686,60,3.275,61,1.445,62,0.922,63,0.019,64,0.956,65,0.864,66,0.71,68,1.112,69,1.721,70,2.089,71,1.754,72,1.145,85,0.76,86,0.759,90,1.425,95,0.436,96,0.408,97,0.879,103,0.884,107,4.419,132,0.884,138,1.138,143,2.875,156,0.98,170,0.968,171,0.98,172,1.59,173,1.669,174,1.846,175,1.229,178,1.229,179,1.015,180,1.229,181,0.651,182,1.229,183,1.015,184,0.617,185,1.229,186,1.015,187,1.229,188,0.968,189,1.669,190,1.015,191,1.229,192,0.968,193,0.686,194,1.229,195,1.015,196,1.229,197,0.651,198,1.229,199,1.015,200,1.229,201,1.678,202,1.229,203,1.015,204,1.229,205,0.922,206,1.229,207,1.015,208,1.171,209,1.229,210,0.651,211,0.968,212,1.229,213,0.012,214,0.012,285,0.617,286,1.84,289,1.59,305,1.59,315,0.922,324,1.666,375,1.356,401,1.117,407,0.686,411,1.314,438,1.84,448,1.84,462,1.76,466,2.036,477,1.752,481,1.895,495,1.666,502,3.211,571,4.024,572,2.434,573,3.305,655,2.111,788,2.391,936,3.068,937,3.943,950,4.121,1087,5.296,1088,3.255,1089,5.141,1090,5.141,1091,6.26,1092,6.26,1093,5.381,1094,6.26,1095,5.141,1096,3.787,1097,3.787,1098,3.787,1099,6.26,1100,3.787,1101,3.787,1102,3.787,1103,5.836,1104,5.141,1105,5.141,1106,3.787,1107,3.787,1108,3.787,1109,5.141,1110,5.141,1111,5.141,1112,5.141]],["title/components/IssueNavComponent.html",[0,0.465,203,1.083]],["body/components/IssueNavComponent.html",[0,0.656,1,0.71,2,0.345,3,0.345,4,0.782,5,0.86,6,0.86,7,0.267,9,0.652,16,1.852,17,0.759,21,0.86,22,2.348,23,2.238,25,1.293,27,1.293,29,1.165,32,2.224,33,3.624,34,2.607,37,1.622,44,0.86,47,0.542,48,0.866,52,2.56,59,2.083,61,1.345,62,1.165,63,0.019,64,0.833,65,0.826,66,0.734,67,0.734,68,1.32,69,1.766,70,2.287,71,1.812,72,1.136,73,1.712,74,2.965,75,1.63,76,2.667,77,1.282,78,1.11,85,0.809,86,0.798,90,0.997,91,1.704,93,1.166,95,0.305,96,0.286,97,1.483,103,0.685,112,1.704,132,1.222,138,1.144,139,0.488,147,1.324,156,1.269,162,1.306,170,0.677,171,0.759,172,1.232,173,1.293,174,1.963,175,0.86,178,0.86,179,0.71,180,0.86,181,0.456,182,0.86,183,0.71,184,0.432,185,0.86,186,0.71,187,0.86,188,0.677,189,1.293,190,0.71,191,0.86,192,0.677,193,0.48,194,0.86,195,0.71,196,0.86,197,0.456,198,0.86,199,0.71,200,0.86,201,0.71,202,0.86,203,1.425,204,0.86,205,0.646,206,0.86,207,0.71,208,0.82,209,0.86,210,0.456,211,0.677,212,0.86,213,0.01,214,0.01,239,2.733,285,0.432,286,2.287,289,1.232,298,1.553,307,2.56,315,0.646,318,3.574,324,1.166,352,2.377,356,1.426,359,4.079,361,4.079,362,4.079,364,2.779,367,1.752,373,3.403,374,4.901,375,1.904,377,2.378,379,2.033,380,3.249,381,3.055,382,2.106,388,1.425,401,1.41,411,1.018,419,2.473,437,2.178,462,1.901,464,2.253,478,1.577,495,1.166,502,3.144,655,1.478,688,2.22,689,2.779,864,3.423,922,2.033,950,4.036,990,3.423,991,3.423,992,3.055,1085,2.278,1093,3.423,1113,5.186,1114,2.278,1115,3.982,1116,3.982,1117,3.982,1118,5.318,1119,3.982,1120,3.982,1121,2.65,1122,2.65,1123,5.7,1124,5.7,1125,3.982,1126,3.982,1127,2.65,1128,2.65,1129,3.982,1130,2.65,1131,2.65,1132,2.65,1133,2.65,1134,2.65,1135,2.278,1136,2.278,1137,4.111,1138,4.111,1139,2.65,1140,3.423,1141,2.65,1142,2.65,1143,2.65,1144,3.982,1145,2.65,1146,2.65,1147,2.65,1148,5.318,1149,3.982,1150,3.982,1151,3.982,1152,3.982,1153,3.982,1154,4.571,1155,3.982,1156,3.982,1157,3.982,1158,3.982,1159,1.85,1160,2.278,1161,2.65,1162,1.387,1163,2.65,1164,3.055,1165,2.65,1166,2.65,1167,2.65,1168,2.65,1169,2.65,1170,2.65,1171,2.65,1172,2.65,1173,3.982,1174,3.982,1175,3.423]],["title/injectables/KatanaService.html",[33,2.113,277,1.685]],["body/injectables/KatanaService.html",[2,0.283,3,0.283,7,0.219,9,0.419,17,1.102,18,1.683,24,1.397,29,1.029,31,3.341,32,1.945,33,1.788,34,2.255,35,3.852,36,3.026,37,1.537,42,2.355,44,1.691,45,1.008,47,0.603,54,1.905,56,1.137,59,3.026,60,2.724,61,0.961,62,1.347,63,0.019,64,0.808,65,0.827,66,0.916,67,0.587,68,1.202,69,1.412,70,1.223,71,1.482,72,1.096,73,1.223,74,1.905,76,1.905,77,1.929,78,0.793,79,2.621,81,0.641,82,2.67,83,0.818,84,1.859,85,0.78,86,0.435,87,2.506,89,0.956,90,0.818,92,1.867,93,0.956,94,1.516,95,0.25,96,0.234,97,1.431,98,1.211,99,2.172,103,0.587,109,2.776,112,1.397,113,5.151,121,1.353,122,4.242,123,5.151,126,2.227,128,2.937,132,1.232,136,1.01,138,0.994,143,1.683,147,0.934,151,2.893,154,1.211,155,2.621,156,1.202,159,2.441,162,2.724,193,1.165,213,0.008,214,0.008,238,1.867,277,1.762,281,1.211,284,2.506,285,0.354,286,1.223,289,1.057,298,2.048,305,0.672,307,2.197,315,0.832,319,4.476,322,1.371,329,1.516,337,1.867,338,3.86,367,1.504,369,2.859,370,1.057,373,2.859,375,1.223,377,1.998,388,0.916,402,1.413,415,1.685,420,0.956,424,1.504,425,1.504,437,1.775,438,1.715,448,1.223,452,1.555,455,1.504,458,2.291,464,0.818,467,1.425,468,1.425,473,1.353,474,1.683,477,2.042,501,1.59,525,2.197,533,2.04,544,1.425,593,2.621,620,3.079,658,2.385,685,2.197,688,1.211,705,2.621,752,1.211,786,3.674,834,2.621,857,1.516,922,2.621,967,4.753,969,4.303,1071,1.867,1154,1.867,1160,4.753,1176,1.867,1177,4.789,1178,3.417,1179,3.417,1180,3.417,1181,4.789,1182,3.417,1183,2.173,1184,4.789,1185,3.417,1186,4.224,1187,2.621,1188,3.417,1189,2.173,1190,3.417,1191,2.173,1192,3.417,1193,2.173,1194,3.417,1195,2.173,1196,2.937,1197,2.173,1198,3.417,1199,2.173,1200,3.417,1201,4.789,1202,3.417,1203,4.789,1204,2.173,1205,2.948,1206,3.631,1207,2.173,1208,4.224,1209,1.211,1210,4.224,1211,2.173,1212,2.173,1213,2.173,1214,3.24,1215,3.674,1216,4.789,1217,4.789,1218,2.173,1219,4.789,1220,3.417,1221,2.173,1222,2.173,1223,2.385,1224,2.173,1225,5.53,1226,5.53,1227,3.417,1228,2.173,1229,4.789,1230,3.417,1231,2.173,1232,2.173,1233,3.417,1234,2.173,1235,2.173,1236,2.173,1237,3.417,1238,2.173,1239,3.417,1240,5.53,1241,4.789,1242,2.621,1243,2.621,1244,2.621,1245,2.173,1246,3.417,1247,2.173,1248,2.197,1249,2.173,1250,1.666,1251,1.666,1252,2.173,1253,1.867,1254,1.666,1255,2.173,1256,2.173,1257,2.173,1258,2.173,1259,1.666,1260,1.397,1261,1.666,1262,3.417,1263,3.417,1264,3.417,1265,3.417,1266,4.224,1267,2.173,1268,1.516,1269,5.785,1270,3.417,1271,2.621,1272,3.417,1273,2.937,1274,3.417,1275,3.417,1276,3.417,1277,4.789,1278,3.417,1279,2.173,1280,3.417,1281,3.417,1282,2.937,1283,2.173,1284,2.173,1285,2.173,1286,2.173,1287,2.173,1288,2.173,1289,2.173,1290,2.173,1291,1.666,1292,3.417,1293,2.173,1294,2.173,1295,2.173,1296,2.173,1297,2.173,1298,2.173,1299,2.173]],["title/classes/OptionModel.html",[96,0.436,422,1.6]],["body/classes/OptionModel.html",[2,0.621,3,0.621,7,0.481,9,0.732,29,1.59,37,1.59,39,3.332,44,1.548,45,1.762,62,1.161,63,0.019,64,0.697,65,0.658,66,1.06,67,0.732,68,1.139,85,0.621,95,0.549,96,0.645,97,1.107,103,1.027,132,1.027,159,1.888,197,1.027,205,1.456,213,0.014,214,0.014,281,2.659,285,0.777,289,1.849,298,2.288,315,1.161,352,4.292,370,1.849,401,2.21,420,3.101,421,1.888,422,2.366,428,3.164,1300,4.099,1301,5.976,1302,5.976,1303,5.976,1304,4.584,1305,6.842,1306,5.976,1307,5.976,1308,4.768,1309,5.976,1310,5.976,1311,6.527,1312,4.768,1313,4.768,1314,4.768,1315,4.768,1316,5.976,1317,4.768,1318,4.768]],["title/components/OptionsViewComponent.html",[0,0.465,205,0.984]],["body/components/OptionsViewComponent.html",[0,0.726,1,0.745,2,0.362,3,0.362,4,0.82,5,0.902,6,0.902,7,0.28,9,0.667,13,2.88,16,1.919,17,1.038,18,2.033,21,0.902,22,2.364,23,2.253,25,1.34,27,1.34,29,1.199,31,3.691,32,2.149,33,3.691,34,2.631,37,1.665,44,0.902,45,1.217,47,0.565,48,0.891,53,2.301,61,1.635,62,0.677,63,0.019,64,0.719,65,0.871,66,1.024,67,0.826,68,1.235,69,1.715,70,2.082,71,1.634,72,1.09,73,1.762,74,2.744,75,1.677,76,2.744,77,1.319,78,1.142,85,0.862,86,0.557,89,1.223,90,1.046,91,1.787,93,1.223,95,0.32,96,0.445,97,1.415,99,1.721,103,0.709,126,2.834,132,1.085,138,0.898,139,0.667,143,1.369,156,0.786,170,0.71,171,0.786,172,1.277,173,1.34,174,1.715,175,0.902,178,0.902,179,0.745,180,0.902,181,0.478,182,0.902,183,0.745,184,0.453,185,0.902,186,0.745,187,0.902,188,0.71,189,1.34,190,0.745,191,0.902,192,0.71,193,0.503,194,0.902,195,0.745,196,0.902,197,0.478,198,0.902,199,0.745,200,0.902,201,0.745,202,0.902,203,0.745,204,0.902,205,1.326,206,0.902,207,0.745,208,0.86,209,0.902,210,0.478,211,0.71,212,0.902,213,0.01,214,0.01,239,2.776,261,5.308,262,4.83,267,1.978,285,0.453,286,2.082,289,1.277,298,1.598,301,1.522,309,2.133,315,0.677,318,3.638,322,1.34,324,1.223,329,1.94,350,3.858,359,4.177,361,4.177,362,4.177,364,2.88,373,3.472,374,5.308,375,2.182,377,2.632,379,2.133,380,3.301,381,3.165,382,2.156,384,3.547,388,1.106,394,1.94,401,1.451,407,0.503,411,1.055,420,2.965,421,1.101,422,2.668,424,1.816,425,1.816,426,2.156,428,2.682,433,2.396,435,1.477,445,1.406,501,1.553,532,2.301,544,1.721,552,3.165,620,1.787,695,2.133,752,2.301,766,4.681,910,2.463,1074,3.547,1075,3.547,1137,4.23,1138,4.23,1175,3.547,1273,2.39,1319,2.133,1320,3.547,1321,3.547,1322,5.445,1323,5.445,1324,4.127,1325,2.78,1326,2.78,1327,4.127,1328,2.78,1329,3.165,1330,3.165,1331,4.127,1332,4.127,1333,2.78,1334,2.78,1335,2.78,1336,2.78,1337,2.78,1338,2.78,1339,2.78,1340,2.78,1341,2.78,1342,2.78,1343,2.78,1344,2.78,1345,2.78,1346,2.78,1347,2.78,1348,2.78,1349,2.78,1350,2.78,1351,2.78,1352,2.78,1353,2.78,1354,2.78,1355,2.78,1356,2.78,1357,4.127,1358,3.547,1359,4.127]],["title/modules/SidebarModule.html",[215,1.52,226,2.597]],["body/modules/SidebarModule.html",[2,0.668,3,0.668,7,0.518,55,3.065,63,0.019,68,0.978,72,1.042,85,0.974,86,1.029,89,2.26,95,0.808,96,0.554,121,2.033,170,1.312,186,1.962,188,1.871,190,2.05,213,0.015,214,0.015,215,2.354,217,2.863,218,4.337,219,3.301,226,4.896,228,4.021,233,4.366,234,4.366,239,2.26,260,3.939,380,2.686,647,3.939,693,3.939,899,3.939,943,4.799,944,3.584,945,4.799,1360,4.414,1361,4.414,1362,4.414,1363,5.135,1364,5.135,1365,5.135]],["title/components/StatBadgeComponent.html",[0,0.465,207,1.083]],["body/components/StatBadgeComponent.html",[0,0.775,1,1.105,2,0.537,3,0.537,4,1.216,5,1.338,6,1.338,7,0.416,9,0.505,21,1.338,22,2.475,23,2.359,25,1.767,27,1.767,29,1.641,37,1.641,44,1.767,47,0.475,48,0.747,63,0.019,64,0.795,65,0.894,66,0.569,72,0.941,85,0.537,86,0.826,95,0.475,96,0.445,138,1.04,170,1.054,171,1.037,172,1.683,173,1.767,174,1.91,175,1.338,178,1.338,179,1.105,180,1.338,181,0.709,182,1.338,183,1.105,184,0.672,185,1.338,186,1.105,187,1.338,188,1.054,189,1.767,190,1.105,191,1.338,192,1.054,193,0.747,194,1.338,195,1.105,196,1.338,197,0.709,198,1.338,199,1.105,200,1.338,201,1.105,202,1.338,203,1.105,204,1.338,205,1.004,206,1.338,207,1.736,208,2.182,209,1.338,210,0.709,211,1.054,212,1.338,213,0.013,214,0.013,285,0.672,315,1.326,388,1.459,411,1.83,413,2.476,415,1.945,429,2.076,461,2.048,481,2.324,502,3.217,827,3.798,897,4.174,1366,5.946,1367,5.306,1368,3.544,1369,6.918,1370,5.442,1371,5.442,1372,5.442,1373,4.701,1374,7.054,1375,7.054,1376,6.092,1377,5.442,1378,4.174,1379,4.123,1380,4.123,1381,4.123,1382,4.123,1383,4.123,1384,4.123,1385,4.123]],["title/injectables/ToastService.html",[35,2.597,277,1.685]],["body/injectables/ToastService.html",[2,0.574,3,0.574,7,0.445,9,0.771,17,1.343,20,4.887,24,2.834,29,1.676,35,3.655,37,1.533,52,3.655,62,1.385,63,0.019,64,0.831,66,0.785,68,1.083,73,2.035,77,1.182,79,5.629,80,6.056,85,0.74,86,0.883,87,2.307,95,0.508,96,0.476,97,1.32,101,5.409,122,3.382,123,3.382,132,1.143,193,1.329,213,0.014,214,0.014,239,1.94,277,2.625,285,0.719,289,2.057,373,2.632,375,2.035,380,2.307,402,1.127,411,1.856,415,1.24,430,2.651,458,2.93,685,4.423,743,3.078,805,5.405,857,3.078,889,3.79,1206,4.887,1253,3.79,1282,4.887,1386,3.79,1387,5.686,1388,5.686,1389,4.409,1390,5.686,1391,4.409,1392,5.686,1393,4.409,1394,5.686,1395,4.409,1396,4.409,1397,6.293,1398,5.686,1399,4.409,1400,4.409,1401,4.409,1402,4.409,1403,5.686,1404,5.686,1405,5.686,1406,5.686,1407,4.409,1408,4.409]],["title/interfaces/Tool.html",[47,0.352,407,0.731]],["body/interfaces/Tool.html",[2,0.344,3,0.344,7,0.267,9,0.828,12,1.75,17,1.183,45,1.172,47,0.648,48,0.479,63,0.019,64,0.386,65,1.015,66,1.019,67,0.894,72,1.08,75,0.901,77,1.066,78,1.482,85,0.518,95,0.735,96,0.285,103,0.683,132,0.455,136,1.849,138,1.089,139,0.8,147,0.585,156,0.91,165,1.291,171,1.183,181,0.821,184,0.648,193,0.72,197,0.979,210,0.683,213,0.012,214,0.01,251,1.103,266,1.23,267,2.306,285,0.431,300,2.102,301,1.762,305,1.23,315,0.968,322,1.291,356,1.423,367,1.75,370,1.851,371,1.23,382,1.574,388,0.709,389,2.664,390,0.947,401,2.121,402,1.455,407,1.277,408,1.303,409,1.384,410,0.995,411,1.769,412,2.143,413,2.575,414,2.506,415,2.173,416,1.384,417,2.947,418,2.376,419,2.782,420,2.338,421,1.047,422,2.255,423,2.782,424,1.164,425,1.75,426,2.587,427,1.849,428,2.633,429,1.355,430,2.403,431,1.849,432,1.849,433,2.338,434,1.849,435,1.902,436,2.216,437,1.81,438,1.423,439,2.587,440,1.999,441,1.993,442,2.664,443,1.384,444,1.23,445,1.628,446,1.164,447,1.103,448,2.382,449,2.471,450,2.08,451,2.08,452,2.269,453,1.75,454,2.102,455,2.102,456,1.384,457,2.353,458,1.574,459,1.849,460,2.471,461,1.496,462,1.493,463,1.23,464,0.995,465,1.23,466,1.047,467,1.658,468,1.103,469,1.047,470,1.23,471,1.384,472,1.384,473,1.047,474,1.303,475,1.384,476,1.384,477,2.176,478,1.047,479,1.303,480,1.384,481,1.551,482,1.384,483,1.384,484,1.164,485,1.384,486,1.164,487,1.23,488,1.384,489,1.384,490,2.08,491,1.384,492,1.303,493,1.303,494,1.849,495,1.164,496,1.303,497,1.103,498,1.958,499,1.958,500,1.303,501,0.995]],["title/modules/ToolPageModule.html",[215,1.52,227,2.597]],["body/modules/ToolPageModule.html",[2,0.606,3,0.606,7,0.469,47,0.406,55,2.777,63,0.019,68,0.886,85,0.991,86,0.932,89,2.047,95,0.743,96,0.502,121,1.842,138,1.08,170,1.189,183,1.915,184,0.758,195,1.915,197,1.228,199,1.915,201,1.915,203,1.915,207,1.915,208,1.439,211,1.826,213,0.014,214,0.014,215,2.214,217,2.594,218,4.148,219,2.99,227,4.965,228,3.782,233,4.107,234,4.107,239,2.047,254,2.99,257,3.247,258,3.568,380,2.434,421,1.842,502,2.163,504,3.568,942,3.998,943,4.513,944,3.247,945,4.513,948,5.547,949,5.547,951,3.568,993,3.568,1078,3.568,1087,3.568,1113,3.568,1367,3.568,1409,3.998,1410,3.998,1411,4.652,1412,4.652,1413,4.652,1414,4.652,1415,4.652,1416,4.652,1417,4.652]],["title/components/ToolSelectionComponent.html",[0,0.465,210,0.694]],["body/components/ToolSelectionComponent.html",[0,0.781,1,1.13,2,0.549,3,0.549,4,1.243,5,1.368,6,1.368,7,0.425,9,0.677,21,1.368,22,2.48,23,2.364,25,1.792,27,1.792,29,1.5,32,2.335,34,2.802,37,1.345,47,0.661,48,1.115,49,2.71,62,1.026,63,0.019,64,0.9,65,0.762,66,0.762,67,0.755,68,1.293,69,2,70,2.428,71,1.865,72,1.048,78,1.429,83,2.317,84,2.71,85,0.802,86,0.844,90,1.586,93,1.854,95,0.485,96,0.455,97,1.282,99,1.758,103,0.949,138,1.048,170,1.077,171,1.052,172,1.708,173,1.792,174,1.927,175,1.368,178,1.368,179,1.13,180,1.368,181,0.724,182,1.368,183,1.13,184,0.687,185,1.368,186,1.13,187,1.368,188,1.077,189,1.792,190,1.13,191,1.368,192,1.077,193,0.763,194,1.368,195,1.13,196,1.368,197,0.724,198,1.368,199,1.13,200,1.368,201,1.13,202,1.368,203,1.13,204,1.368,205,1.026,206,1.368,207,1.13,208,1.304,209,1.368,210,1.123,211,1.077,212,1.368,213,0.013,214,0.013,254,3.958,259,4.298,285,0.687,286,1.976,324,1.854,350,3.433,394,2.941,405,4.746,406,4.746,694,3.232,697,4.746,698,5.83,726,3.622,1205,3.853,1418,4.214]],["title/injectables/ToolService.html",[34,1.52,277,1.685]],["body/injectables/ToolService.html",[2,0.444,3,0.444,7,0.344,9,0.586,17,1.407,18,2.356,24,2.192,29,1.345,30,2.616,31,3.742,34,1.8,37,1.766,44,2.047,45,1.41,47,0.667,48,0.866,53,3.338,59,2.502,60,2.502,62,1.345,63,0.019,64,0.807,65,0.945,66,0.926,67,0.734,69,1.765,70,1.712,71,1.836,77,1.282,78,1.59,85,0.719,86,0.683,89,1.501,95,0.393,96,0.368,97,0.792,98,1.901,103,0.822,109,2.635,131,4.111,132,1.029,139,0.586,147,1.445,156,1.305,159,1.35,171,1.141,184,0.78,213,0.012,214,0.012,267,2.396,277,2.304,285,0.556,301,2.022,305,2.022,315,1.536,375,1.712,388,1.282,389,1.995,398,2.931,404,4.111,407,0.617,411,1.222,412,2.253,413,2.143,414,2.635,415,1.553,424,2.104,435,2.34,458,1.894,477,1.63,551,2.855,556,3.668,744,3.338,850,2.931,857,2.38,1205,3.338,1223,4.179,1378,3.668,1419,2.931,1420,5.987,1421,5.987,1422,5.987,1423,5.987,1424,5.987,1425,3.41,1426,3.41,1427,3.41,1428,3.668,1429,3.41,1430,4.111,1431,4.782,1432,4.111,1433,3.41,1434,4.782,1435,4.782,1436,3.41,1437,4.782,1438,3.41,1439,4.782,1440,3.41,1441,3.41,1442,4.111,1443,4.782,1444,3.41,1445,3.41,1446,3.41,1447,4.782,1448,3.41,1449,3.41,1450,3.41,1451,3.41,1452,6.305,1453,3.41,1454,5.523,1455,6.305,1456,3.41,1457,5.523,1458,4.782,1459,3.41,1460,3.41,1461,4.782,1462,3.41,1463,4.782,1464,3.41,1465,4.782,1466,4.782]],["title/components/ToolViewComponent.html",[0,0.465,211,1.032]],["body/components/ToolViewComponent.html",[0,0.763,1,1.054,2,0.512,3,0.512,4,1.159,5,1.276,6,1.276,7,0.396,9,0.646,21,1.276,22,2.464,23,2.348,25,1.712,27,1.712,29,1.449,32,2.391,34,2.789,37,1.548,47,0.653,48,1.2,62,0.958,63,0.019,64,0.869,65,0.821,66,0.728,68,1.3,69,2.012,70,2.443,71,1.869,72,1.108,78,1.381,85,0.774,86,0.788,90,1.479,93,1.73,95,0.453,96,0.424,97,1.224,103,0.906,112,2.527,132,1.173,138,1.077,143,2.597,156,1.328,170,1.005,171,1.005,172,1.631,173,1.712,174,1.874,175,1.276,178,1.276,179,1.054,180,1.276,181,0.676,182,1.276,183,1.054,184,0.641,185,1.276,186,1.054,187,1.276,188,1.005,189,1.712,190,1.054,191,1.276,192,1.005,193,0.712,194,1.276,195,1.054,196,1.276,197,0.676,198,1.276,199,1.054,200,1.276,201,1.054,202,1.276,203,1.054,204,1.276,205,0.958,206,1.276,207,1.054,208,1.216,209,1.276,210,0.676,211,1.624,212,1.276,213,0.013,214,0.013,254,4.262,257,4.627,285,0.641,286,2.373,289,1.631,324,1.73,388,1.413,438,1.887,445,1.797,462,1.105,502,3.083,653,5.464,655,2.192,664,4.044,689,3.68,806,4.532,876,3.379,1140,3.379,1319,3.016,1320,4.532,1321,4.532,1467,3.931,1468,3.931,1469,3.931,1470,3.931,1471,3.931,1472,3.931,1473,5.272,1474,5.272]],["title/coverage.html",[1475,4.615]],["body/coverage.html",[0,0.879,1,1.178,7,0.443,8,3.777,32,1.426,33,2.299,34,1.654,35,2.825,36,2.299,47,0.383,63,0.019,65,0.606,72,0.679,96,0.474,138,0.679,179,1.178,181,0.755,183,1.178,186,1.178,188,1.123,190,1.178,192,1.123,195,1.178,197,0.755,199,1.178,201,1.178,203,1.178,205,1.07,207,1.178,210,0.755,211,1.123,213,0.014,214,0.014,248,2.623,254,3.647,257,3.067,259,3.067,261,3.371,262,3.067,263,3.96,267,1.426,277,2.867,278,3.777,298,1.426,350,3.832,351,3.777,387,3.777,407,1.314,408,3.575,418,1.833,422,1.74,426,1.74,439,1.74,442,1.833,462,1.235,502,3.375,503,3.777,504,3.371,505,3.777,621,3.371,646,4.385,647,3.371,648,3.777,693,3.371,694,4.352,714,2.825,801,3.777,899,3.371,900,3.777,925,3.777,950,4.103,951,3.371,952,3.777,993,3.371,1078,3.371,1079,3.777,1087,3.371,1088,3.777,1113,3.371,1114,3.777,1176,3.777,1300,3.777,1319,4.352,1366,3.777,1367,3.371,1368,3.777,1386,3.777,1419,3.777,1475,3.777,1476,2.299,1477,4.394,1478,7.758,1479,4.394,1480,6.283,1481,6.874,1482,5.673,1483,4.394,1484,3.777,1485,3.067,1486,4.394,1487,5.673,1488,4.394,1489,4.394,1490,5.673,1491,5.673,1492,4.394,1493,6.639,1494,4.394,1495,4.394,1496,4.394,1497,5.673,1498,4.394,1499,4.394,1500,4.394,1501,4.394,1502,4.394,1503,4.394,1504,4.394,1505,4.394]],["title/dependencies.html",[217,2.687,1506,2.963]],["body/dependencies.html",[63,0.019,75,2.108,81,1.824,86,1.01,89,2.218,168,2.81,213,0.015,214,0.015,217,2.81,231,5.316,232,4.744,236,4.332,239,2.721,240,4.332,241,4.744,243,3.866,380,3.65,402,1.288,421,1.996,452,1.636,944,3.518,1032,3.866,1135,4.332,1136,5.316,1196,4.332,1430,4.332,1507,5.04,1508,7.512,1509,5.04,1510,5.04,1511,5.04,1512,5.04,1513,5.04,1514,5.04,1515,5.04,1516,5.04,1517,6.185,1518,5.04,1519,5.04,1520,5.04,1521,5.04,1522,5.04,1523,5.04,1524,5.04,1525,5.04,1526,3.448,1527,5.04,1528,5.04,1529,5.04,1530,3.866,1531,5.04,1532,5.04,1533,5.04,1534,5.04,1535,5.04,1536,5.04,1537,6.185,1538,5.04,1539,6.185,1540,5.04,1541,5.04,1542,5.04,1543,5.04,1544,5.04,1545,5.04,1546,5.04,1547,5.04,1548,5.04,1549,5.04,1550,5.04,1551,5.04,1552,5.04,1553,5.04,1554,5.04,1555,5.04,1556,5.04,1557,5.04]],["title/index.html",[285,0.562,760,2.644,1248,2.216]],["body/index.html",[7,0.51,45,1.492,47,0.541,56,2.647,61,1.884,63,0.016,67,0.856,68,0.964,70,1.811,77,1.662,81,1.828,126,2.883,147,1.371,162,2.492,213,0.015,214,0.015,248,3.02,284,2.647,305,1.565,352,4.279,407,0.916,410,1.904,427,1.642,452,2.013,467,2.111,506,3.252,544,2.796,569,2.821,788,3.249,805,3.881,834,3.881,977,4.349,1032,4.756,1162,3.243,1209,2.821,1248,3.252,1254,3.881,1260,3.252,1476,3.243,1485,3.532,1558,5.762,1559,4.349,1560,5.06,1561,6.2,1562,5.06,1563,4.349,1564,5.762,1565,5.06,1566,5.06,1567,5.06,1568,5.06,1569,5.06,1570,5.06,1571,5.06,1572,4.327,1573,6.2,1574,6.987,1575,5.06,1576,5.06,1577,5.06,1578,5.06,1579,5.06,1580,6.703,1581,5.06,1582,5.06,1583,5.06,1584,3.252,1585,4.349,1586,5.06,1587,5.06,1588,3.881,1589,4.756,1590,5.06,1591,5.06,1592,1.724,1593,5.06,1594,5.06,1595,5.06,1596,5.06,1597,5.06,1598,5.06,1599,5.06,1600,5.06,1601,5.06,1602,5.329,1603,5.06,1604,3.881,1605,3.881,1606,6.987,1607,3.881]],["title/modules.html",[215,2.02]],["body/modules.html",[63,0.016,213,0.016,214,0.016,215,2.22,216,4.117,225,3.792,226,3.792,227,3.792,232,5.636,1608,7.347,1609,7.347,1610,7.347]],["title/overview.html",[1611,2.809]],["body/overview.html",[0,0.54,1,1.949,36,3.389,55,2.801,63,0.019,68,0.894,95,0.54,96,0.506,121,1.858,170,1.199,179,1.949,181,1.114,183,1.737,186,1.737,188,1.656,190,1.949,192,1.858,195,1.737,197,1.114,199,1.737,201,1.737,203,1.737,205,1.578,207,1.737,210,1.114,211,1.656,213,0.014,214,0.014,215,2.226,216,5.298,217,2.616,218,3.016,219,3.016,220,4.033,221,4.033,222,4.033,223,4.033,224,4.033,225,4.913,226,4.805,227,4.96,228,3.803,277,1.957,407,0.85,609,3.275,677,3.599,898,4.033,939,4.033,940,4.033,941,4.033,1360,4.033,1361,4.033,1362,4.033,1409,4.033,1410,4.033,1611,2.454,1612,4.692,1613,4.692]],["title/miscellaneous/variables.html",[1485,3.363,1614,2.963]],["body/miscellaneous/variables.html",[44,1.863,61,1.988,63,0.018,65,0.792,67,0.703,81,1.971,82,3.199,213,0.016,214,0.016,248,4.221,285,0.936,315,1.398,402,1.708,1260,3.689,1484,4.933,1485,4.005,1614,4.933,1615,5.738,1616,5.738,1617,5.738,1618,5.738,1619,5.738,1620,5.738,1621,5.738,1622,5.738,1623,5.738,1624,5.738,1625,5.738,1626,5.738,1627,5.738]],["title/additional-documentation/architecture.html",[139,0.422,1592,1.175,1607,2.644]],["body/additional-documentation/architecture.html",[63,0.016,77,1.593,213,0.017,214,0.017,1432,5.11,1476,3.569,1607,5.233,1611,3.11,1628,4.761,1629,5.944,1630,5.944,1631,5.944,1632,4.56,1633,4.149,1634,5.11,1635,4.149]],["title/additional-documentation/architecture/server-endpoints.html",[77,0.806,139,0.368,1592,1.024,1635,2.098]],["body/additional-documentation/architecture/server-endpoints.html",[63,0.016,77,1.843,213,0.017,214,0.017,370,1.865,410,2.269,1628,4.208,1635,4.8]],["title/additional-documentation/architecture/discover-&-fix-workflow.html",[63,0.006,139,0.293,437,0.816,438,0.857,1592,0.816,1636,2.058]],["body/additional-documentation/architecture/discover-&-fix-workflow.html",[47,0.597,63,0.017,67,0.733,213,0.017,214,0.017,437,2.039,438,2.141,1011,4.086,1584,3.845,1636,5.885,1637,5.982]],["title/additional-documentation/architecture/data-flow-diagram.html",[139,0.327,969,1.86,1592,0.908,1632,2.044,1638,2.291]],["body/additional-documentation/architecture/data-flow-diagram.html",[63,0.016,213,0.017,214,0.017]],["title/additional-documentation/architecture/high-level-overview.html",[139,0.327,1592,0.908,1611,1.394,1633,1.86,1634,2.291]],["body/additional-documentation/architecture/high-level-overview.html",[63,0.016,213,0.017,214,0.017]],["title/additional-documentation/setup.html",[139,0.422,1162,1.803,1592,1.175]],["body/additional-documentation/setup.html",[17,1.105,39,3.234,47,0.587,52,3.728,61,1.63,63,0.016,81,2.095,147,1.282,165,1.883,169,3.034,213,0.016,214,0.016,298,1.883,305,2.197,370,1.794,478,2.296,506,3.728,544,2.419,567,4.449,1011,4.014,1162,3.034,1476,3.518,1628,4.048,1639,4.985,1640,5.8,1641,4.985,1642,4.449,1643,4.449]],["title/additional-documentation/setup/setting-up-firebase.html",[81,0.786,139,0.327,147,0.589,544,1.112,1592,0.908]],["body/additional-documentation/setup/setting-up-firebase.html",[4,1.153,7,0.496,9,0.858,12,0.851,16,1.449,17,1.131,18,0.953,39,1.737,42,2.93,44,0.628,45,1.153,46,4.031,47,0.649,48,0.35,59,1.012,60,1.63,61,0.544,63,0.019,64,0.718,65,0.932,66,1.028,67,0.644,68,0.937,69,0.57,71,1.408,72,0.604,73,2.492,74,3.081,75,1.528,78,1.041,97,1.473,103,0.771,106,1.243,109,2.164,121,0.766,126,1.819,132,0.845,138,1.093,139,0.727,147,1.347,151,3.813,154,1.078,156,0.937,159,0.766,169,1.63,171,1.246,174,1.322,184,0.508,213,0.008,214,0.008,215,0.728,239,0.851,251,0.807,267,1.456,284,1.63,297,2.174,298,2.093,300,0.851,301,1.21,303,1.154,305,1.21,315,0.759,322,1.456,338,2.174,356,2.369,369,4.156,370,1.926,377,0.807,388,1.048,390,0.692,402,1.862,410,1.172,411,1.671,412,1.85,413,2.459,414,1.371,415,1.969,418,1.299,423,1.819,426,1.776,427,1.926,429,1.959,430,2.518,431,2.287,432,2.287,433,1.974,434,1.449,436,2.597,437,2.412,438,2.34,439,2.081,440,1.472,441,1.632,442,1.871,444,0.899,445,1.883,446,1.371,447,0.807,448,1.606,449,1.449,452,2.212,453,1.974,454,1.371,455,0.851,458,0.766,459,1.449,460,0.899,461,1.688,462,1.881,464,1.85,466,1.234,467,1.299,468,1.871,469,1.549,477,2.4,478,1.234,481,0.628,484,0.851,486,2.432,487,0.899,497,1.632,501,1.172,522,2.39,525,2.883,526,1.484,532,1.737,533,3.137,534,1.484,544,1.299,547,1.35,551,1.154,564,1.484,587,1.35,610,2.39,628,4.239,658,3.13,661,1.484,685,2.003,688,3.205,714,2.003,717,2.003,718,3.857,724,5.077,744,2.174,748,1.484,749,1.484,752,1.078,767,3.772,768,2.003,827,3.432,828,3.552,840,1.484,887,1.484,894,2.39,910,1.86,930,3.001,936,1.154,971,1.484,976,3.44,978,2.39,1011,3.636,1034,1.484,1159,2.174,1162,1.012,1164,2.39,1187,1.484,1214,2.39,1215,3.44,1223,2.174,1242,2.39,1243,2.39,1244,2.39,1248,1.243,1250,1.484,1251,1.484,1259,2.39,1260,1.243,1261,2.39,1268,1.35,1271,1.484,1291,3.44,1304,1.484,1330,1.484,1373,1.35,1428,1.484,1476,1.012,1526,2.501,1530,1.484,1572,3.13,1584,2.514,1588,1.484,1589,2.39,1604,3.772,1611,1.012,1633,1.35,1642,1.484,1643,1.484,1644,6.228,1645,1.663,1646,2.678,1647,1.663,1648,1.663,1649,2.678,1650,4.239,1651,1.663,1652,1.663,1653,1.663,1654,1.663,1655,2.678,1656,1.663,1657,1.663,1658,3.855,1659,1.663,1660,2.678,1661,1.663,1662,1.663,1663,2.678,1664,1.663,1665,1.663,1666,1.663,1667,3.362,1668,2.678,1669,2.678,1670,1.663,1671,1.663,1672,2.678,1673,1.663,1674,1.663,1675,1.663,1676,1.663,1677,1.663,1678,2.678,1679,1.663,1680,1.663,1681,1.663,1682,1.484,1683,1.663,1684,2.678,1685,4.227,1686,1.663,1687,1.663,1688,2.678,1689,4.227,1690,3.44,1691,2.678,1692,1.663,1693,1.663,1694,3.362,1695,2.678,1696,3.362,1697,2.678,1698,1.663,1699,1.663,1700,1.663,1701,2.678,1702,2.678,1703,1.663,1704,2.678,1705,2.678,1706,6.02,1707,1.663,1708,2.678,1709,1.663,1710,1.663,1711,1.663,1712,1.663,1713,1.663,1714,1.663,1715,1.663,1716,4.227,1717,1.663,1718,1.663,1719,2.678,1720,1.663,1721,1.663,1722,1.663,1723,2.678,1724,1.663,1725,1.663,1726,1.484,1727,1.663,1728,1.663,1729,1.663,1730,1.35,1731,1.663,1732,1.663,1733,1.663,1734,1.663,1735,1.663,1736,1.663,1737,1.663,1738,1.663,1739,1.663,1740,1.663,1741,1.663]],["title/additional-documentation/setup/development-environment.html",[139,0.368,248,1.794,788,1.398,1592,1.024]],["body/additional-documentation/setup/development-environment.html",[63,0.016,213,0.017,214,0.017,248,3.622,788,2.822,1611,3.174]],["title/additional-documentation/setup/node-tools.html",[47,0.262,139,0.368,1011,1.794,1592,1.024]],["body/additional-documentation/setup/node-tools.html",[4,1.153,7,0.496,9,0.858,12,0.851,16,1.449,17,1.131,18,0.953,39,1.737,42,2.93,44,0.628,45,1.153,46,4.031,47,0.649,48,0.35,59,1.012,60,1.63,61,0.544,63,0.019,64,0.718,65,0.932,66,1.028,67,0.644,68,0.937,69,0.57,71,1.408,72,0.604,73,2.492,74,3.081,75,1.528,78,1.041,97,1.473,103,0.771,106,1.243,109,2.164,121,0.766,126,1.819,132,0.845,138,1.093,139,0.727,147,1.347,151,3.813,154,1.078,156,0.937,159,0.766,169,1.63,171,1.246,174,1.322,184,0.508,213,0.008,214,0.008,215,0.728,239,0.851,251,0.807,267,1.456,284,1.63,297,2.174,298,2.093,300,0.851,301,1.21,303,1.154,305,1.21,315,0.759,322,1.456,338,2.174,356,2.369,369,4.156,370,1.926,377,0.807,388,1.048,390,0.692,402,1.862,410,1.172,411,1.671,412,1.85,413,2.459,414,1.371,415,1.969,418,1.299,423,1.819,426,1.776,427,1.926,429,1.959,430,2.518,431,2.287,432,2.287,433,1.974,434,1.449,436,2.597,437,2.412,438,2.34,439,2.081,440,1.472,441,1.632,442,1.871,444,0.899,445,1.883,446,1.371,447,0.807,448,1.606,449,1.449,452,2.212,453,1.974,454,1.371,455,0.851,458,0.766,459,1.449,460,0.899,461,1.688,462,1.881,464,1.85,466,1.234,467,1.299,468,1.871,469,1.549,477,2.4,478,1.234,481,0.628,484,0.851,486,2.432,487,0.899,497,1.632,501,1.172,522,2.39,525,2.883,526,1.484,532,1.737,533,3.137,534,1.484,544,1.299,547,1.35,551,1.154,564,1.484,587,1.35,610,2.39,628,4.239,658,3.13,661,1.484,685,2.003,688,3.205,714,2.003,717,2.003,718,3.857,724,5.077,744,2.174,748,1.484,749,1.484,752,1.078,767,3.772,768,2.003,827,3.432,828,3.552,840,1.484,887,1.484,894,2.39,910,1.86,930,3.001,936,1.154,971,1.484,976,3.44,978,2.39,1011,3.636,1034,1.484,1159,2.174,1162,1.012,1164,2.39,1187,1.484,1214,2.39,1215,3.44,1223,2.174,1242,2.39,1243,2.39,1244,2.39,1248,1.243,1250,1.484,1251,1.484,1259,2.39,1260,1.243,1261,2.39,1268,1.35,1271,1.484,1291,3.44,1304,1.484,1330,1.484,1373,1.35,1428,1.484,1476,1.012,1526,2.501,1530,1.484,1572,3.13,1584,2.514,1588,1.484,1589,2.39,1604,3.772,1611,1.012,1633,1.35,1642,1.484,1643,1.484,1644,6.228,1645,1.663,1646,2.678,1647,1.663,1648,1.663,1649,2.678,1650,4.239,1651,1.663,1652,1.663,1653,1.663,1654,1.663,1655,2.678,1656,1.663,1657,1.663,1658,3.855,1659,1.663,1660,2.678,1661,1.663,1662,1.663,1663,2.678,1664,1.663,1665,1.663,1666,1.663,1667,3.362,1668,2.678,1669,2.678,1670,1.663,1671,1.663,1672,2.678,1673,1.663,1674,1.663,1675,1.663,1676,1.663,1677,1.663,1678,2.678,1679,1.663,1680,1.663,1681,1.663,1682,1.484,1683,1.663,1684,2.678,1685,4.227,1686,1.663,1687,1.663,1688,2.678,1689,4.227,1690,3.44,1691,2.678,1692,1.663,1693,1.663,1694,3.362,1695,2.678,1696,3.362,1697,2.678,1698,1.663,1699,1.663,1700,1.663,1701,2.678,1702,2.678,1703,1.663,1704,2.678,1705,2.678,1706,6.02,1707,1.663,1708,2.678,1709,1.663,1710,1.663,1711,1.663,1712,1.663,1713,1.663,1714,1.663,1715,1.663,1716,4.227,1717,1.663,1718,1.663,1719,2.678,1720,1.663,1721,1.663,1722,1.663,1723,2.678,1724,1.663,1725,1.663,1726,1.484,1727,1.663,1728,1.663,1729,1.663,1730,1.35,1731,1.663,1732,1.663,1733,1.663,1734,1.663,1735,1.663,1736,1.663,1737,1.663,1738,1.663,1739,1.663,1740,1.663,1741,1.663]],["title/additional-documentation/setup/enabling-accounts-on-firebase.html",[81,0.786,139,0.327,165,0.865,169,1.394,1592,0.908]],["body/additional-documentation/setup/enabling-accounts-on-firebase.html",[17,1.244,18,2.716,61,1.836,63,0.016,71,1.995,73,1.974,78,1.28,81,2.217,82,3.878,139,0.676,147,1.219,162,2.716,165,2.416,168,3.64,169,3.84,213,0.016,214,0.016,281,3.64,284,2.885,298,1.79,440,2.618,497,2.3,544,2.3,558,4.23,569,3.074,604,3.849,630,4.74,788,2.564,831,4.23,1373,3.849,1378,4.23,1605,4.23,1726,4.23,1742,4.74,1743,5.979,1744,6.529,1745,5.514,1746,4.74]],["title/additional-documentation/firebase.html",[81,1.016,139,0.422,1592,1.175]],["body/additional-documentation/firebase.html",[63,0.016,73,2.086,81,2.196,82,3.248,147,1.491,213,0.016,214,0.016,356,2.086,506,4.335,544,2.813,557,3.048,569,3.248,1209,3.248,1442,5.008,1476,3.528,1526,3.248,1572,4.067,1628,4.067,1747,5.826,1748,5.826,1749,5.826,1750,5.826,1751,4.067,1752,4.067]],["title/additional-documentation/firebase/firebase-authentication.html",[81,0.886,82,1.676,139,0.368,1592,1.024]],["body/additional-documentation/firebase/firebase-authentication.html",[16,2.851,17,1.323,39,2.77,47,0.433,53,2.77,54,2.77,56,2.599,61,2.042,63,0.015,67,0.874,78,1.153,81,2.047,82,4.049,83,1.869,137,5.1,139,0.815,140,3.81,162,3.275,163,4.463,164,5.264,165,2.472,166,4.27,168,2.77,169,2.599,213,0.015,214,0.015,281,3.418,282,4.27,283,5.715,284,3.632,298,1.99,303,3.659,305,2.148,377,2.072,427,1.612,506,3.193,544,2.773,563,4.27,587,3.467,588,3.81,604,3.467,711,3.467,718,3.467,752,2.77,788,2.31,1031,4.27,1159,3.467,1268,3.467,1329,3.81,1358,5.269,1563,4.27,1611,2.599,1632,3.81,1638,4.27,1650,4.702,1730,3.467,1742,5.269,1743,4.27,1753,4.967,1754,4.967,1755,4.967,1756,4.967,1757,4.967,1758,4.967,1759,4.967,1760,4.967,1761,4.967,1762,4.967,1763,6.13,1764,4.27,1765,4.967,1766,4.967,1767,6.13,1768,4.27,1769,4.967,1770,4.967,1771,4.967]],["title/additional-documentation/firebase/database-structure.html",[139,0.368,1209,1.676,1592,1.024,1751,2.098]],["body/additional-documentation/firebase/database-structure.html",[9,0.611,17,1.325,42,2.78,47,0.536,61,2.044,63,0.015,67,0.816,69,1.964,77,1.647,81,1.812,83,1.877,87,2.609,121,2.433,126,2.858,156,1.385,162,3.628,163,4.281,165,1.619,213,0.015,214,0.015,309,3.825,382,2.637,389,2.08,402,1.274,407,0.903,410,1.877,413,1.785,436,2.08,462,1.402,469,2.433,473,2.917,501,1.877,551,2.977,552,3.825,557,2.609,561,4.286,567,3.825,569,3.713,588,3.825,620,3.206,714,3.95,740,4.286,768,3.95,788,2.319,929,5.577,1049,3.825,1162,2.609,1205,4.289,1209,4.107,1329,3.825,1476,3.215,1526,2.78,1559,4.286,1585,4.286,1635,3.481,1641,5.725,1690,3.825,1730,3.481,1746,4.286,1751,4.649,1752,4.649,1764,4.286,1772,4.987,1773,4.987,1774,4.987,1775,6.145,1776,6.145,1777,4.987,1778,4.987,1779,4.987,1780,4.987,1781,4.987,1782,4.286,1783,4.987,1784,4.987,1785,4.987,1786,4.286,1787,4.987]],["title/additional-documentation/firebase/firestore-wrapper.html",[139,0.368,1526,1.676,1592,1.024,1752,2.098]],["body/additional-documentation/firebase/firestore-wrapper.html",[9,0.726,17,1.129,23,1.455,45,1.387,47,0.41,48,0.852,50,4.043,61,1.666,62,1.443,63,0.016,67,0.91,68,0.896,69,1.913,73,2.634,75,2.019,76,2.622,78,1.375,81,1.387,83,2.23,95,0.541,99,1.962,121,1.862,126,2.187,132,1.115,149,4.043,154,3.616,159,2.346,162,3.683,168,2.622,184,0.767,213,0.014,214,0.016,284,2.461,286,1.684,289,1.833,307,3.023,320,3.023,375,2.437,382,2.346,402,1.74,410,1.77,436,1.962,468,2.471,473,1.862,478,1.862,557,3.393,570,3.608,675,4.043,711,3.283,752,2.622,768,3.023,788,2.187,910,2.807,929,4.975,936,2.807,969,5.135,1162,2.461,1209,3.995,1506,4.043,1526,3.913,1558,5.093,1584,3.023,1602,5.093,1605,3.608,1639,4.043,1682,3.608,1751,4.135,1752,5.135,1768,4.043,1782,4.043,1786,5.093,1788,4.703,1789,4.703,1790,4.703,1791,5.925,1792,4.703,1793,4.703,1794,4.703,1795,4.703,1796,4.703,1797,6.486,1798,4.703,1799,4.703,1800,4.703,1801,4.703,1802,4.703,1803,4.703,1804,4.703,1805,5.925,1806,4.703,1807,4.703,1808,4.703,1809,4.703,1810,6.486,1811,5.925,1812,4.703,1813,4.703,1814,4.703,1815,4.703,1816,4.703]],["title/additional-documentation/firebase/firebase-functions.html",[73,1.076,81,0.886,139,0.368,1592,1.024]],["body/additional-documentation/firebase/firebase-functions.html",[9,0.683,16,2.591,17,1.252,53,3.106,54,3.106,61,1.566,63,0.016,67,0.683,68,1.061,73,2.671,76,3.106,81,2.17,87,3.436,126,2.591,156,1.252,163,4.222,164,3.888,165,2.342,168,3.106,213,0.016,214,0.016,281,3.106,303,3.325,427,1.808,435,1.994,543,4.273,544,2.324,545,4.788,569,3.662,604,4.585,717,3.581,910,3.325,1049,4.273,1209,3.106,1254,4.273,1564,5.646,1817,5.57,1818,5.57,1819,5.57,1820,5.57,1821,5.57,1822,5.57,1823,5.57]]],"invertedIndex":[["",{"_index":63,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["0",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["0.100.2",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["0.3.4",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["0.3.5",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":677,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["1.18.3",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":614,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["10/10",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["112px",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["12/12",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":1498,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":1500,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1099,"title":{},"body":{"components/IssueListComponent.html":{}}}],["15.1.10",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["15000",{"_index":1407,"title":{},"body":{"injectables/ToastService.html":{}}}],["17",{"_index":1612,"title":{},"body":{"overview.html":{}}}],["2",{"_index":743,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/ToastService.html":{}}}],["2.1.1",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":746,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["207px",{"_index":920,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["24a36",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.appspot.com",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseapp.com",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24a36.firebaseio.com",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":642,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["3",{"_index":889,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{}}}],["3/3",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1502,"title":{},"body":{"coverage.html":{}}}],["330px",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["340px",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":609,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"overview.html":{}}}],["4.0.0",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1501,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":898,"title":{},"body":{"injectables/CourseService.html":{},"overview.html":{}}}],["5.0.0",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["5.12.1",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1504,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":1408,"title":{},"body":{"injectables/ToastService.html":{}}}],["6.0.7",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1613,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1499,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":670,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["_log(collectiontitl",{"_index":1815,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["_selectedcategori",{"_index":1420,"title":{},"body":{"injectables/ToolService.html":{}}}],["_selectedcours",{"_index":807,"title":{},"body":{"injectables/CourseService.html":{}}}],["_selectedtool",{"_index":1421,"title":{},"body":{"injectables/ToolService.html":{}}}],["_tab",{"_index":511,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["a.download",{"_index":1172,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a.href",{"_index":1171,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["a[param",{"_index":777,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["a[param].touppercas",{"_index":781,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["abov",{"_index":471,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["ac",{"_index":507,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["acc",{"_index":689,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["acc.concat(detail",{"_index":1153,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["acc2",{"_index":1473,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["accent",{"_index":888,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["access",{"_index":284,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["accessor",{"_index":850,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["accord",{"_index":723,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["account",{"_index":165,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["account.if",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["ace'",{"_index":540,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["act",{"_index":649,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["action",{"_index":382,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["activ",{"_index":567,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["activetab",{"_index":512,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["activetab.readonli",{"_index":644,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["actual_compon",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["ad",{"_index":558,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["add",{"_index":532,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["add/remov",{"_index":696,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["add_circl",{"_index":795,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["addcours",{"_index":812,"title":{},"body":{"injectables/CourseService.html":{}}}],["addcourse(cours",{"_index":820,"title":{},"body":{"injectables/CourseService.html":{}}}],["addit",{"_index":1592,"title":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"index.html":{}}}],["adjust",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["admin",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"dependencies.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["afauth",{"_index":287,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["afauth.authst",{"_index":326,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["affect",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["afterviewinit",{"_index":953,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["again",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["aizasybn6dkjkghs5w2yxtkluu8mcurfxkip3dc",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["along",{"_index":1787,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["alphabet",{"_index":779,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alreadi",{"_index":719,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["alt",{"_index":1644,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["alt_attribut",{"_index":1723,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["altcondit",{"_index":1725,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["alter",{"_index":1653,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["altern",{"_index":1756,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["although",{"_index":1753,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["angular",{"_index":1032,"title":{},"body":{"components/IssueContainerComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":944,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"injectables/KatanaService.html":{}}}],["angular/compil",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"injectables/ToolService.html":{},"dependencies.html":{}}}],["angular2",{"_index":380,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["angularfire2/firestor",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauth",{"_index":294,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["angularfireauthmodul",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodul",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["answer",{"_index":1331,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["anyth",{"_index":1692,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["api",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["apikey",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["app.compon",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1604,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["appli",{"_index":397,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["applic",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["application/json",{"_index":1229,"title":{},"body":{"injectables/KatanaService.html":{}}}],["appmodul",{"_index":216,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":661,"title":{},"body":{"components/CourseChipComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["approut",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["approv",{"_index":464,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["architectur",{"_index":1607,"title":{"additional-documentation/architecture.html":{}},"body":{"index.html":{},"additional-documentation/architecture.html":{}}}],["array",{"_index":369,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["array.from(document.queryselectorall('.canva",{"_index":1350,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["arrow_back",{"_index":1359,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["assign",{"_index":976,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["async",{"_index":704,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["attach",{"_index":500,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["attach_fil",{"_index":984,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["attribut",{"_index":724,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["auth",{"_index":319,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["auth().currentuser.email",{"_index":1274,"title":{},"body":{"injectables/KatanaService.html":{}}}],["auth().currentuser.getidtoken(tru",{"_index":349,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().getredirectresult",{"_index":328,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().setpersistence(auth.auth.persistence.sess",{"_index":342,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().signout",{"_index":347,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth().updatecurrentuser(us",{"_index":331,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["auth.googleauthprovid",{"_index":339,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["authdomain",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":82,"title":{"additional-documentation/firebase/firebase-authentication.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["authguard.servic",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{}}}],["authguardservic",{"_index":36,"title":{"injectables/AuthGuardService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"coverage.html":{},"overview.html":{}}}],["authguardservice.authstate.subscribe(st",{"_index":1211,"title":{},"body":{"injectables/KatanaService.html":{}}}],["authguardservice.userdetails.displaynam",{"_index":385,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["authstat",{"_index":323,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["automat",{"_index":1742,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["avail",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["await",{"_index":1243,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["b",{"_index":776,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param",{"_index":778,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["b[param].touppercas",{"_index":783,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["back",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["background",{"_index":826,"title":{},"body":{"injectables/CourseService.html":{}}}],["badg",{"_index":1370,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge'},{'nam",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["badge.compon",{"_index":1416,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["badge.component.css",{"_index":1371,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.html",{"_index":1372,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.t",{"_index":1368,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["badge.component.ts:15",{"_index":1380,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:19",{"_index":1379,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:23",{"_index":1381,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge.component.ts:27",{"_index":1377,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["badge/stat",{"_index":1367,"title":{},"body":{"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["bar",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{}}}],["base",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["basic",{"_index":1187,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["be",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["beautifi",{"_index":546,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["becom",{"_index":1583,"title":{},"body":{"index.html":{}}}],["befor",{"_index":752,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["behavior",{"_index":1651,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["behind",{"_index":1686,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["belong",{"_index":419,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["below",{"_index":1650,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["best",{"_index":1642,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["between",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["bit",{"_index":1780,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["blank",{"_index":832,"title":{},"body":{"injectables/CourseService.html":{}}}],["blob",{"_index":1167,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["blob([csvreport",{"_index":1168,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["block",{"_index":917,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{}}}],["blue",{"_index":887,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["blueprint",{"_index":499,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["bodi",{"_index":1196,"title":{},"body":{"injectables/KatanaService.html":{},"dependencies.html":{}}}],["boolean",{"_index":301,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bootstrap",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["both",{"_index":1304,"title":{},"body":{"classes/OptionModel.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["bottom",{"_index":459,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["box",{"_index":762,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["breadcrumb",{"_index":353,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs'},{'nam",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["breadcrumbs.component.css",{"_index":357,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs.component.html",{"_index":358,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["breadcrumbs/breadcrumbs.compon",{"_index":947,"title":{},"body":{"modules/HomePageModule.html":{}}}],["breadcrumbscompon",{"_index":179,"title":{"components/BreadcrumbsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["brigham",{"_index":1567,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1610,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1063,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["build",{"_index":352,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"index.html":{}}}],["buildeditortab",{"_index":998,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["buildhtml(messag",{"_index":1394,"title":{},"body":{"injectables/ToastService.html":{}}}],["buildinstructornam",{"_index":652,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["buildrouterlink",{"_index":360,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["buildrouterlink(pathpiec",{"_index":365,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["built",{"_index":1558,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["button",{"_index":364,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["byui",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["c.id",{"_index":785,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["call",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["call_missed_outgo",{"_index":882,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["came",{"_index":1025,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["campu",{"_index":492,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["canactiv",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["cancel",{"_index":1175,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["canva",{"_index":452,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvas_api_token",{"_index":1582,"title":{},"body":{"index.html":{}}}],["canvasitem",{"_index":1689,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.gethtml",{"_index":1694,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.sethtml($.html",{"_index":1721,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["canvasitem.upd",{"_index":1704,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["capit",{"_index":1665,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card",{"_index":828,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["card'},{'nam",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["card.compon",{"_index":1412,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["card.component.css",{"_index":954,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.html",{"_index":955,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.t",{"_index":952,"title":{},"body":{"components/IssueCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":960,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:21",{"_index":961,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:26",{"_index":959,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:32",{"_index":970,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:39",{"_index":965,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card.component.ts:61",{"_index":962,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["card/issu",{"_index":951,"title":{},"body":{"components/IssueCardComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["carri",{"_index":560,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["case",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["cast",{"_index":912,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["catch",{"_index":1244,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["catch(console.error",{"_index":329,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["catch(funct",{"_index":345,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["catch(this.errorhandl",{"_index":1227,"title":{},"body":{"injectables/KatanaService.html":{}}}],["categor",{"_index":409,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["categori",{"_index":267,"title":{"interfaces/Category.html":{}},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["categories'},{'nam",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["categories.component.css",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.compon",{"_index":946,"title":{},"body":{"modules/HomePageModule.html":{}}}],["categoriescompon",{"_index":181,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["category.check",{"_index":1353,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["category.titl",{"_index":404,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["categoryinput",{"_index":1349,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["categoryinputs.foreach(categori",{"_index":1352,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["caus",{"_index":1250,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["certain",{"_index":521,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["chalk",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["chang",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["charact",{"_index":633,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["check",{"_index":717,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["check_circl",{"_index":880,"title":{},"body":{"injectables/CourseService.html":{}}}],["check_circle_outlin",{"_index":881,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["checker",{"_index":606,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["cheerio",{"_index":1530,"title":{},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["cheerio.load(canvasitem.gethtml",{"_index":1708,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["chip",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["chip'},{'nam",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["chip.compon",{"_index":1365,"title":{},"body":{"modules/SidebarModule.html":{}}}],["chip.component.css",{"_index":650,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.html",{"_index":651,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.t",{"_index":648,"title":{},"body":{"components/CourseChipComponent.html":{},"coverage.html":{}}}],["chip.component.ts:20",{"_index":656,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:28",{"_index":666,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:34",{"_index":665,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:42",{"_index":657,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip.component.ts:58",{"_index":663,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["chip/cours",{"_index":647,"title":{},"body":{"components/CourseChipComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["choic",{"_index":433,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["choice.text",{"_index":1076,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["choos",{"_index":1668,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["chosen",{"_index":1439,"title":{},"body":{"injectables/ToolService.html":{}}}],["circl",{"_index":751,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["class",{"_index":96,"title":{"classes/OptionModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classic",{"_index":1399,"title":{},"body":{"injectables/ToastService.html":{}}}],["clear",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{}}}],["click",{"_index":766,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{}}}],["clickabl",{"_index":1679,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["client",{"_index":1260,"title":{},"body":{"injectables/KatanaService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["clone",{"_index":1576,"title":{},"body":{"index.html":{}}}],["close",{"_index":373,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{}}}],["closemod",{"_index":361,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["cloud",{"_index":1773,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["cloud_download",{"_index":1173,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["cluster_appmodul",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_homepagemodul",{"_index":939,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declar",{"_index":940,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_export",{"_index":941,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_sidebarmodul",{"_index":1360,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_declar",{"_index":1361,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_export",{"_index":1362,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_toolpagemodul",{"_index":1409,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["cluster_toolpagemodule_declar",{"_index":1410,"title":{},"body":{"modules/ToolPageModule.html":{},"overview.html":{}}}],["code",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["codeeditor",{"_index":996,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["codeeditorcompon",{"_index":183,"title":{"components/CodeEditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coinced",{"_index":1757,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["collect",{"_index":929,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["collectiontitle(string)data",{"_index":1816,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["color",{"_index":827,"title":{},"body":{"injectables/CourseService.html":{},"components/StatBadgeComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["command",{"_index":1593,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":943,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["compat",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":967,"title":{},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{}}}],["compodoc",{"_index":1630,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["comput",{"_index":1125,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["condit",{"_index":1696,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["conflict",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consol",{"_index":1605,"title":{},"body":{"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["console.error(",{"_index":1297,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(`${course.course_cod",{"_index":1276,"title":{},"body":{"injectables/KatanaService.html":{}}}],["console.error(error",{"_index":346,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["console.log('eventttt",{"_index":1069,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["console.log(typeof",{"_index":1395,"title":{},"body":{"injectables/ToastService.html":{}}}],["const",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["constructor(afauth",{"_index":293,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["constructor(courseservic",{"_index":655,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(http",{"_index":1183,"title":{},"body":{"injectables/KatanaService.html":{}}}],["constructor(katanaservic",{"_index":708,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{}}}],["constructor(opt",{"_index":1306,"title":{},"body":{"classes/OptionModel.html":{}}}],["constructor(priv",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{}}}],["constructor(publ",{"_index":324,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["constructor(rout",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"injectables/ToolService.html":{}}}],["constructor(toolservic",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{},"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["contact",{"_index":937,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["contain",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["container'},{'nam",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["container.compon",{"_index":1415,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["container.component.css",{"_index":994,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.html",{"_index":995,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.t",{"_index":621,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:117",{"_index":1022,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:131",{"_index":1019,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:141",{"_index":1029,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:145",{"_index":1018,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:19",{"_index":1008,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:24",{"_index":1007,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:29",{"_index":1035,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:31",{"_index":1005,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:46",{"_index":1020,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:66",{"_index":1009,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:81",{"_index":1027,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container.component.ts:98",{"_index":1015,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["container/issu",{"_index":993,"title":{},"body":{"components/IssueContainerComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["content",{"_index":467,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["continu",{"_index":1358,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["control",{"_index":1049,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["control.setvalue(this.issue.tempvalues[optionkey",{"_index":1051,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["control.updatevalueandvalid",{"_index":1053,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["convert",{"_index":527,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["copi",{"_index":1588,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["core",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":593,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["correctli",{"_index":280,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{}}}],["count",{"_index":806,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["cours",{"_index":72,"title":{"interfaces/Course.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course'",{"_index":487,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["course.account",{"_index":798,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.blueprint",{"_index":800,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.course_cod",{"_index":691,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["course.course_nam",{"_index":796,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.error",{"_index":1269,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.id",{"_index":786,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["course.instructor",{"_index":797,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course.issueitem",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/ToolViewComponent.html":{}}}],["course.issueitems.find(issueitem",{"_index":1141,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach((issueitem",{"_index":1146,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.foreach(issueitem",{"_index":1071,"title":{},"body":{"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{}}}],["course.issueitems.reduce((acc",{"_index":1139,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["course.issueitems.reduce((acc2",{"_index":1472,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["course.issueitems.some(issueitem",{"_index":1286,"title":{},"body":{"injectables/KatanaService.html":{}}}],["course.process",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["course.servic",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["course.term",{"_index":799,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["course_cod",{"_index":489,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_id",{"_index":480,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_nam",{"_index":488,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["course_search",{"_index":1738,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["coursechang",{"_index":808,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursechipcompon",{"_index":186,"title":{"components/CourseChipComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursecod",{"_index":869,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":867,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursenam",{"_index":868,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseoverlay",{"_index":903,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["courseresult",{"_index":699,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courseresults.length",{"_index":793,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["courses.filter(cours",{"_index":1285,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.foreach(cours",{"_index":1266,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courses.length",{"_index":1279,"title":{},"body":{"injectables/KatanaService.html":{}}}],["courseselectioncompon",{"_index":188,"title":{"components/CourseSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseselectionopen",{"_index":809,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseservic",{"_index":32,"title":{"injectables/CourseService.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["courseservice.courses.foreach(cours",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses.length",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courses[0",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["courseservice.courseselectionopen",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["courseservice.getstatusicon(issue.statu",{"_index":991,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["courseservice.selectedcours",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitem",{"_index":1109,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedcourse.issueitems.length",{"_index":1110,"title":{},"body":{"components/IssueListComponent.html":{}}}],["courseservice.selectedissueitem",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["coursesidebarcompon",{"_index":190,"title":{"components/CourseSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursesobj",{"_index":810,"title":{},"body":{"injectables/CourseService.html":{}}}],["course}",{"_index":667,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["cover",{"_index":1628,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase.html":{}}}],["coverag",{"_index":1475,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"classes/OptionModel.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["creation",{"_index":1769,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["credenti",{"_index":304,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["crumb",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["css",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["csv",{"_index":1124,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrow",{"_index":1134,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvformatrows(issueitem.issues.map(issu",{"_index":1161,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport",{"_index":1144,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["csvreport.csv",{"_index":1165,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["ctrl+f",{"_index":586,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["current",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["currentcolor",{"_index":1673,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["currenthtml",{"_index":1678,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["d3",{"_index":1135,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["darken",{"_index":892,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["data",{"_index":969,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["data.st",{"_index":1264,"title":{},"body":{"injectables/KatanaService.html":{}}}],["databas",{"_index":1209,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["databaseurl",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataflow",{"_index":1631,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["datatyp",{"_index":1776,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["db",{"_index":1797,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["decid",{"_index":1655,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["declar",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["decor",{"_index":572,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["default",{"_index":315,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defaulttext",{"_index":434,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["defin",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["delay",{"_index":1251,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["delet",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{}}}],["depend",{"_index":217,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1564,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["deprec",{"_index":1200,"title":{},"body":{"injectables/KatanaService.html":{}}}],["describ",{"_index":1584,"title":{},"body":{"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["design",{"_index":1659,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["desir",{"_index":833,"title":{},"body":{"injectables/CourseService.html":{}}}],["desiredstatu",{"_index":1016,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["detail",{"_index":356,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["details'},{'nam",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["details.compon",{"_index":1413,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["details.component.css",{"_index":1080,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.html",{"_index":1081,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.t",{"_index":1079,"title":{},"body":{"components/IssueDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1082,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1083,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["details/issu",{"_index":1078,"title":{},"body":{"components/IssueDetailsComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["determin",{"_index":445,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["develop",{"_index":788,"title":{"additional-documentation/setup/development-environment.html":{}},"body":{"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"index.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["diagram",{"_index":1632,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/architecture.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["differ",{"_index":1663,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["direct",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["directori",{"_index":1589,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["disabl",{"_index":604,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["discov",{"_index":438,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discover(canvasitem",{"_index":1691,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discover/search",{"_index":1656,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveri",{"_index":424,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{}}}],["discoverissu",{"_index":1178,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoverissues(cours",{"_index":1188,"title":{},"body":{"injectables/KatanaService.html":{}}}],["discoveropt",{"_index":426,"title":{"interfaces/DiscoverOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["discoveroption}",{"_index":456,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["discuss",{"_index":453,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dismiss",{"_index":1398,"title":{},"body":{"injectables/ToastService.html":{}}}],["display",{"_index":411,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dist",{"_index":1590,"title":{},"body":{"index.html":{}}}],["div",{"_index":575,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["divid",{"_index":1645,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["do",{"_index":1434,"title":{},"body":{"injectables/ToolService.html":{}}}],["document",{"_index":1476,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["document.documentelement.style.setproperti",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["document.getelementbyid(\"download",{"_index":1166,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["document.queryselector('.mod",{"_index":1343,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["document.queryselector('.toast').remov",{"_index":1406,"title":{},"body":{"injectables/ToastService.html":{}}}],["document.queryselector('app",{"_index":914,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["doesn't",{"_index":559,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dogooglelogin",{"_index":290,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["don't",{"_index":556,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"injectables/ToolService.html":{}}}],["down",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["download",{"_index":1123,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["downloadissu",{"_index":1118,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["dropdown",{"_index":431,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["dsv",{"_index":1136,"title":{},"body":{"components/IssueNavComponent.html":{},"dependencies.html":{}}}],["dure",{"_index":565,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["dynam",{"_index":1430,"title":{},"body":{"injectables/ToolService.html":{},"dependencies.html":{}}}],["e",{"_index":685,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["e.messag",{"_index":1400,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target",{"_index":1402,"title":{},"body":{"injectables/ToastService.html":{}}}],["e.target.readyst",{"_index":1403,"title":{},"body":{"injectables/ToastService.html":{}}}],["each",{"_index":370,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"interfaces/Tool.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["earlier",{"_index":1735,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["easi",{"_index":1789,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["easier",{"_index":1777,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["edit",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor",{"_index":441,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editor'",{"_index":524,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor'},{'nam",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["editor.compon",{"_index":1417,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["editor.component.css",{"_index":509,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.html",{"_index":510,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.t",{"_index":505,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:109",{"_index":549,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:136",{"_index":536,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":535,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:27",{"_index":531,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":574,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":568,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":566,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":577,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":553,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:61",{"_index":520,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor.component.ts:73",{"_index":542,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editor/cod",{"_index":504,"title":{},"body":{"components/CodeEditorComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["editorel",{"_index":513,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editortab",{"_index":442,"title":{"interfaces/EditorTab.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["editortab.readonli",{"_index":1059,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editortab.titl",{"_index":1056,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["editsess",{"_index":583,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["editsession(cod",{"_index":600,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["effect",{"_index":1062,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["element",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["elementref",{"_index":571,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["eltyp",{"_index":1014,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["email",{"_index":1807,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["emit",{"_index":321,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["empti",{"_index":628,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["empty/miss",{"_index":1714,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["enabl",{"_index":169,"title":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["end",{"_index":1595,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1635,"title":{"additional-documentation/architecture/server-endpoints.html":{}},"body":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["enter",{"_index":1728,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["entir",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["environ",{"_index":248,"title":{"additional-documentation/setup/development-environment.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/development-environment.html":{}}}],["err",{"_index":1225,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["error('cours",{"_index":1228,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('discov",{"_index":1238,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('fix",{"_index":1283,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('socket",{"_index":1281,"title":{},"body":{"injectables/KatanaService.html":{}}}],["error('toollist",{"_index":1218,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandl",{"_index":1179,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorhandler(",{"_index":1190,"title":{},"body":{"injectables/KatanaService.html":{}}}],["errorpagecompon",{"_index":192,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["etc",{"_index":455,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["even",{"_index":588,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["event",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["event.urlafterredirects.includes('/issu",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":318,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["everyth",{"_index":748,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ex",{"_index":971,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exampl",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["exist",{"_index":1268,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["expand",{"_index":579,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["expandview",{"_index":515,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["explain",{"_index":1649,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["export",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"overview.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["expos",{"_index":1801,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["express",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["extern",{"_index":1811,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["fail",{"_index":466,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["failed'].includes(this.issue.statu",{"_index":1064,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["fairli",{"_index":1729,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fall",{"_index":789,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["fals",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["feedback",{"_index":355,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["feel",{"_index":1465,"title":{},"body":{"injectables/ToolService.html":{}}}],["few",{"_index":1681,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ff0000",{"_index":1674,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filenam",{"_index":1164,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fill",{"_index":1734,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["filter",{"_index":727,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["find",{"_index":630,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["fire",{"_index":543,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebas",{"_index":81,"title":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["firebase.auth",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["firestor",{"_index":1752,"title":{"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestore'",{"_index":1799,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestorewrapp",{"_index":1795,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["firestorewrapper.initializefirebas",{"_index":1798,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["first",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["fit",{"_index":660,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["fix",{"_index":437,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fix(canvasitem",{"_index":1702,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fix/discov",{"_index":1637,"title":{},"body":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}}}],["fix/search",{"_index":1666,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixabl",{"_index":1284,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.foreach(cours",{"_index":1289,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixables.length",{"_index":1295,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixedissu",{"_index":1701,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixedmessag",{"_index":1724,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixissu",{"_index":1180,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixissues(cours",{"_index":1192,"title":{},"body":{"injectables/KatanaService.html":{}}}],["fixmessag",{"_index":460,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixopt",{"_index":439,"title":{"interfaces/FixOption.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["fixoption}",{"_index":457,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["flag",{"_index":1602,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["flatissuedetail",{"_index":1148,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["flow",{"_index":1638,"title":{"additional-documentation/architecture/data-flow-diagram.html":{}},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["folder",{"_index":977,"title":{},"body":{"components/IssueCardComponent.html":{},"index.html":{}}}],["follow",{"_index":1572,"title":{},"body":{"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{}}}],["for/fix",{"_index":1654,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["form",{"_index":428,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["format",{"_index":658,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["formcontrol",{"_index":1311,"title":{},"body":{"classes/OptionModel.html":{}}}],["formcontrol}",{"_index":1303,"title":{},"body":{"classes/OptionModel.html":{}}}],["formgroup",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["formgroup(group",{"_index":1318,"title":{},"body":{"classes/OptionModel.html":{}}}],["formsmodul",{"_index":948,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["forward",{"_index":1713,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["found",{"_index":1658,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["four",{"_index":1800,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["framework",{"_index":1562,"title":{},"body":{"index.html":{}}}],["front",{"_index":1594,"title":{},"body":{"index.html":{}}}],["full",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"injectables/CourseService.html":{}}}],["fullbuild",{"_index":1597,"title":{},"body":{"index.html":{}}}],["function",{"_index":73,"title":{"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["functions.auth.user().oncr",{"_index":1819,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["g",{"_index":1760,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["gather",{"_index":1330,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["gavel",{"_index":985,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gener",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["get",{"_index":760,"title":{"index.html":{}},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{}}}],["getbackgroundcolorclass",{"_index":813,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbackgroundcolorclasses(statu",{"_index":824,"title":{},"body":{"injectables/CourseService.html":{}}}],["getbuttonclass",{"_index":999,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getbuttonclasses(desiredstatu",{"_index":1013,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["getcours",{"_index":705,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{}}}],["getcourseissuecount",{"_index":814,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourseissuecount(statu",{"_index":829,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses(bodi",{"_index":1194,"title":{},"body":{"injectables/KatanaService.html":{}}}],["getissuecount",{"_index":653,"title":{},"body":{"components/CourseChipComponent.html":{},"components/ToolViewComponent.html":{}}}],["getissuecount(statu",{"_index":662,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["getissueitem",{"_index":1093,"title":{},"body":{"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{}}}],["getissueitems(cours",{"_index":1126,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["getselectedcategori",{"_index":1444,"title":{},"body":{"injectables/ToolService.html":{}}}],["getselectedcours",{"_index":852,"title":{},"body":{"injectables/CourseService.html":{}}}],["getselectedtool",{"_index":1448,"title":{},"body":{"injectables/ToolService.html":{}}}],["getstatusicon",{"_index":815,"title":{},"body":{"injectables/CourseService.html":{}}}],["getstatusicon(statu",{"_index":835,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclass",{"_index":816,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettextcolorclasses(statu",{"_index":838,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettoollist",{"_index":1181,"title":{},"body":{"injectables/KatanaService.html":{}}}],["gettotalissuecount",{"_index":817,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettotalissuecount(statu",{"_index":841,"title":{},"body":{"injectables/CourseService.html":{}}}],["gettypeicon",{"_index":957,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["gi",{"_index":637,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["git",{"_index":1575,"title":{},"body":{"index.html":{}}}],["github",{"_index":1792,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["github:byuitechops/canva",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["github:byuitechops/logg",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["given",{"_index":711,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["gmail",{"_index":1765,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["go",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["goe",{"_index":1401,"title":{},"body":{"injectables/ToastService.html":{}}}],["good",{"_index":1261,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["googl",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["grab",{"_index":443,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["green",{"_index":890,"title":{},"body":{"injectables/CourseService.html":{}}}],["grey",{"_index":891,"title":{},"body":{"injectables/CourseService.html":{}}}],["group",{"_index":1313,"title":{},"body":{"classes/OptionModel.html":{}}}],["group[option.key",{"_index":1316,"title":{},"body":{"classes/OptionModel.html":{}}}],["handl",{"_index":1205,"title":{},"body":{"injectables/KatanaService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["handleeditorsessionvalu",{"_index":1000,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["handleeditorsessionvalues(ev",{"_index":1017,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["header",{"_index":1160,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["headers.append('cont",{"_index":1230,"title":{},"body":{"injectables/KatanaService.html":{}}}],["height",{"_index":538,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["help",{"_index":563,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["help_outlin",{"_index":986,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["helper",{"_index":1301,"title":{},"body":{"classes/OptionModel.html":{}}}],["here",{"_index":501,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["hex",{"_index":1675,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["high",{"_index":1633,"title":{"additional-documentation/architecture/high-level-overview.html":{}},"body":{"additional-documentation/architecture.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["highlight",{"_index":523,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["hold",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/OptionsViewComponent.html":{}}}],["home",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["home/error",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/issu",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["home/tools/:tool_id/opt",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["homepagemodul",{"_index":225,"title":{"modules/HomePageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":1774,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["html",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlelement",{"_index":913,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["htmlinputel",{"_index":1351,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["htmlkey",{"_index":444,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["htmlstring",{"_index":1057,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["http",{"_index":1186,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclient",{"_index":1184,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpclientmodul",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":1208,"title":{},"body":{"injectables/KatanaService.html":{}}}],["httpmodul",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/angular/angularfire2",{"_index":296,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["https://katana",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.npmjs.com/package/angular2",{"_index":1138,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["i.",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["icon",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["id",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idaho",{"_index":1570,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":1700,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["identifi",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["idtoken",{"_index":308,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["if(issue.statu",{"_index":1703,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["imag",{"_index":1706,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image).attr('alt",{"_index":1720,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image.attr('alt",{"_index":1711,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["image.attr('src",{"_index":1717,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["images.each((i",{"_index":1710,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["img",{"_index":1709,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["img[src=\"${issue.details.image}\"]`).first",{"_index":1718,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["immedi",{"_index":1254,"title":{},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["implement",{"_index":320,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["import",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["in...you",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["includ",{"_index":469,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["index",{"_index":285,"title":{"index.html":{}},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":840,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["infinit",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["inform",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["initi",{"_index":570,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["initializefirebas",{"_index":1809,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["inject",{"_index":277,"title":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":429,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["input('index",{"_index":1037,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issu",{"_index":1036,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["input('issueitem",{"_index":972,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('posit",{"_index":973,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["input('searchphras",{"_index":581,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('sid",{"_index":1385,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('statcount",{"_index":1383,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('stattitl",{"_index":1382,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["input('tab",{"_index":580,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["input('titlecolor",{"_index":1384,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["insert",{"_index":547,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["insert_drive_fil",{"_index":982,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["instal",{"_index":1574,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":569,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["instanceof",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["instantan",{"_index":1762,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["instead",{"_index":1257,"title":{},"body":{"injectables/KatanaService.html":{}}}],["instructor",{"_index":494,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["instructor'",{"_index":659,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructornam",{"_index":673,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["instructur",{"_index":1561,"title":{},"body":{"index.html":{}}}],["integr",{"_index":506,"title":{},"body":{"components/CodeEditorComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["interfac",{"_index":407,"title":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["intern",{"_index":1810,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["isad",{"_index":706,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isadded(cours",{"_index":715,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["isfix",{"_index":1001,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["isn\\'t",{"_index":933,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["isn\\\\'t",{"_index":938,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["issu",{"_index":138,"title":{"interfaces/Issue.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue'",{"_index":470,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue.formgroup",{"_index":1292,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.formgroup.valu",{"_index":1293,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.optionvalu",{"_index":1154,"title":{},"body":{"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["issue.optionvalues.newalttext",{"_index":1719,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.questionmodel",{"_index":1294,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issue.statu",{"_index":688,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issue.titl",{"_index":992,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{}}}],["issuecardcompon",{"_index":195,"title":{"components/IssueCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercompon",{"_index":197,"title":{"components/IssueContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecontainercomponent}",{"_index":1084,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["issuedetail",{"_index":997,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issuedetailscompon",{"_index":199,"title":{"components/IssueDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueitem",{"_index":462,"title":{"interfaces/IssueItem.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["issueitem'",{"_index":963,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["issueitem.categori",{"_index":1156,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.course_id",{"_index":864,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueNavComponent.html":{}}}],["issueitem.issu",{"_index":1140,"title":{},"body":{"components/IssueNavComponent.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues.filter(issu",{"_index":687,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["issueitem.issues.foreach(issu",{"_index":1291,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.issues.includes(issu",{"_index":1142,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.issues.length",{"_index":876,"title":{},"body":{"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["issueitem.issues[0].html.updatedhtml",{"_index":1073,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["issueitem.item_id",{"_index":1155,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.link",{"_index":1157,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["issueitem.newissue(titl",{"_index":1697,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["issueitem.titl",{"_index":990,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueNavComponent.html":{}}}],["issueitemcount",{"_index":1091,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issueitems.issues.some(issu",{"_index":1287,"title":{},"body":{"injectables/KatanaService.html":{}}}],["issueitem}",{"_index":495,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{}}}],["issuelistcompon",{"_index":201,"title":{"components/IssueListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelistel",{"_index":1092,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issuenavcompon",{"_index":203,"title":{"components/IssueNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issues.length",{"_index":690,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{}}}],["issue}",{"_index":485,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["issue}'",{"_index":1040,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["it'",{"_index":551,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["item",{"_index":477,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["item'",{"_index":1006,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["item_id",{"_index":482,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_path",{"_index":483,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["item_typ",{"_index":964,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["itemset",{"_index":1428,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["itself",{"_index":576,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["j",{"_index":1147,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["js",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1779,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["json.parse(event.data",{"_index":1263,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.parse(sessionstorage[key",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringifi",{"_index":1270,"title":{},"body":{"injectables/KatanaService.html":{}}}],["json.stringify(cours",{"_index":872,"title":{},"body":{"injectables/CourseService.html":{}}}],["json.stringify(messag",{"_index":1397,"title":{},"body":{"injectables/ToastService.html":{}}}],["katan",{"_index":1750,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["katana",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["katana'",{"_index":1629,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["katana.servic",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["katana/server/node_tool",{"_index":1732,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["katana/server/node_tools.j",{"_index":1736,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["katanaservic",{"_index":33,"title":{"injectables/KatanaService.html":{}},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["katanaservice.error",{"_index":931,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.messag",{"_index":932,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.error.statu",{"_index":934,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["katanaservice.socket",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["katanaservice.sockets.foreach(socket",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["kebob",{"_index":1745,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["keep",{"_index":587,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["key",{"_index":427,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["key.includes('katana_cours",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["keystrok",{"_index":1023,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["last",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{}}}],["lastsortedbi",{"_index":700,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["later",{"_index":1431,"title":{},"body":{"injectables/ToolService.html":{}}}],["launch",{"_index":1596,"title":{},"body":{"index.html":{}}}],["layout",{"_index":1688,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["lazi",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["learn",{"_index":1559,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["left",{"_index":831,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["legend",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"overview.html":{}}}],["letter",{"_index":1661,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["level",{"_index":1634,"title":{"additional-documentation/architecture/high-level-overview.html":{}},"body":{"additional-documentation/architecture.html":{}}}],["lighten",{"_index":893,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["link",{"_index":401,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["linknam",{"_index":1606,"title":{},"body":{"index.html":{}}}],["linter/syntax",{"_index":605,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["list",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["list'},{'nam",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["list.compon",{"_index":1411,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["list.component.css",{"_index":1089,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.html",{"_index":1090,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.t",{"_index":1088,"title":{},"body":{"components/IssueListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":1100,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:17",{"_index":1095,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:23",{"_index":1098,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:30",{"_index":1097,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:39",{"_index":1096,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list/issu",{"_index":1087,"title":{},"body":{"components/IssueListComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["list?useridtoken=${useridtoken}`).subscrib",{"_index":1222,"title":{},"body":{"injectables/KatanaService.html":{}}}],["listen",{"_index":1210,"title":{},"body":{"injectables/KatanaService.html":{}}}],["load",{"_index":386,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{}}}],["loc",{"_index":1459,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('opt",{"_index":1461,"title":{},"body":{"injectables/ToolService.html":{}}}],["loc.includes('tool",{"_index":1463,"title":{},"body":{"injectables/ToolService.html":{}}}],["local",{"_index":822,"title":{},"body":{"injectables/CourseService.html":{}}}],["localhost:8000",{"_index":1598,"title":{},"body":{"index.html":{}}}],["locat",{"_index":297,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["log",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["logger",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["logic",{"_index":1685,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["login",{"_index":283,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["loguserstatu",{"_index":1182,"title":{},"body":{"injectables/KatanaService.html":{}}}],["loguserstatus(useremail",{"_index":1198,"title":{},"body":{"injectables/KatanaService.html":{}}}],["long",{"_index":1813,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["look",{"_index":1442,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/firebase.html":{}}}],["loop",{"_index":1763,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["lowercas",{"_index":749,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["made",{"_index":1785,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["magic",{"_index":1435,"title":{},"body":{"injectables/ToolService.html":{}}}],["main",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["mainli",{"_index":804,"title":{},"body":{"injectables/CourseService.html":{}}}],["maintain",{"_index":1571,"title":{},"body":{"index.html":{}}}],["mainten",{"_index":1566,"title":{},"body":{"index.html":{}}}],["major",{"_index":1684,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["make",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["manag",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"index.html":{}}}],["mani",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["manual",{"_index":1771,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["mass",{"_index":1565,"title":{},"body":{"index.html":{}}}],["master",{"_index":792,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["match",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["materi",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["materialize]{@link",{"_index":1137,"title":{},"body":{"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializeact",{"_index":379,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["materializemodul",{"_index":945,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["matter",{"_index":529,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxlin",{"_index":541,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["maxscrolltop",{"_index":1105,"title":{},"body":{"components/IssueListComponent.html":{}}}],["mcicon",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mdicon",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["mean",{"_index":578,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["meet",{"_index":1695,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["menu",{"_index":1744,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["messag",{"_index":458,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["method",{"_index":289,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["middlewar",{"_index":1249,"title":{},"body":{"injectables/KatanaService.html":{}}}],["minim",{"_index":1698,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["mint",{"_index":896,"title":{},"body":{"injectables/CourseService.html":{}}}],["miscellan",{"_index":1614,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1716,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["modal",{"_index":374,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalact",{"_index":359,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["modalisopen",{"_index":1322,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["mode",{"_index":425,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{}}}],["modifi",{"_index":712,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["modul",{"_index":215,"title":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["module.export",{"_index":1722,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["moduleitem",{"_index":484,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["more",{"_index":768,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["more_vert",{"_index":1174,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["morgan",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":1712,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["much",{"_index":632,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["multiselect",{"_index":432,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["mute",{"_index":1603,"title":{},"body":{"index.html":{}}}],["n",{"_index":1158,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["name1",{"_index":780,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["name2",{"_index":782,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["names.length",{"_index":676,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0",{"_index":680,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[0][0",{"_index":681,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1",{"_index":682,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["names[1][0",{"_index":679,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["nav",{"_index":1115,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav'},{'nam",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["nav.compon",{"_index":1414,"title":{},"body":{"modules/ToolPageModule.html":{}}}],["nav.component.css",{"_index":1116,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.html",{"_index":1117,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.t",{"_index":1114,"title":{},"body":{"components/IssueNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:24",{"_index":1120,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:32",{"_index":1131,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:33",{"_index":1133,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:34",{"_index":1132,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:40",{"_index":1128,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:47",{"_index":1121,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:56",{"_index":1127,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:69",{"_index":1130,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav.component.ts:79",{"_index":1122,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["nav/issu",{"_index":1113,"title":{},"body":{"components/IssueNavComponent.html":{},"modules/ToolPageModule.html":{},"coverage.html":{}}}],["navig",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["navigationend",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["needl",{"_index":639,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["never",{"_index":1256,"title":{},"body":{"injectables/KatanaService.html":{}}}],["new",{"_index":298,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["newalttext",{"_index":1727,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["newcolor",{"_index":1677,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["newli",{"_index":1640,"title":{},"body":{"additional-documentation/setup.html":{}}}],["newstatu",{"_index":1028,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["newwidth",{"_index":919,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["ng",{"_index":1586,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":958,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["ngmodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["ngoninit",{"_index":516,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["node",{"_index":1011,"title":{"additional-documentation/setup/node-tools.html":{}},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["node_tool_template.j",{"_index":1733,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodej",{"_index":1578,"title":{},"body":{"index.html":{}}}],["nodetool(require('./node_tools/alt_attributes.j",{"_index":1740,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require('./node_tools/course_search.j",{"_index":1739,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["nodetool(require(./node_tools/tool_file.j",{"_index":1741,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["non",{"_index":1766,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["none",{"_index":675,"title":{},"body":{"components/CourseChipComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["normal",{"_index":1247,"title":{},"body":{"injectables/KatanaService.html":{}}}],["nosql",{"_index":1775,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["note",{"_index":1682,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["noth",{"_index":1790,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["notif",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["notifi",{"_index":1387,"title":{},"body":{"injectables/ToastService.html":{}}}],["npm",{"_index":1580,"title":{},"body":{"index.html":{}}}],["null",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["number",{"_index":481,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["numer",{"_index":774,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["object",{"_index":402,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["object.entries(issue.details).reduce((acc",{"_index":1149,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["object.key",{"_index":1030,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(sessionstorage).foreach(key",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(this.coursesobj).reduce((acc",{"_index":865,"title":{},"body":{"injectables/CourseService.html":{}}}],["object.keys(this.formgroup.controls).foreach(key",{"_index":1346,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["object.keys(this.issue.html).length",{"_index":1067,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object.keys(this.issue.tempvalues).foreach(optionkey",{"_index":1048,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["object:const",{"_index":1737,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["observ",{"_index":313,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["occur",{"_index":1639,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["octet/stream",{"_index":1169,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["on",{"_index":910,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["onc",{"_index":769,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["onchang",{"_index":1002,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onchange(optionkey",{"_index":1021,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["oninit",{"_index":508,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{}}}],["onlin",{"_index":491,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["onlyself",{"_index":1052,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["onscrol",{"_index":1094,"title":{},"body":{"components/IssueListComponent.html":{}}}],["onsubmit",{"_index":1323,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open",{"_index":377,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["open/clos",{"_index":1327,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["open_in_new",{"_index":692,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["opencours",{"_index":654,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["openmod",{"_index":362,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["opportun",{"_index":1759,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["option",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["option.descript",{"_index":1075,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["option.requir",{"_index":1315,"title":{},"body":{"classes/OptionModel.html":{}}}],["option.titl",{"_index":1074,"title":{},"body":{"components/IssueContainerComponent.html":{},"components/OptionsViewComponent.html":{}}}],["optionkey",{"_index":1024,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["optionmodel",{"_index":422,"title":{"classes/OptionModel.html":{}},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["optionmodel(this.toolservice.selectedtool.discoveropt",{"_index":1340,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionmodel(this.toolservice.selectedtool.fixopt",{"_index":1044,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["options.altcondition.includes('al",{"_index":1715,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["options.categories.push(category.id",{"_index":1354,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["options[key",{"_index":1347,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["optionsviewcompon",{"_index":205,"title":{"components/OptionsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["optionvalu",{"_index":472,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["order",{"_index":771,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["other",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["otherwis",{"_index":1669,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["out",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"modules/HomePageModule.html":{},"injectables/KatanaService.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["output",{"_index":317,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{}}}],["outsid",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["over",{"_index":561,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["overlay",{"_index":695,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/OptionsViewComponent.html":{}}}],["overlay.classnam",{"_index":915,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overlay.style.display",{"_index":916,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["overview",{"_index":1611,"title":{"overview.html":{},"additional-documentation/architecture/high-level-overview.html":{}},"body":{"overview.html":{},"additional-documentation/architecture.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["owner",{"_index":1823,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["packag",{"_index":1506,"title":{"dependencies.html":{}},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["page",{"_index":139,"title":{"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["page'},{'nam",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["page.compon",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page.component.css",{"_index":926,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.html",{"_index":927,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.t",{"_index":925,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:9",{"_index":928,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.modul",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.t",{"_index":942,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["page/breadcrumbs/breadcrumbs.component.t",{"_index":351,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"coverage.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:21",{"_index":363,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:31",{"_index":378,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:37",{"_index":376,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:44",{"_index":372,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/breadcrumbs/breadcrumbs.component.ts:53",{"_index":366,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["page/categories/categories.compon",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["page/categories/categories.component.t",{"_index":387,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["page/categories/categories.component.ts:14",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:23",{"_index":400,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/categories/categories.component.ts:31",{"_index":399,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["page/cod",{"_index":503,"title":{},"body":{"components/CodeEditorComponent.html":{},"coverage.html":{}}}],["page/error",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["page/hom",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["page/issu",{"_index":950,"title":{},"body":{"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"coverage.html":{}}}],["page/opt",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["page/stat",{"_index":1366,"title":{},"body":{"components/StatBadgeComponent.html":{},"coverage.html":{}}}],["page/tool",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["pair",{"_index":1150,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[0",{"_index":1151,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["pair[1",{"_index":1152,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["panorama_fish_ey",{"_index":883,"title":{},"body":{"injectables/CourseService.html":{}}}],["param",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["paramet",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["parser",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1252,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pass",{"_index":526,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["path",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pathmatch",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["pathpiec",{"_index":368,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["pathway",{"_index":493,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["persist",{"_index":935,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["pertin",{"_index":1808,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["phrase",{"_index":629,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["piec",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{}}}],["pill",{"_index":1369,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["place",{"_index":1466,"title":{},"body":{"injectables/ToolService.html":{}}}],["platform",{"_index":490,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["pleas",{"_index":936,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["point",{"_index":1432,"title":{},"body":{"injectables/ToolService.html":{},"additional-documentation/architecture.html":{}}}],["popul",{"_index":713,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["port",{"_index":1600,"title":{},"body":{"index.html":{}}}],["posit",{"_index":725,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{}}}],["possibl",{"_index":1699,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["practic",{"_index":1643,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["pre",{"_index":1267,"title":{},"body":{"injectables/KatanaService.html":{}}}],["pretti",{"_index":631,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["prevent",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["primari",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["privat",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["process",{"_index":305,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["processingmessag",{"_index":1422,"title":{},"body":{"injectables/ToolService.html":{}}}],["prod",{"_index":1587,"title":{},"body":{"index.html":{}}}],["produc",{"_index":1690,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["product",{"_index":1585,"title":{},"body":{"index.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["project",{"_index":1743,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["projectid",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":337,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{}}}],["promise(async",{"_index":1214,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["prop",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["properli",{"_index":1794,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["properti",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["provid",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"modules/HomePageModule.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"injectables/ToastService.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["providedin",{"_index":857,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["provider.addscope('email",{"_index":341,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["provider.addscope('profil",{"_index":340,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["public",{"_index":286,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["pull",{"_index":1652,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["purpos",{"_index":410,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"index.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["put",{"_index":1310,"title":{},"body":{"classes/OptionModel.html":{}}}],["queri",{"_index":747,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["question",{"_index":979,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["question_answ",{"_index":983,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["questionmodel",{"_index":1290,"title":{},"body":{"injectables/KatanaService.html":{}}}],["quit",{"_index":1768,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["quiz",{"_index":479,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["quizquest",{"_index":978,"title":{},"body":{"components/IssueCardComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["quizz",{"_index":454,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["ran",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["rc.11",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["rc.2",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["reactiv",{"_index":1302,"title":{},"body":{"classes/OptionModel.html":{}}}],["reactiveformsmodul",{"_index":949,"title":{},"body":{"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["read",{"_index":930,"title":{},"body":{"components/ErrorPageComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["readi",{"_index":1265,"title":{},"body":{"injectables/KatanaService.html":{}}}],["readonli",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reason",{"_index":555,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["receiv",{"_index":1255,"title":{},"body":{"injectables/KatanaService.html":{}}}],["recommend",{"_index":1814,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["red",{"_index":894,"title":{},"body":{"injectables/CourseService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["redirect",{"_index":282,"title":{},"body":{"injectables/AuthGuardService.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["redirectto",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":557,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["referenc",{"_index":1693,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["refresh",{"_index":1821,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["reg",{"_index":635,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regard",{"_index":1747,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["regex",{"_index":528,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp",{"_index":530,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["regexp(this.searchphras",{"_index":636,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["reject",{"_index":338,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(",{"_index":1705,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reject(new",{"_index":1217,"title":{},"body":{"injectables/KatanaService.html":{}}}],["relat",{"_index":552,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["reload",{"_index":371,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["remov",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["remove_circl",{"_index":794,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["removeal",{"_index":904,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["removecours",{"_index":818,"title":{},"body":{"injectables/CourseService.html":{}}}],["removecourse(cours",{"_index":843,"title":{},"body":{"injectables/CourseService.html":{}}}],["render",{"_index":966,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["replac",{"_index":744,"title":{},"body":{"components/CourseSelectionComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["report",{"_index":1163,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["repositori",{"_index":1577,"title":{},"body":{"index.html":{}}}],["repres",{"_index":417,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["request",{"_index":309,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["requir",{"_index":436,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["require('./firestor",{"_index":1796,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["require('cheerio",{"_index":1707,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["reset",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}],["resid",{"_index":1646,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["resolv",{"_index":1215,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["resolve(data",{"_index":1234,"title":{},"body":{"injectables/KatanaService.html":{}}}],["rest",{"_index":562,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["restor",{"_index":475,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["result",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/architecture/data-flow-diagram.html":{},"additional-documentation/architecture/high-level-overview.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/development-environment.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["retriev",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/CourseSelectionComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["retrieval?useridtoken=${useridtoken",{"_index":1232,"title":{},"body":{"injectables/KatanaService.html":{}}}],["retrievetoken",{"_index":291,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["return",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["revers",{"_index":770,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["revok",{"_index":1820,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["right",{"_index":1378,"title":{},"body":{"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["root",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{}}}],["root'},{'nam",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["rout",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{}}}],["router.events.subscribe((ev",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["router.navig",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToolService.html":{}}}],["router.navigate([`home/tools/${this.toolservice.selectedtool.id}/opt",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodul",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{}}}],["routermodule.forroot",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":1746,"title":{},"body":{"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["run",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["rxj",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"dependencies.html":{}}}],["safe",{"_index":594,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["same",{"_index":767,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["save",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["screen",{"_index":1437,"title":{},"body":{"injectables/ToolService.html":{}}}],["scroll",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":525,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["search_term",{"_index":741,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbi",{"_index":701,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["searchbox",{"_index":591,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchphras",{"_index":518,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["searchtext",{"_index":702,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["section",{"_index":1667,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["see",{"_index":718,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["seen",{"_index":1657,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["select",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["selectedcategori",{"_index":1443,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcategory(categori",{"_index":1453,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedcours",{"_index":851,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedcourse(cours",{"_index":859,"title":{},"body":{"injectables/CourseService.html":{}}}],["selecteddiscoveropt",{"_index":1423,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedissueitem",{"_index":811,"title":{},"body":{"injectables/CourseService.html":{}}}],["selectedtool",{"_index":1447,"title":{},"body":{"injectables/ToolService.html":{}}}],["selectedtool(tool",{"_index":1456,"title":{},"body":{"injectables/ToolService.html":{}}}],["selection'},{'nam",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["selection.compon",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{}}}],["selection.component.css",{"_index":697,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.html",{"_index":698,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.t",{"_index":694,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:121",{"_index":716,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:13",{"_index":1418,"title":{},"body":{"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:17",{"_index":733,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":734,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:21",{"_index":726,"title":{},"body":{"components/CourseSelectionComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":730,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:25",{"_index":732,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":731,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:31",{"_index":729,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":709,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":728,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:50",{"_index":710,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection.component.ts:85",{"_index":721,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["selection/cours",{"_index":693,"title":{},"body":{"components/CourseSelectionComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["selection/tool",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["selectissueitem",{"_index":1119,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selectissueitem(cours",{"_index":1129,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["send",{"_index":620,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["sent",{"_index":1253,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["sentiment_very_dissatisfi",{"_index":1112,"title":{},"body":{"components/IssueListComponent.html":{}}}],["separ",{"_index":1793,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["server",{"_index":77,"title":{"additional-documentation/architecture/server-endpoints.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/architecture/server-endpoints.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["server/node_tool",{"_index":1647,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["server/settings.json",{"_index":1601,"title":{},"body":{"index.html":{}}}],["server_log",{"_index":1782,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["serverdomain",{"_index":1177,"title":{},"body":{"injectables/KatanaService.html":{}}}],["serverlog(data",{"_index":1803,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["servic",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseSelectionComponent.html":{},"components/OptionsViewComponent.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["session",{"_index":545,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["sessionstorage.selectedcategori",{"_index":1454,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage.selectedtool",{"_index":1457,"title":{},"body":{"injectables/ToolService.html":{}}}],["sessionstorage['katana_cours",{"_index":871,"title":{},"body":{"injectables/CourseService.html":{}}}],["sessionvalu",{"_index":519,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["set",{"_index":147,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{}}}],["seteditorsess",{"_index":517,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["seteditorsession(tab",{"_index":548,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["setissuestatu",{"_index":1003,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setissuestatus(newstatu",{"_index":1026,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["setselectedcategori",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["setselectedcategory(categori",{"_index":398,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/ToolService.html":{}}}],["setselectedcours",{"_index":905,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["setselectedcourse(cours",{"_index":854,"title":{},"body":{"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{}}}],["setselectedtool(tool",{"_index":1450,"title":{},"body":{"injectables/ToolService.html":{}}}],["settimeout",{"_index":1405,"title":{},"body":{"injectables/ToastService.html":{}}}],["settings/opt",{"_index":1648,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["setup",{"_index":1162,"title":{"additional-documentation/setup.html":{}},"body":{"components/IssueNavComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["sever",{"_index":1758,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["short",{"_index":1680,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["show",{"_index":534,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["showeditor",{"_index":1004,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["shown",{"_index":837,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueCardComponent.html":{}}}],["side",{"_index":1373,"title":{},"body":{"components/StatBadgeComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["sidebar",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sidebar.compon",{"_index":1364,"title":{},"body":{"modules/SidebarModule.html":{}}}],["sidebar.component.css",{"_index":901,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.html",{"_index":902,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":900,"title":{},"body":{"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:15",{"_index":906,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:23",{"_index":911,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":907,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:52",{"_index":909,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar.component.ts:59",{"_index":908,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["sidebar/cours",{"_index":899,"title":{},"body":{"components/CourseSidebarComponent.html":{},"modules/SidebarModule.html":{},"coverage.html":{}}}],["sidebar/sidebar.modul",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarmodul",{"_index":226,"title":{"modules/SidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["sign",{"_index":303,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["signific",{"_index":1783,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["signinwithredirect(provid",{"_index":344,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["signout",{"_index":292,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["similar",{"_index":1641,"title":{},"body":{"additional-documentation/setup.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpl",{"_index":1730,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["simpli",{"_index":1687,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["singl",{"_index":461,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["size",{"_index":608,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["sizeof",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["skip",{"_index":465,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["small",{"_index":1788,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["socket",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["socket.addeventlistener('messag",{"_index":1262,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.clos",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["socket.io",{"_index":1553,"title":{},"body":{"dependencies.html":{}}}],["socket.onerror",{"_index":1280,"title":{},"body":{"injectables/KatanaService.html":{}}}],["socket.send(data",{"_index":1275,"title":{},"body":{"injectables/KatanaService.html":{}}}],["sole",{"_index":1772,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["sort",{"_index":722,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortbi",{"_index":707,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sortby(param",{"_index":720,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"modules/SidebarModule.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{}}}],["space",{"_index":610,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["spawn",{"_index":584,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["speak",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["specif",{"_index":468,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["specifi",{"_index":834,"title":{},"body":{"injectables/CourseService.html":{},"injectables/KatanaService.html":{},"index.html":{}}}],["spin",{"_index":1591,"title":{},"body":{"index.html":{}}}],["split",{"_index":672,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["spring",{"_index":791,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["src/.../firebase.auth.t",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/authguard.service.t",{"_index":278,"title":{},"body":{"injectables/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/authguard.service.ts:101",{"_index":306,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:20",{"_index":314,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:25",{"_index":316,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:30",{"_index":295,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:36",{"_index":311,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:37",{"_index":312,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:63",{"_index":299,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:71",{"_index":302,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/authguard.service.ts:91",{"_index":310,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["src/app/classes.t",{"_index":1300,"title":{},"body":{"classes/OptionModel.html":{},"coverage.html":{}}}],["src/app/classes.ts:14",{"_index":1307,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/classes.ts:27",{"_index":1308,"title":{},"body":{"classes/OptionModel.html":{}}}],["src/app/course.service.t",{"_index":801,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{}}}],["src/app/course.service.ts:113",{"_index":842,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:125",{"_index":836,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:142",{"_index":839,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:158",{"_index":825,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:17",{"_index":848,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:22",{"_index":845,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:27",{"_index":849,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:32",{"_index":847,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:34",{"_index":846,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:36",{"_index":853,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:40",{"_index":855,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:48",{"_index":856,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:50",{"_index":819,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:64",{"_index":821,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:82",{"_index":844,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/course.service.ts:95",{"_index":830,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/firebase.auth.t",{"_index":1484,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/hom",{"_index":350,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"coverage.html":{}}}],["src/app/interfaces.t",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"coverage.html":{}}}],["src/app/katana.service.t",{"_index":1176,"title":{},"body":{"injectables/KatanaService.html":{},"coverage.html":{}}}],["src/app/katana.service.ts:116",{"_index":1199,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:131",{"_index":1189,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:21",{"_index":1204,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:215",{"_index":1193,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:26",{"_index":1185,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:308",{"_index":1191,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:59",{"_index":1207,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:64",{"_index":1197,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/katana.service.ts:89",{"_index":1195,"title":{},"body":{"injectables/KatanaService.html":{}}}],["src/app/sidebar/cours",{"_index":646,"title":{},"body":{"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.module.t",{"_index":1363,"title":{},"body":{"modules/SidebarModule.html":{}}}],["src/app/toast.service.t",{"_index":1386,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/toast.service.ts:11",{"_index":1389,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:22",{"_index":1393,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/toast.service.ts:56",{"_index":1391,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/tool",{"_index":502,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["src/app/tool.service.t",{"_index":1419,"title":{},"body":{"injectables/ToolService.html":{},"coverage.html":{}}}],["src/app/tool.service.ts:21",{"_index":1429,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:34",{"_index":1433,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:38",{"_index":1436,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:42",{"_index":1441,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:47",{"_index":1440,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:52",{"_index":1426,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:56",{"_index":1427,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:60",{"_index":1438,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:62",{"_index":1445,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:65",{"_index":1446,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:70",{"_index":1449,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:73",{"_index":1451,"title":{},"body":{"injectables/ToolService.html":{}}}],["src/app/tool.service.ts:76",{"_index":1425,"title":{},"body":{"injectables/ToolService.html":{}}}],["stand",{"_index":1755,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["standard",{"_index":1764,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["start",{"_index":1248,"title":{"index.html":{}},"body":{"injectables/KatanaService.html":{},"index.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["startup",{"_index":1812,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["stat",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["statbadgecompon",{"_index":207,"title":{"components/StatBadgeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statcount",{"_index":1374,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["state",{"_index":474,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["statement",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["stattitl",{"_index":1375,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["statu",{"_index":322,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["statuscolor",{"_index":886,"title":{},"body":{"injectables/CourseService.html":{}}}],["statuscolors[statu",{"_index":895,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicon",{"_index":879,"title":{},"body":{"injectables/CourseService.html":{}}}],["statusicons[statu",{"_index":885,"title":{},"body":{"injectables/CourseService.html":{}}}],["step",{"_index":1573,"title":{},"body":{"index.html":{}}}],["still",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["storag",{"_index":823,"title":{},"body":{"injectables/CourseService.html":{}}}],["storagebucket",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":473,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["straightforward",{"_index":1731,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["string",{"_index":415,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/KatanaService.html":{},"components/StatBadgeComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["structur",{"_index":1751,"title":{"additional-documentation/firebase/database-structure.html":{}},"body":{"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["style",{"_index":396,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["sub",{"_index":496,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["subaccount",{"_index":703,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["submit",{"_index":1332,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["subscrib",{"_index":1233,"title":{},"body":{"injectables/KatanaService.html":{}}}],["subscript",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["successfulli",{"_index":1767,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["such",{"_index":478,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"interfaces/Tool.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["suit",{"_index":1761,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["support",{"_index":1608,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":761,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["suspici",{"_index":1784,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["svg",{"_index":1609,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1560,"title":{},"body":{"index.html":{}}}],["tab",{"_index":440,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["tab'",{"_index":550,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.sess",{"_index":599,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setmode('ace/mode/html",{"_index":601,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.settabsize(4",{"_index":607,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setuseworker(fals",{"_index":603,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.session.setusewrapmode(tru",{"_index":602,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tab.titl",{"_index":643,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["tabl",{"_index":714,"title":{},"body":{"components/CourseSelectionComponent.html":{},"coverage.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["tab}",{"_index":1010,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["tag",{"_index":1034,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tag_fac",{"_index":1111,"title":{},"body":{"components/IssueListComponent.html":{}}}],["take",{"_index":1309,"title":{},"body":{"classes/OptionModel.html":{}}}],["taken",{"_index":1329,"title":{},"body":{"components/OptionsViewComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["team",{"_index":1563,"title":{},"body":{"index.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["technic",{"_index":1748,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["tell",{"_index":1259,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["temp",{"_index":1581,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["temporari",{"_index":1754,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["tempvalu",{"_index":476,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["term",{"_index":498,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["termin",{"_index":1579,"title":{},"body":{"index.html":{}}}],["text",{"_index":430,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["text_rotation_non",{"_index":1660,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["the_tool_nam",{"_index":1664,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["then((cours",{"_index":763,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["then(this.dogooglelogin",{"_index":348,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["then(useridtoken",{"_index":1220,"title":{},"body":{"injectables/KatanaService.html":{}}}],["thing",{"_index":803,"title":{},"body":{"injectables/CourseService.html":{}}}],["think",{"_index":1068,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this._selectedcategori",{"_index":1452,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._selectedcours",{"_index":858,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitem",{"_index":862,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedcourse.issueitems.find(issueitem",{"_index":863,"title":{},"body":{"injectables/CourseService.html":{}}}],["this._selectedtool",{"_index":1455,"title":{},"body":{"injectables/ToolService.html":{}}}],["this._tab",{"_index":595,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this._tabs.foreach(tab",{"_index":597,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.activetab",{"_index":625,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.afauth.auth",{"_index":343,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authguardservice.canactiv",{"_index":1216,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authguardservice.retrievetoken",{"_index":1219,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.authstate.emit(fals",{"_index":327,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.authstate.emit(this.canactiv",{"_index":334,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.blueprint.nativeelement.valu",{"_index":758,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.categories.find(categori",{"_index":1464,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.closemod",{"_index":1143,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.course.error",{"_index":684,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.id",{"_index":669,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor",{"_index":674,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.includ",{"_index":678,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.instructor.replac",{"_index":671,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitem",{"_index":683,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.course.issueitems.reduce((acc",{"_index":686,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["this.coursechange.emit(this._selectedcours",{"_index":860,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseresult",{"_index":765,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.revers",{"_index":773,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseresults.sort((a",{"_index":775,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courses.reduce(acc",{"_index":877,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.courseservice.addcourse(cours",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["this.courseservice.coursechange.subscrib",{"_index":1102,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.courseservice.courses.find(c",{"_index":784,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.courseservice.courses.foreach((cours",{"_index":1145,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["this.courseservice.courses.foreach(c",{"_index":923,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.courses.foreach(cours",{"_index":1070,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.courseservice.courses.length",{"_index":1344,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.courseservice.courses.reduce((acc",{"_index":1471,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["this.courseservice.courseselectionopen",{"_index":918,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.coursesobj[`c${course.id",{"_index":1277,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.removecourse(c",{"_index":924,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["this.courseservice.selectedcours",{"_index":922,"title":{},"body":{"components/CourseSidebarComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.id",{"_index":1278,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.courseservice.selectedcourse.issueitems.length",{"_index":1108,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.courseservice.selectedissueitem",{"_index":1085,"title":{},"body":{"components/IssueDetailsComponent.html":{},"components/IssueNavComponent.html":{}}}],["this.courseservice.selectedissueitem.titl",{"_index":1086,"title":{},"body":{"components/IssueDetailsComponent.html":{}}}],["this.coursesobj[`c${course.id",{"_index":870,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.coursesobj[key",{"_index":866,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.dogooglelogin",{"_index":333,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.editor",{"_index":611,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.findall(reg",{"_index":638,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.on('chang",{"_index":626,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.sethighlightactiveline(tru",{"_index":618,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption('maxlin",{"_index":615,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setoption('minlin",{"_index":613,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tab.readonli",{"_index":623,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setreadonly(tru",{"_index":617,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.setsession(tab.sess",{"_index":624,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.editor.settheme('ace/theme/termin",{"_index":616,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.error",{"_index":1298,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandl",{"_index":1236,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.errorhandler(err",{"_index":1226,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.formgroup",{"_index":1341,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.formgroup.controls[key].valu",{"_index":1348,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.getcourseissuecount(statu",{"_index":878,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.gettoollist",{"_index":1212,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.get(`/api/tool",{"_index":1221,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post('/api/us",{"_index":1235,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.http.post(`/api/cours",{"_index":1231,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.issue.display",{"_index":1042,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup",{"_index":1045,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.get(optionkey",{"_index":1050,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.formgroup.value[optionkey",{"_index":1066,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.html[editortab.htmlkey",{"_index":1058,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel",{"_index":1043,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.optionmodel.togroup",{"_index":1046,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.statu",{"_index":1060,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalu",{"_index":1047,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issue.tempvalues[optionkey",{"_index":1065,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issuedetails.nativeelement.innerhtml",{"_index":1041,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.issueitemcount",{"_index":1103,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.clientheight",{"_index":1107,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.scrollheight",{"_index":1106,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.issuelistel.nativeelement.scrolltop",{"_index":1104,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.katanaservice.discoverissues(this.courseservice.cours",{"_index":1355,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.katanaservice.getcours",{"_index":755,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.lastsortedbi",{"_index":772,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.modalactions.emit",{"_index":381,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{}}}],["this.openmod",{"_index":1345,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.opt",{"_index":1312,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.optionmodel",{"_index":1339,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.optionmodel.togroup",{"_index":1342,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.options.foreach((opt",{"_index":1314,"title":{},"body":{"classes/OptionModel.html":{}}}],["this.removecourse(cours",{"_index":873,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.router.navig",{"_index":335,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.router.navigate(['hom",{"_index":1299,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.router.navigate([`home/tools/${this.toolservice.selectedtool.id}/issu",{"_index":1356,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["this.router.navigate(pathpiec",{"_index":383,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["this.search",{"_index":753,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchby.nativeelement.valu",{"_index":759,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchphras",{"_index":634,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.searchtext.nativeelement.value.length",{"_index":742,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.replace(/\\s/g",{"_index":764,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.searchtext.nativeelement.value.tolowercase().replace(/\\s/g",{"_index":750,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.selectedcours",{"_index":874,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedcourse.issueitems.reduce((acc",{"_index":875,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.selectedissueitem",{"_index":861,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.sessionvalues.emit(this._tabs[0].session.getvalu",{"_index":622,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.sessionvalues.emit(this.editor.getsession().getvalu",{"_index":627,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.seteditorsession(this._tabs[0",{"_index":619,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.sockets.push(socket",{"_index":1246,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.subaccount.nativeelement.valu",{"_index":756,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.tab",{"_index":596,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["this.term.nativeelement.valu",{"_index":757,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["this.toastservice.toasterror(err",{"_index":1296,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toollist.find(tool",{"_index":1462,"title":{},"body":{"injectables/ToolService.html":{}}}],["this.toolservice.process",{"_index":1240,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.processingmessag",{"_index":1239,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.selectedcategori",{"_index":403,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.toolservice.selecteddiscoveropt",{"_index":1273,"title":{},"body":{"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{}}}],["this.toolservice.selectedtool.editortab",{"_index":1054,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.editortabs.foreach(editortab",{"_index":1072,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.editortabs.map(editortab",{"_index":1055,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["this.toolservice.selectedtool.id",{"_index":1272,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.toolservice.toollist",{"_index":1224,"title":{},"body":{"injectables/KatanaService.html":{}}}],["this.typeicon",{"_index":975,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.typeicon.nativeelement.setattribute('data",{"_index":980,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["this.us",{"_index":325,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.user.subscribe(us",{"_index":330,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetail",{"_index":332,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.userdetails.email.includes('@byui.edu",{"_index":336,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["this.viewexpand",{"_index":641,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["those",{"_index":564,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["though",{"_index":589,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["thought",{"_index":1778,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["three",{"_index":740,"title":{},"body":{"components/CourseSelectionComponent.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["through",{"_index":300,"title":{},"body":{"injectables/AuthGuardService.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["throughout",{"_index":1671,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["time",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["titl",{"_index":413,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/database-structure.html":{}}}],["titlecolor",{"_index":1376,"title":{},"body":{"components/StatBadgeComponent.html":{}}}],["toast",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["toast(buildhtml(text",{"_index":1404,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast(text",{"_index":1390,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.servic",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{}}}],["toasterror",{"_index":1388,"title":{},"body":{"injectables/ToastService.html":{}}}],["toasterror(",{"_index":1392,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastservic",{"_index":35,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice.toast('you\\'l",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["toggl",{"_index":537,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["togroup",{"_index":1305,"title":{},"body":{"classes/OptionModel.html":{}}}],["token",{"_index":1822,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["tool",{"_index":47,"title":{"interfaces/Tool.html":{},"additional-documentation/setup/node-tools.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["tool'",{"_index":423,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool.icon",{"_index":405,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool.id",{"_index":1458,"title":{},"body":{"injectables/ToolService.html":{}}}],["tool.servic",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tool.titl",{"_index":406,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ToolSelectionComponent.html":{}}}],["tool_id",{"_index":1271,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["tool_log",{"_index":1786,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["toolcategori",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolid",{"_index":1237,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toollist",{"_index":1223,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToolService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toollog(data",{"_index":1804,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["toolpagemodul",{"_index":227,"title":{"modules/ToolPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"modules.html":{},"overview.html":{}}}],["toolselectioncompon",{"_index":210,"title":{"components/ToolSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"modules/HomePageModule.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolservic",{"_index":34,"title":{"injectables/ToolService.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSidebarComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["toolservice.processingmessag",{"_index":1474,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["toolservice.selecteddiscoveropt",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["toolservice.selectedtool.descript",{"_index":1357,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["toolservice.selectedtool.fixedmessag",{"_index":1077,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["toolservice.selectedtool.titl",{"_index":384,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/OptionsViewComponent.html":{}}}],["toolservice.toollist",{"_index":1213,"title":{},"body":{"injectables/KatanaService.html":{}}}],["toolservice.toolviewopen",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":968,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["tooltyp",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["toolview",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["toolviewcompon",{"_index":211,"title":{"components/ToolViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"modules/ToolPageModule.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolviewopen",{"_index":1424,"title":{},"body":{"injectables/ToolService.html":{}}}],["top",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCardComponent.html":{}}}],["total",{"_index":664,"title":{},"body":{"components/CourseChipComponent.html":{},"injectables/CourseService.html":{},"components/ToolViewComponent.html":{}}}],["track",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["tri",{"_index":1242,"title":{},"body":{"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["true",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["two",{"_index":1683,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["type",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["typeicon",{"_index":956,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeicons[this.issueitem.categori",{"_index":989,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typeof",{"_index":1396,"title":{},"body":{"injectables/ToastService.html":{}}}],["types/d3",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["types[this.issueitem.categori",{"_index":981,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["typic",{"_index":1805,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["undefin",{"_index":787,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["under",{"_index":497,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["underscor",{"_index":1662,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["unexpectedli",{"_index":1282,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["uniqu",{"_index":1672,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["univers",{"_index":1569,"title":{},"body":{"index.html":{}}}],["untouch",{"_index":463,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{}}}],["unus",{"_index":590,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["unwant",{"_index":1770,"title":{},"body":{"additional-documentation/firebase/firebase-authentication.html":{}}}],["up",{"_index":544,"title":{"additional-documentation/setup/setting-up-firebase.html":{}},"body":{"components/CodeEditorComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"index.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["updat",{"_index":533,"title":{},"body":{"components/CodeEditorComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["uri",{"_index":754,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["url",{"_index":367,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"interfaces/Tool.html":{}}}],["us",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture/discover-&-fix-workflow.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["useabl",{"_index":1012,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["user",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"interfaces/IssueItem.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/setup.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["user'",{"_index":307,"title":{},"body":{"injectables/AuthGuardService.html":{},"injectables/CourseService.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["user_log",{"_index":1781,"title":{},"body":{"additional-documentation/firebase/database-structure.html":{}}}],["userdetail",{"_index":288,"title":{},"body":{"injectables/AuthGuardService.html":{}}}],["useremail",{"_index":1201,"title":{},"body":{"injectables/KatanaService.html":{}}}],["useridtoken",{"_index":1241,"title":{},"body":{"injectables/KatanaService.html":{}}}],["userlog(data",{"_index":1806,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["valid",{"_index":281,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/IssueContainerComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{},"additional-documentation/firebase/firebase-authentication.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["validators.requir",{"_index":1317,"title":{},"body":{"classes/OptionModel.html":{}}}],["valu",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"classes/OptionModel.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"injectables/ToolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["var",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["variabl",{"_index":1485,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":802,"title":{},"body":{"injectables/CourseService.html":{}}}],["variou",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuardService.html":{},"components/IssueNavComponent.html":{},"injectables/ToastService.html":{},"additional-documentation/setup.html":{}}}],["verifi",{"_index":279,"title":{},"body":{"injectables/AuthGuardService.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{}}}],["verifynewus",{"_index":1818,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["via",{"_index":805,"title":{},"body":{"injectables/CourseService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["view",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"components/ErrorPageComponent.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"interfaces/Tool.html":{},"components/ToolSelectionComponent.html":{},"injectables/ToolService.html":{},"components/ToolViewComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["view'},{'nam",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbsComponent.html":{},"components/CategoriesComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"components/CourseSidebarComponent.html":{},"components/ErrorPageComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueDetailsComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"components/OptionsViewComponent.html":{},"components/StatBadgeComponent.html":{},"components/ToolSelectionComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.compon",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/ToolPageModule.html":{}}}],["view.component.css",{"_index":1320,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.html",{"_index":1321,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{}}}],["view.component.t",{"_index":1319,"title":{},"body":{"components/OptionsViewComponent.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:13",{"_index":1467,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:20",{"_index":1469,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:21",{"_index":1470,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:25",{"_index":1337,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:27",{"_index":1468,"title":{},"body":{"components/ToolViewComponent.html":{}}}],["view.component.ts:29",{"_index":1336,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:33",{"_index":1334,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:39",{"_index":1324,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:48",{"_index":1338,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:49",{"_index":1335,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:60",{"_index":1333,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:67",{"_index":1325,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:75",{"_index":1326,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view.component.ts:84",{"_index":1328,"title":{},"body":{"components/OptionsViewComponent.html":{}}}],["view/opt",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/OptionsViewComponent.html":{},"coverage.html":{}}}],["view/tool",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/ToolPageModule.html":{},"components/ToolViewComponent.html":{},"coverage.html":{}}}],["view_agenda",{"_index":987,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["view_list",{"_index":988,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewchild",{"_index":573,"title":{},"body":{"components/CodeEditorComponent.html":{},"components/CourseSelectionComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{}}}],["viewchild('blueprint",{"_index":737,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('codeeditor",{"_index":1039,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('editor",{"_index":582,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["viewchild('issuedetail",{"_index":1038,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["viewchild('issuelist",{"_index":1101,"title":{},"body":{"components/IssueListComponent.html":{}}}],["viewchild('searchbi",{"_index":738,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('searchtext",{"_index":739,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('subaccount",{"_index":735,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('term",{"_index":736,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["viewchild('typeicon",{"_index":974,"title":{},"body":{"components/IssueCardComponent.html":{}}}],["viewexpand",{"_index":514,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["virtual",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["visibl",{"_index":645,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["void",{"_index":375,"title":{},"body":{"components/BreadcrumbsComponent.html":{},"components/CodeEditorComponent.html":{},"components/CourseChipComponent.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"components/CourseSidebarComponent.html":{},"components/IssueCardComponent.html":{},"components/IssueContainerComponent.html":{},"components/IssueListComponent.html":{},"components/IssueNavComponent.html":{},"injectables/KatanaService.html":{},"components/OptionsViewComponent.html":{},"injectables/ToastService.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wait",{"_index":1258,"title":{},"body":{"injectables/KatanaService.html":{}}}],["want",{"_index":1726,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/setup/enabling-accounts-on-firebase.html":{}}}],["warn",{"_index":884,"title":{},"body":{"injectables/CourseService.html":{}}}],["wave",{"_index":1061,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["web",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket",{"_index":1206,"title":{},"body":{"injectables/KatanaService.html":{},"injectables/ToastService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/discover?useridtoken=${useridtoken",{"_index":1245,"title":{},"body":{"injectables/KatanaService.html":{}}}],["websocket(`ws://${this.serverdomain}/api/tool/fix?useridtoken=${useridtoken",{"_index":1288,"title":{},"body":{"injectables/KatanaService.html":{}}}],["well",{"_index":354,"title":{},"body":{"components/BreadcrumbsComponent.html":{}}}],["whatev",{"_index":554,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["whether",{"_index":435,"title":{},"body":{"interfaces/Category.html":{},"components/CodeEditorComponent.html":{},"interfaces/Course.html":{},"components/CourseSelectionComponent.html":{},"injectables/CourseService.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueContainerComponent.html":{},"interfaces/IssueItem.html":{},"components/OptionsViewComponent.html":{},"interfaces/Tool.html":{},"injectables/ToolService.html":{},"additional-documentation/firebase/firebase-functions.html":{}}}],["whichev",{"_index":1599,"title":{},"body":{"index.html":{}}}],["white",{"_index":897,"title":{},"body":{"injectables/CourseService.html":{},"components/IssueContainerComponent.html":{},"components/StatBadgeComponent.html":{}}}],["whitespac",{"_index":745,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["width",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CourseSidebarComponent.html":{}}}],["window",{"_index":539,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window.location.hostname.replace(/www",{"_index":1202,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.location.href",{"_index":1460,"title":{},"body":{"injectables/ToolService.html":{}}}],["window.location.href.includes('tool",{"_index":921,"title":{},"body":{"components/CourseSidebarComponent.html":{}}}],["window.location.port",{"_index":1203,"title":{},"body":{"injectables/KatanaService.html":{}}}],["window.open('https://byui.instructure.com/cours",{"_index":668,"title":{},"body":{"components/CourseChipComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1170,"title":{},"body":{"components/IssueNavComponent.html":{}}}],["window['ace'].edit(this.editorel.nativeel",{"_index":612,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/edit_session').editsess",{"_index":585,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['ace'].require('ace/searchbox",{"_index":592,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["window['html_beautify'](tab['htmlstr",{"_index":598,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["winter",{"_index":790,"title":{},"body":{"components/CourseSelectionComponent.html":{}}}],["within",{"_index":486,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DiscoverOption.html":{},"interfaces/EditorTab.html":{},"interfaces/FixOption.html":{},"interfaces/Issue.html":{},"components/IssueDetailsComponent.html":{},"interfaces/IssueItem.html":{},"interfaces/Tool.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["without",{"_index":1159,"title":{},"body":{"components/IssueNavComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["word",{"_index":522,"title":{},"body":{"components/CodeEditorComponent.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["work",{"_index":1031,"title":{},"body":{"components/IssueContainerComponent.html":{},"additional-documentation/firebase/firebase-authentication.html":{}}}],["workaround",{"_index":1033,"title":{},"body":{"components/IssueContainerComponent.html":{}}}],["workflow",{"_index":1636,"title":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}},"body":{"additional-documentation/architecture/discover-&-fix-workflow.html":{}}}],["wrap",{"_index":640,"title":{},"body":{"components/CodeEditorComponent.html":{}}}],["wrapper",{"_index":1526,"title":{"additional-documentation/firebase/firestore-wrapper.html":{}},"body":{"dependencies.html":{},"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{},"additional-documentation/firebase.html":{},"additional-documentation/firebase/database-structure.html":{},"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wrapper'",{"_index":1802,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["wrapper.j",{"_index":1791,"title":{},"body":{"additional-documentation/firebase/firestore-wrapper.html":{}}}],["written",{"_index":1817,"title":{},"body":{"additional-documentation/firebase/firebase-functions.html":{}}}],["ws",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["yellow",{"_index":1670,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'd",{"_index":1676,"title":{},"body":{"additional-documentation/setup/setting-up-firebase.html":{},"additional-documentation/setup/node-tools.html":{}}}],["you'r",{"_index":1749,"title":{},"body":{"additional-documentation/firebase.html":{}}}],["young",{"_index":1568,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/SidebarModule.html":{},"modules/ToolPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main component for the entire application.\nIt holds the primary pieces that allow the user to\nnavigate from the top down.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, courseService: CourseService, katanaService: KatanaService, toolService: ToolService, toastService: ToastService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor. This creates subscriptions to routes changes to adjust values\nas needed. For example, if the user navigates to the tool view (i.e. they ran\na tool), then many values in various services are removed or reset to prevent\nconflicting values between services.\nThis will also retrieve the list of tools from the Katana service when it is\ncreated.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides toast notification functionality.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides Firebase authentication functionality.\nBeing used in app.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, Event, NavigationEnd } from '@angular/router';\nimport { CourseService } from './course.service';\nimport { KatanaService } from './katana.service';\nimport { ToastService } from './toast.service';\nimport { ToolService } from './tool.service';\nimport { AuthGuardService } from './authguard.service'; // Being used in app.component.html (i.e. DO NOT DELETE)\n\n/**\n * This is the main component for the entire application.\n * It holds the primary pieces that allow the user to\n * navigate from the top down.\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    /**\n     * Constructor. This creates subscriptions to routes changes to adjust values\n     * as needed. For example, if the user navigates to the tool view (i.e. they ran\n     * a tool), then many values in various services are removed or reset to prevent\n     * conflicting values between services.\n     *\n     * This will also retrieve the list of tools from the Katana service when it is\n     * created.\n     *\n     * @param router Used to navigate the user as needed.\n     * @param courseService Provides information and management for selected courses.\n     * @param katanaService Provides functionality for making API calls to the Katana server.\n     * @param toolService Provides information and management for available tools.\n     * @param toastService Provides toast notification functionality.\n     * @param authGuardService Provides Firebase authentication functionality.\n     * Being used in app.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(private router: Router,\n        private courseService: CourseService,\n        private katanaService: KatanaService,\n        private toolService: ToolService,\n        private toastService: ToastService,\n        private authGuardService: AuthGuardService) {\n\n        router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd &&\n                !event.urlAfterRedirects.includes('/issues')) {\n\n                // RESET all properties not used outside of tool view\n\n                courseService.selectedIssueItem = null;\n                courseService.selectedCourse = null;\n                toolService.toolViewOpen = false;\n                toolService.selectedDiscoverOptions = false;\n                courseService.courses.forEach(course => {\n                    course.issueItems = [];\n                    course.processing = false;\n                });\n\n                // document.documentElement.style.setProperty(`--course-sidebar-width`, '112px');\n                // document.documentElement.style.setProperty(`--course-chip-width`, '92px');\n\n                // Clear out the web sockets in case any are still running\n                katanaService.sockets.forEach(socket => socket.close());\n                katanaService.sockets = [];\n\n            } else if (event instanceof NavigationEnd &&\n                event.urlAfterRedirects.includes('/issues')) {\n\n                if (!toolService.selectedTool) {\n                    router.navigate(['/']);\n                    return;\n                }\n\n                if (toolService.selectedDiscoverOptions === false) {\n                    router.navigate([`home/tools/${this.toolService.selectedTool.id}/options`]);\n                    toastService.toast('You\\'ll need to run the tool again to go back to the Issues page.');\n                }\n\n                // Select the first course and adjust the bar width\n                if (courseService.courses.length > 0) {\n                    courseService.selectedCourse = courseService.courses[0];\n                    // document.documentElement.style.setProperty(`--course-sidebar-width`, '340px');\n                    // document.documentElement.style.setProperty(`--course-chip-width`, '330px');\n                }\n\n                // Set the toolView tracking prop to true, all others off\n                toolService.toolViewOpen = true;\n                courseService.courseSelectionOpen = false;\n\n            }\n        });\n\n        // Set the saved courses they had last selected as the currently selected courses\n        Object.keys(sessionStorage).forEach(key => {\n            if (key.includes('katana_course')) {\n                const course = JSON.parse(sessionStorage[key]);\n                this.courseService.addCourse(course);\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\nLogging you in...\nYou must log in with a BYUI Google account.\nIf this is your first time, speak with an Admin to get your account enabled.\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Logging you in...You must log in with a BYUI Google account.If this is your first time, speak with an Admin to get your account enabled.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HomePageModule\n                            \n                            \n                                    SidebarModule\n                            \n                            \n                                    ToolPageModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport 'materialize-css';\nimport 'rxjs';\n\n/* Firebase */\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from './firebase.auth';\nimport { AuthGuardService } from './authguard.service';\n\n/* Modules */\nimport { SidebarModule } from './sidebar/sidebar.module';\nimport { HomePageModule } from './home-page/home-page.module';\nimport { ToolPageModule } from './tool-page/tool-page.module';\n\n/* Katana Components */\nimport { AppComponent } from './app.component';\nimport { CategoriesComponent } from './home-page/categories/categories.component';\nimport { ToolViewComponent } from './tool-page/tool-view/tool-view.component';\nimport { ToolSelectionComponent } from './home-page/tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './home-page/options-view/options-view.component';\nimport { ErrorPageComponent } from './home-page/error-page/error-page.component';\n\nexport const appRoutes: Routes = [\n    {\n        path: 'categories',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n    },\n    {\n        path: 'home',\n        component: CategoriesComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/error',\n        component: ErrorPageComponent\n    },\n    {\n        path: 'home/tools/:tool_id/options',\n        component: OptionsViewComponent,\n        canActivate: [AuthGuardService]\n    },\n    {\n        path: 'home/tools/:tool_id/issues',\n        component: ToolViewComponent,\n        canActivate: [AuthGuardService]\n    }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        ),\n        BrowserModule,\n        SidebarModule,\n        HomePageModule,\n        ToolPageModule,\n        HttpModule,\n        HttpClientModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFirestoreModule,\n        AngularFireAuthModule\n    ],\n    providers: [\n        AuthGuardService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuardService.html":{"url":"injectables/AuthGuardService.html","title":"injectable - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/authguard.service.ts\n        \n\n            \n                Description\n            \n            \n                Verifies the user is correctly logged in with a valid\nGoogle BYUI account. Redirects the user to the Google\nlogin page as needed. Provides validation for the user\nto access various routes.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                user\n                            \n                            \n                                    Private\n                                userDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                retrieveToken\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authguard.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                angularfire2 - https://github.com/angular/angularfire2\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify location and navigate the user to new pages as needed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            \nUsed to prevent the user from navigating through Katana if they\nare not logged in with a valid google (byui) account.\n\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            \nRedirects the user to the google login page, where they sign in,\nand then are returned to Katana to have their credentials processed.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the user's idToken for Firebase, so requests can be validated on the\nserver.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/authguard.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            \nSigns the user out of Katana and redirects them to the Google login\npage.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:36\n                            \n                        \n\n                \n                    \n                        angularfire2 - https://github.com/angular/angularfire2\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:37\n                            \n                        \n\n                \n                    \n                        Used to verify location and navigate the user to new pages as needed\n*********************************************************************************\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:20\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDetails:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/authguard.service.ts:25\n                            \n                        \n\n                \n                    \n                        \nThe currently logged in user\n\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { User } from 'firebase';\nimport { auth } from 'firebase';\nimport { Observable } from 'rxjs';\n\n/**\n * Verifies the user is correctly logged in with a valid\n * Google BYUI account. Redirects the user to the Google\n * login page as needed. Provides validation for the user\n * to access various routes.\n */\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private user: Observable;\n\n    /** *****************************\n     *  The currently logged in user\n     *******************************/\n    private userDetails: User = null;\n\n    /**\n     * Event emitted when auth status changes\n     */\n    @Output() authState = new EventEmitter();\n\n    /** *********************************************************************************\n     * @param afAuth angularfire2 - https://github.com/angular/angularfire2\n     * @param router Used to verify location and navigate the user to new pages as needed\n     ***********************************************************************************/\n    constructor(public afAuth: AngularFireAuth,\n        public router: Router) {\n        this.user = afAuth.authState;\n        this.authState.emit(false);\n\n        auth().getRedirectResult()\n            .catch(console.error);\n\n        this.user.subscribe(user => {\n            if (user) {\n                auth().updateCurrentUser(user);\n                this.userDetails = user;\n            } else if (!user) {\n                if (this.userDetails) {\n                    this.userDetails = null;\n                }\n                this.doGoogleLogin();\n            }\n            this.authState.emit(this.canActivate());\n            this.router.navigate(['/']);\n        });\n    }\n\n    /** *********************************************************************************\n     * Used to prevent the user from navigating through Katana if they\n     * are not logged in with a valid google (byui) account.\n     ***********************************************************************************/\n    canActivate(): boolean {\n        return (this.userDetails !== null && this.userDetails.email.includes('@byui.edu'));\n    }\n\n    /** *********************************************************************************\n     * Redirects the user to the google login page, where they sign in,\n     * and then are returned to Katana to have their credentials processed.\n     ***********************************************************************************/\n    doGoogleLogin() {\n        return new Promise((resolve, reject) => {\n            const provider = new auth.GoogleAuthProvider();\n            provider.addScope('profile');\n            provider.addScope('email');\n            auth().setPersistence(auth.Auth.Persistence.SESSION)\n                .then(() => {\n                    this.afAuth.auth\n                        .signInWithRedirect(provider)\n                        .catch(function (error) {\n                            console.error(error);\n                        });\n                });\n        });\n    }\n\n    /** *********************************************************************************\n     * Signs the user out of Katana and redirects them to the Google login\n     * page.\n     ***********************************************************************************/\n    signOut() {\n        return auth().signOut()\n            .then(this.doGoogleLogin)\n            .catch(console.error);\n    }\n\n    /** *********************************************************************************\n     * Retrieves the user's idToken for Firebase, so requests can be validated on the\n     * server.\n     ***********************************************************************************/\n    retrieveToken() {\n        return auth().currentUser.getIdToken(true)\n            .catch(console.error);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbsComponent.html":{"url":"components/BreadcrumbsComponent.html","title":"component - BreadcrumbsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n\n\n    \n        Description\n    \n    \n        \nBuilds the breadcrumbs for navigation, as well as the feedback and\nuser details in the navigation bar.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumbs\n            \n\n            \n                styleUrls\n                breadcrumbs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumbs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildRouterLink\n                            \n                            \n                                closeModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toolService: ToolService, authGuardService: AuthGuardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:21\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify current location and navigate user to new page.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to verify currently selected tool.\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Enables Sign Out button. Being used in \nbreadcrumbs.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildRouterLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildRouterLink(pathPieces: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            \nBuilds a URL, then navigates the router to it.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathPieces\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nArray of each piece of the path to navigate to.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    boolean - Returns false to prevent full page reload.\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            \nCloses the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            \nOpens the feedback modal.\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:21\n                            \n                        \n\n                \n                    \n                        \nUsed to open and close the modal for feedback.\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/breadcrumbs/breadcrumbs.component.ts:31\n                            \n                        \n\n                \n                    \n                        Used to verify currently selected tool.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { AuthGuardService } from '../../authguard.service'; // Being used in breadcrumbs.component.html (i.e. DO NOT DELETE)\nimport { MaterializeAction } from 'angular2-materialize';\n\n/** ******************************************************************\n * Builds the breadcrumbs for navigation, as well as the feedback and\n * user details in the navigation bar.\n ********************************************************************/\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.css']\n})\nexport class BreadcrumbsComponent {\n\n    /** ******************************************************************\n     * Used to open and close the modal for feedback.\n     ********************************************************************/\n    modalActions = new EventEmitter();\n\n    /** ******************************************************************\n     * Constructor\n     * @param router Used to verify current location and navigate user to new page.\n     * @param toolService Used to verify currently selected tool.\n     * @param authGuardService Enables Sign Out button. Being used in \n     * breadcrumbs.component.html (i.e. DO NOT DELETE)\n     ********************************************************************/\n    constructor(private router: Router,\n        public toolService: ToolService,\n        private authGuardService: AuthGuardService) { }\n\n    /** ******************************************************************\n     * Opens the feedback modal.\n     ********************************************************************/\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /** ******************************************************************\n     * Closes the feedback modal.\n     ********************************************************************/\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /** ******************************************************************\n     * Builds a URL, then navigates the router to it.\n     * @param pathPieces - Array of each piece of the path to navigate to.\n     * @returns boolean - Returns false to prevent full page reload.\n     ********************************************************************/\n    buildRouterLink(pathPieces) {\n        this.router.navigate(pathPieces);\n        return false;\n    }\n}\n\n    \n\n    \n        \n    \n        \n\n            Home\n            {{toolService.selectedTool.title}}\n\n            \n                \n                    {{authGuardService.userDetails.displayName}}\n                \n                \n                    \n                \n                \n                    \n                        Sign Out\n                    \n                \n            \n\n            \n                \n                    feedback\n                \n            \n\n        \n    \n\n\n\n\n    \n        Loading...\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Home            {{toolService.selectedTool.title}}                                                {{authGuardService.userDetails.displayName}}                                                                                                                                Sign Out                                                                                                feedback                                                    Loading...    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/categories/categories.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer for all available tool categories. Each Category is generated\nbased on the available tools.\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/categories/categories.component.ts:14\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to generate each available category\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Verifies if course selection is open, \nso styling can be applied. Being used in \ncategories.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCategory(category: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            \nThis sets the selected Category on the Tool service.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe category to be set as the selected category\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Returns false to prevent the entire page (just the router) from reloading\n\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/categories/categories.component.ts:23\n                            \n                        \n\n                \n                    \n                        Used to generate each available category\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Being used in categories.component.html (i.e. DO NOT DELETE)\n\n/** **********************************************************\n * Container for all available tool categories. Each {@link Category} is generated\n * based on the available tools.\n ************************************************************/\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent {\n\n    /** **********************************************************\n     * Constructor\n     * @param toolService Used to generate each available category\n     * @param courseService Verifies if course selection is open, \n     * so styling can be applied. Being used in \n     * categories.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(public toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /** **********************************************************\n     * This sets the selected {@link Category} on the Tool service.\n     * @param {object} category - The category to be set as the selected category\n     * @returns {false} Returns false to prevent the entire page (just the router) from reloading\n     ************************************************************/\n    setSelectedCategory(category) {\n        this.toolService.selectedCategory = category;\n        return false;\n    }\n\n}\n\n    \n\n    \n        \n    \n        {{category.title}}\n        \n            \n                \n                    {{tool.icon}}\n                    {{tool.title}}\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{category.title}}                                                        {{tool.icon}}                    {{tool.title}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a category. Tools are categorized based\non their purpose. Each category is displayed on the\nhome page.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MDIcon used to represent the category in the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the category \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The string used by tools to identify the category they belong to \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CodeEditorComponent.html":{"url":"components/CodeEditorComponent.html","title":"component - CodeEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CodeEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/code-editor/code-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-code-editor\n            \n\n            \n                styleUrls\n                code-editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./code-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _tabs\n                            \n                            \n                                activeTab\n                            \n                            \n                                editor\n                            \n                            \n                                editorEl\n                            \n                            \n                                viewExpanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditorSession\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchPhrase\n                            \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sessionValues\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/code-editor/code-editor.component.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        searchPhrase\n                    \n                    \n                        If certain key words should be highlighted by the editor's\nsearch functionality, this should be passed as an input as\na string. It will be converted into a regex no matter, so\na regex string (to be passed into the RegExp constructor)\ncan also be passed in.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabs\n                    \n                    \n                        The tabs to add to the code editor. This may include tabs\nlike \"Current HTML\" and \"Updated HTML\" to show the user how\nthe HTML will be changed by the tool.\n\n                            \n                            Type:    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sessionValues\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:61\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandView\n                            \n                            \n                        \n                    \n                \n                \n                    \nexpandView()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Fired on component load, this sets up the editor, creates the tabs provided\nby the selected tool, creates the sessions for each tab, beautifies their code,\ninserts their code, and then sets the settings and options for the editor.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditorSession\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditorSession(tab: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Sets the editor's session to the selected tab's session\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The tab (and it's related info) to set as the\neditor's current session\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _tabs:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:59\n                            \n                        \n\n                \n                    \n                        Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\nthe passed in tabs don't store as references correctly, so adding\nthe session to them doesn't carry over to the rest of the methods.\nThis helps with those reference issues. This is set during the \"ngOnInit\"\nmethod.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeTab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeTab:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        The currently active tab on the tabs bar of the editor.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:38\n                            \n                        \n\n                \n                    \n                        The editor instance. This is set after it has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editorEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                        Element reference to the editor div itself so we can\ninitiate the Ace editor instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewExpanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewExpanded:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/code-editor/code-editor.component.ts:50\n                            \n                        \n\n                \n                    \n                        Whether or not the editor is in \"edit\" mode. This just means that\nit is expanded, currently. Whether or not it can be edited is\ndetermined by the tab's \"readOnly\" property.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, ViewChild, ElementRef, EventEmitter } from '@angular/core';\n\n/**\n * Integrates Ace code editor to allow viewing and editing HTML from an issue's canvas item\n */\n@Component({\n    selector: 'app-code-editor',\n    templateUrl: './code-editor.component.html',\n    styleUrls: ['./code-editor.component.css']\n})\nexport class CodeEditorComponent implements OnInit {\n\n    /**\n     * The tabs to add to the code editor. This may include tabs\n     * like \"Current HTML\" and \"Updated HTML\" to show the user how\n     * the HTML will be changed by the tool.\n     */\n    @Input('tabs') tabs: any[];\n\n    /**\n     * If certain key words should be highlighted by the editor's\n     * search functionality, this should be passed as an input as\n     * a string. It will be converted into a regex no matter, so\n     * a regex string (to be passed into the RegExp constructor)\n     * can also be passed in.\n     */\n    @Input('searchPhrase') searchPhrase: string;\n\n    /**\n     * Element reference to the editor div itself so we can\n     * initiate the Ace editor instance.\n     */\n    @ViewChild('editor') editorEl: ElementRef;\n\n    /**\n     * The editor instance. This is set after it has been initialized.\n     */\n    editor: any;\n\n    /**\n     * The currently active tab on the tabs bar of the editor.\n     */\n    activeTab: any;\n\n    /**\n     * Whether or not the editor is in \"edit\" mode. This just means that\n     * it is expanded, currently. Whether or not it can be edited is\n     * determined by the tab's \"readOnly\" property.\n     */\n    viewExpanded = false;\n\n    /**\n     * Stores the tab objects passed in to the \"tabs\" input. For whatever reason,\n     * the passed in tabs don't store as references correctly, so adding\n     * the session to them doesn't carry over to the rest of the methods.\n     * This helps with those reference issues. This is set during the \"ngOnInit\"\n     * method.\n     */\n    _tabs: any[] = [];\n\n    @Output() sessionValues = new EventEmitter();\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Fired on component load, this sets up the editor, creates the tabs provided\n     * by the selected tool, creates the sessions for each tab, beautifies their code,\n     * inserts their code, and then sets the settings and options for the editor.\n     */\n    ngOnInit() {\n        // The EditSession class is used to spawn new sessions in the editor\n        const EditSession = window['ace'].require('ace/edit_session').EditSession;\n        // Allows Ctrl+F Search functionality (keep, even though it says the var is unused)\n        const searchBox = window['ace'].require('ace/searchbox');\n        // Save a correct reference to the tab objects that is safe to use\n        this._tabs = this.tabs;\n\n        // Create and add an editor session to each tab, beautify its code, and insert it\n        this._tabs.forEach(tab => {\n            const code = window['html_beautify'](tab['htmlString'] || ' '); // Beautifies the code\n            tab.session = new EditSession(code);\n            tab.session.setMode('ace/mode/html');\n            tab.session.setUseWrapMode(true);\n            tab.session.setUseWorker(false); // Disables the linter/syntax checker\n            tab.session.setTabSize(4); // Sets the tab size to 4 spaces\n        });\n\n        // Create the editor, set the options, and set the first session\n        this.editor = window['ace'].edit(this.editorEl.nativeElement);\n        this.editor.setOption('minLines', 10);\n        this.editor.setOption('maxLines', 10);\n        this.editor.setTheme('ace/theme/terminal');\n        this.editor.setReadOnly(true);\n        this.editor.setHighlightActiveLine(true);\n        this.setEditorSession(this._tabs[0]);\n\n        // send the value of the current tab to the code editor in issue-container.component.ts\n        this.sessionValues.emit(this._tabs[0].session.getValue());\n    }\n\n    /**\n     * Sets the editor's session to the selected tab's session\n     * @param tab The tab (and it's related info) to set as the\n     * editor's current session\n     */\n    setEditorSession(tab) {\n        if (!tab.session) return;\n        this.editor.setReadOnly(tab.readOnly);\n        this.editor.setSession(tab.session);\n        this.activeTab = tab;\n\n        this.editor.on('change', () => {\n            this.sessionValues.emit(this.editor.getSession().getValue());\n        });\n\n        // This \"if\" prevents it from searching with an empty search phrase,\n        // which finds pretty much every empty character...\n        if (this.searchPhrase) {\n            // Converts the provided search phrase to a RegExp\n            let reg = new RegExp(this.searchPhrase, 'gi');\n            // Finds and highlights all matches to the RegExp\n            this.editor.findAll(reg, {\n                needle: reg,\n                wrap: true,\n                regExp: true\n            });\n        }\n    }\n\n    /**\n     * Toggles the height of the editor window using Ace's \"maxLines\" editor setting.\n     */\n    expandView() {\n        this.viewExpanded = !this.viewExpanded;\n        this.editor.setOption('maxLines', this.viewExpanded ? 25 : 10);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{tab.title}}\n        \n\n        \n            {{activeTab && activeTab.readOnly ? 'visibility' : 'code'}}\n        \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{tab.title}}                            {{activeTab && activeTab.readOnly ? \\'visibility\\' : \\'code\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CodeEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single course \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        account\n                                \n                                \n                                            Optional\n                                        blueprint\n                                \n                                \n                                        course_code\n                                \n                                \n                                        course_name\n                                \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        instructor\n                                \n                                \n                                        issueItems\n                                \n                                \n                                        platform\n                                \n                                \n                                            Optional\n                                        processing\n                                \n                                \n                                            Optional\n                                        term\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The sub-account the course is under in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blueprint\n                                    \n                                \n                                \n                                    \n                                        blueprint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether or not the course is a Blueprint course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_code\n                                    \n                                \n                                \n                                    \n                                        course_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The code for the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_name\n                                    \n                                \n                                \n                                    \n                                        course_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the course in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If an error is returned by a tool, it is attached to the course here \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course's ID in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructor\n                                    \n                                \n                                \n                                    \n                                        instructor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current instructor for the course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueItems\n                                    \n                                \n                                \n                                    \n                                        issueItems:     IssueItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The IssueItems for this course \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The platform it belongs to (online, campus, pathway) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        processing\n                                    \n                                \n                                \n                                    \n                                        processing:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the course is currently be processed through a tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        term\n                                    \n                                \n                                \n                                    \n                                        term:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The term the course is set to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to the course in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseChipComponent.html":{"url":"components/CourseChipComponent.html","title":"component - CourseChipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseChipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-chip/course-chip.component.ts\n\n\n    \n        Description\n    \n    \n        Represents a Course to be acted on. Generated based on the list of \nCourses stored in CourseService.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-chip\n            \n\n            \n                styleUrls\n                course-chip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-chip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildInstructorName\n                            \n                            \n                                getIssueCount\n                            \n                            \n                                openCourse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-chip/course-chip.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify the currently selected course\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Allows this component to identify if the tool view is open.\nBeing used in course-chip.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        course\n                    \n                    \n                        The Course this chip represents\n\n                            \n                            Type:    Course\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildInstructorName\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildInstructorName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Formats the instructor's name to fit on the chip appropriately.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The formatted instructor name\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nIssue status to match\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | string\n\n                            \n                                \n                                    The total number of issues matching the provided status.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Opens the course in Canvas in a new tab.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-chip/course-chip.component.ts:28\n                            \n                        \n\n                \n                    \n                        Allows this component to identify the currently selected course\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service'; // Being used in course-chip.component.html (i.e. DO NOT DELETE)\nimport { Course } from '../../interfaces';\n\n/**\n * Represents a {@link Course} to be acted on. Generated based on the list of \n * {@link Course}s stored in {@link CourseService}.\n */\n@Component({\n    selector: 'app-course-chip',\n    templateUrl: './course-chip.component.html',\n    styleUrls: ['./course-chip.component.css']\n})\nexport class CourseChipComponent {\n\n    /**\n     * The {@link Course} this chip represents\n     */\n    @Input() course: Course;\n\n    /**\n     * Constructor\n     * @param courseService Allows this component to identify the currently selected course\n     * @param toolService Allows this component to identify if the tool view is open.\n     * Being used in course-chip.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService) { }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     */\n    openCourse(): void {\n        window.open('https://byui.instructure.com/courses/' + this.course.id, '_blank');\n    }\n\n    /**\n     * Formats the instructor's name to fit on the chip appropriately.\n     * @returns {string} The formatted instructor name\n     */\n    buildInstructorName(): string {\n        let names = this.course.instructor.replace(/,/, '').split(' ');\n        var instructorName = this.course.instructor === 'none' ? 'No Instructor' : this.course.instructor;\n        if (names.length > 1 && this.course.instructor.includes(',')) {\n            instructorName = `${names[1][0]}. ${names[0]}`;\n        } else if (names.length > 1) {\n            instructorName = `${names[0][0]}. ${names[1]}`;\n        }\n        return instructorName;\n    }\n\n    /**\n     * Opens the course in Canvas in a new tab.\n     * @param {string} status - Issue status to match\n     * @returns {number} The total number of issues matching the provided status.\n     */\n    getIssueCount(status): number | string {\n        if (!this.course.issueItems) return 0;\n        if (this.course.error) return 'E';\n        return this.course.issueItems.reduce((acc, issueItem) => {\n            let issues = issueItem.issues.filter(issue => {\n                if (!status) return true;\n                return issue.status === status;\n            });\n            return acc + issues.length;\n        }, 0);\n    }\n}\n\n    \n\n    \n        \n    \n\n        \n            {{course.course_code}}\n            \n                {{buildInstructorName()}}\n            \n        \n\n        \n            \n                {{getIssueCount()}}\n            \n        \n        .\n    \n\n    \n        clear\n    \n    \n        open_in_new\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{course.course_code}}                            {{buildInstructorName()}}                                                        {{getIssueCount()}}                            .                clear                open_in_new    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseChipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSelectionComponent.html":{"url":"components/CourseSelectionComponent.html","title":"component - CourseSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-selection/course-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Provides the user management for the selected courses, including a course search\noverlay to add/remove courses.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-selection\n            \n\n            \n                styleUrls\n                course-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                blueprint\n                            \n                            \n                                courseResults\n                            \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                lastSortedBy\n                            \n                            \n                                    Private\n                                searchBy\n                            \n                            \n                                searching\n                            \n                            \n                                    Private\n                                searchText\n                            \n                            \n                                    Private\n                                subAccount\n                            \n                            \n                                    Private\n                                term\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCourses\n                            \n                            \n                                isAdded\n                            \n                            \n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for making API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCourses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            This retrieves all courses that match the given parameters from Canvas \nand returns them as an array of course objects that have been modified \nby us. The returned results will populate the 'courseResults' array and \nwill display in the results table in the course-selection html file.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdded(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the selected course from courseResults\nis already in the courses array in courseService.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course that is being checked\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether the course is already added\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortBy\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBy(param: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Sorts the courseResults array according to the course attribute defined by 'param'\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The object key to be sorted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    The new position of the object in the array\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blueprint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blueprint:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Element reference to the blueprint filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseResults\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseResults:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:34\n                            \n                        \n\n                \n                    \n                        Results of a search \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastSortedBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastSortedBy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:31\n                            \n                        \n\n                \n                    \n                        Holds what the last search was sorted by \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchBy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBy:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        Element reference to the search-by filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searching\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searching:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:28\n                            \n                        \n\n                \n                    \n                        Whether or not a search is currently processing \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:25\n                            \n                        \n\n                \n                    \n                        Element reference to the search text input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subAccount:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:17\n                            \n                        \n\n                \n                    \n                        Element reference to the sub-account filter input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            term\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        term:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-selection/course-selection.component.ts:19\n                            \n                        \n\n                \n                    \n                        Element reference to the term filter input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { KatanaService } from '../../katana.service';\nimport { CourseService } from '../../course.service';\nimport { Course } from '../../interfaces';\n\n/**\n * Provides the user management for the selected courses, including a course search\n * overlay to add/remove courses.\n */\n@Component({\n    selector: 'app-course-selection',\n    templateUrl: './course-selection.component.html',\n    styleUrls: ['./course-selection.component.css']\n})\nexport class CourseSelectionComponent {\n    /** Element reference to the sub-account filter input */\n    @ViewChild('subAccount') private subAccount: ElementRef;\n    /** Element reference to the term filter input */\n    @ViewChild('term') private term: ElementRef;\n    /** Element reference to the blueprint filter input */\n    @ViewChild('blueprint') private blueprint: ElementRef;\n    /** Element reference to the search-by filter input */\n    @ViewChild('searchBy') private searchBy: ElementRef;\n    /** Element reference to the search text input */\n    @ViewChild('searchText') private searchText: ElementRef;\n\n    /** Whether or not a search is currently processing */\n    searching: boolean = false;\n\n    /** Holds what the last search was sorted by */\n    lastSortedBy: string;\n\n    /** Results of a search */\n    courseResults: Course[] = [];\n\n    /**\n     * Constructor\n     * @param {KatanaService} katanaService Provides functionality for making API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     */\n    constructor(private katanaService: KatanaService,\n        public courseService: CourseService) { }\n\n    /**\n     * This retrieves all courses that match the given parameters from Canvas \n     * and returns them as an array of course objects that have been modified \n     * by us. The returned results will populate the 'courseResults' array and \n     * will display in the results table in the course-selection html file.\n     */\n    async getCourses() {\n        // Canvas makes you have an input of at least three characters to use the search_term in the API\n        if (this.searchText.nativeElement.value.length > 2) {\n\n            // Replace any whitespaces with '%20' for the query parameter and make everything lowercase\n            const searchText = this.searchText.nativeElement.value.toLowerCase().replace(/\\s/g, '%20');\n\n            // Set the loading circle to display before retrieving the courses\n            this.searching = true;\n\n            // Send the search parameters to the katana service to build the correct URI\n            this.katanaService.getCourses({\n                subAccount: this.subAccount.nativeElement.value,\n                term: this.term.nativeElement.value,\n                blueprint: this.blueprint.nativeElement.value,\n                searchText: searchText,\n                searchBy: this.searchBy.nativeElement.value\n            })\n                /* After getting the courses from Canvas, check to make sure what you \n                got back matches what is currently in the search text input box */\n                .then((courses: Course[]) => {\n                    if (searchText === this.searchText.nativeElement.value.replace(/\\s/g, '%20')) {\n                        this.searching = false;\n                        this.courseResults = courses;\n                    }\n                })\n                .catch(console.error);\n        }\n    }\n\n    /**\n     * Sorts the courseResults array according to the course attribute defined by 'param'\n     * @param {string} param The object key to be sorted\n     * @returns {number} The new position of the object in the array\n     */\n    sortBy(param) {\n        // If they click on the same category more than once, it will reverse the order of the results\n        if (this.lastSortedBy === param) {\n            this.courseResults = this.courseResults.reverse();\n            this.lastSortedBy = param;\n            return;\n        }\n\n        this.lastSortedBy = param;\n        // Sort numerically \n        if (param === 'id' || param === 'account' || param === 'blueprint') {\n            this.courseResults.sort((a, b) => {\n                return a[param] - b[param];\n            });\n        } else {\n            // Sort alphabetically\n            this.courseResults.sort((a, b) => {\n                let name1 = a[param].toUpperCase();\n                let name2 = b[param].toUpperCase();\n                if (name1  name2) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n    }\n\n    /**\n     * Checks to see if the selected course from courseResults\n     * is already in the courses array in courseService.\n     * @param {object} course The course that is being checked\n     * @returns {boolean} Whether the course is already added\n     */\n    isAdded(course) {\n        return this.courseService.courses.find(c => c.id === course.id) !== undefined;\n    }\n}\n\n    \n\n    \n        \n  Course Selection\n  \n    \n      \n        Sub-Account\n          \n             -->\n            Development\n            Campus\n            Pathway\n            All\n          \n        \n        Term\n          \n             -->\n            Fall\n            Winter\n            Spring -->\n            Master Courses\n            All\n          \n        \n        Blueprint\n          \n             -->\n            True\n            False\n            All\n          \n        \n        Search By\n          \n            Instructor\n            Course\n          \n        \n        \n          Search Term\n          \n        \n      \n      Results {{courseResults.length !== 0 ? '(' + courseResults.length + ')': '0'}}\n      \n        \n          \n            +/-\n            Name\n            Code\n            Instructor\n            Account\n            Term\n            Blueprint\n            ID\n            Open in Canvas\n          \n        \n        \n          \n            \n              \n                {{isAdded(course) ? 'remove_circle' : 'add_circle'}}\n              \n              {{course.course_name}}\n              {{course.course_code}}\n              {{course.instructor}}\n              {{course.account}}\n              {{course.term}}\n              {{course.blueprint}}\n              {{course.id}}\n              \n                \n                  open_in_new\n                \n              \n            \n          \n          \n          \n            \n              \n                \n                  \n                    \n                  \n                  \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              Searching ...\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Course Selection                    Sub-Account                       -->            Development            Campus            Pathway            All                          Term                       -->            Fall            Winter            Spring -->            Master Courses            All                          Blueprint                       -->            True            False            All                          Search By                      Instructor            Course                                    Search Term                              Results {{courseResults.length !== 0 ? \\'(\\' + courseResults.length + \\')\\': \\'0\\'}}                                    +/-            Name            Code            Instructor            Account            Term            Blueprint            ID            Open in Canvas                                                                              {{isAdded(course) ? \\'remove_circle\\' : \\'add_circle\\'}}                            {{course.course_name}}              {{course.course_code}}              {{course.instructor}}              {{course.account}}              {{course.term}}              {{course.blueprint}}              {{course.id}}                                                open_in_new                                                                                                                                                                                                                                                                                                                                                              Searching ...                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides information and management for a variety of things, but mainly the\ncourses the user selects via the CourseSelectionComponent. Also provides\nfunctionality for styling and counts based on Courses' IssueItems.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCourse\n                            \n                            \n                                courseChange\n                            \n                            \n                                courseSelectionOpen\n                            \n                            \n                                coursesObj\n                            \n                            \n                                selectedIssueItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                            \n                                getBackgroundColorClasses\n                            \n                            \n                                getCourseIssueCount\n                            \n                            \n                                getStatusIcon\n                            \n                            \n                                getTextColorClasses\n                            \n                            \n                                getTotalIssueCount\n                            \n                            \n                                removeCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/course.service.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Adds a course to the list of currently selected courses. This\nwill also add and remove them from the user's local storage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBackgroundColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBackgroundColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:158\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the background color for an issue card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourseIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourseIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for a single course.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatusIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatusIcon(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the left of an issue on\na card. It is determined by the status of the icon. (i.e. \"fixed\")\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The text used to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextColorClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextColorClasses(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:142\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon color for the status icon of an\nindividual issue, as shown on an IssueItem card.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The status of the issue.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTotalIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTotalIssueCount(status: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Gets the count of issues under a given status for all courses.\nStatus is optional; returns total count if left blank.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe status desired\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \nThe number of issues with the specified status\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/course.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Removes a course from the list of currently selected courses.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCourse:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:22\n                            \n                        \n\n                \n                    \n                        The currently selected Course.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseChange:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseSelectionOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseSelectionOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:32\n                            \n                        \n\n                \n                    \n                        Whether or not the CourseSelectionComponent is open.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coursesObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        coursesObj:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:17\n                            \n                        \n\n                \n                    \n                        Holds all of the currently selected Courses.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedIssueItem:     IssueItem\n\n                    \n                \n                    \n                        \n                            Type :     IssueItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course.service.ts:27\n                            \n                        \n\n                \n                    \n                        The currently selected IssueItem.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCourse\n                    \n                \n\n                \n                    \n                        getselectedCourse()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:36\n                                \n                            \n\n                \n                    \n                        setselectedCourse(course: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            course\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        courses\n                    \n                \n\n                \n                    \n                        getcourses()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course.service.ts:48\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, EventEmitter } from '@angular/core';\nimport { Course, IssueItem } from './interfaces';\n\n/**\n * Provides information and management for a variety of things, but mainly the\n * courses the user selects via the {@link CourseSelectionComponent}. Also provides\n * functionality for styling and counts based on {@link Course}s' {@link IssueItem}s.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CourseService {\n\n    /**\n     * Holds all of the currently selected {@link Course}s.\n     */\n    coursesObj: object = {};\n\n    /**\n     * The currently selected {@link Course}.\n     */\n    _selectedCourse: Course;\n\n    /**\n     * The currently selected {@link IssueItem}.\n     */\n    selectedIssueItem: IssueItem;\n\n    /**\n     * Whether or not the {@link CourseSelectionComponent} is open.\n     */\n    courseSelectionOpen: boolean = false;\n\n    courseChange = new EventEmitter();\n\n    get selectedCourse() {\n        return this._selectedCourse;\n    }\n\n    set selectedCourse(course: Course) {\n        if (course === this._selectedCourse || !course) return;\n        // Set the selected course to a reference, so we don't have issues when updating the course objects\n        this._selectedCourse = course;\n        this.courseChange.emit(this._selectedCourse);\n        this.selectedIssueItem = this._selectedCourse.issueItems ? this._selectedCourse.issueItems.find(issueItem => issueItem.course_id === course.id) : null;\n    }\n\n    get courses() {\n        return Object.keys(this.coursesObj).reduce((acc, key) => [...acc, this.coursesObj[key]], []);\n    }\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n    * Adds a course to the list of currently selected courses. This\n    * will also add and remove them from the user's local storage.\n    * @param {number} courseId - The ID of the course\n    * @param {string} courseName - The full name of the course\n    * @param {string} courseCode - The course code\n    */\n    addCourse(course: Course): void {\n        if (!this.coursesObj[`c${course.id}`]) {\n            if (!sessionStorage['katana_course' + course.id]) {\n                sessionStorage['katana_course' + course.id] = JSON.stringify(course);\n            }\n            if (!course.issueItems) {\n                course.issueItems = [];\n            }\n            this.coursesObj[`c${course.id}`] = course;\n        } else {\n            this.removeCourse(course);\n        }\n    }\n\n    /**\n     * Removes a course from the list of currently selected courses.\n     * @param {number} courseId - The ID of the course\n     */\n    removeCourse(course: Course): void {\n        if (sessionStorage['katana_course' + course.id]) {\n            delete sessionStorage['katana_course' + course.id];\n        }\n        delete this.coursesObj[`c${course.id}`];\n    }\n\n    /**\n     * Gets the count of issues under a given status for a single course.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getCourseIssueCount(status): number {\n        if (this.selectedCourse) {\n            return this.selectedCourse.issueItems.reduce((acc, issueItem) => {\n                if (!status) {\n                    return acc + issueItem.issues.length;\n                }\n                const issues = issueItem.issues.filter(issue => issue.status === status);\n                return acc + issues.length;\n            }, 0);\n        }\n    }\n\n    /**\n     * Gets the count of issues under a given status for all courses.\n     * Status is optional; returns total count if left blank.\n     * @param {string} status - The status desired\n     * @returns {number} - The number of issues with the specified status\n     */\n    getTotalIssueCount(status): number {\n        return this.courses.reduce(acc => {\n            return acc + this.getCourseIssueCount(status);\n        }, 0);\n    }\n\n    /**\n     * This is used to determine the icon shown at the left of an issue on\n     * a card. It is determined by the status of the icon. (i.e. \"fixed\")\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The text used to display the icon.\n     */\n    getStatusIcon(status): string {\n        const statusIcons = {\n            'fixed': 'check_circle',\n            'approved': 'check_circle_outline',\n            'skipped': 'call_missed_outgoing',\n            'untouched': 'panorama_fish_eye',\n            'failed': 'warning'\n        };\n        return statusIcons[status];\n    }\n\n    /**\n     * This is used to determine the icon color for the status icon of an\n     * individual issue, as shown on an IssueItem card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getTextColorClasses(status): string {\n        const statusColors = {\n            'fixed': 'blue-text text-accent-3',\n            'approved': 'green-text text-accent-4',\n            'skipped': 'blue-grey-text text-darken-2',\n            'untouched': 'blue-grey-text text-lighten-4',\n            'failed': 'red-text'\n        };\n        return statusColors[status];\n    }\n\n    /**\n     * This is used to determine the background color for an issue card.\n     * @param {string} [status] The status of the issue.\n     * @returns {string} The classes to apply to the element.\n     */\n    getBackgroundColorClasses(status): string {\n        const statusColors = {\n            'fixed': 'blue lighten-4',\n            'approved': 'mint',\n            'skipped': 'blue-grey lighten-4',\n            'untouched': 'white',\n            'failed': 'red lighten-5'\n        };\n        return statusColors[status];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseSidebarComponent.html":{"url":"components/CourseSidebarComponent.html","title":"component - CourseSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/course-sidebar/course-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        The sidebar containing selected course management and the\nCourseSelectionComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-sidebar\n            \n\n            \n                styleUrls\n                course-sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                courseOverlay\n                            \n                            \n                                removeAll\n                            \n                            \n                                setSelectedCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\nBeing used in course-sidebar.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \ncourseOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Toggles the CourseSelectionComponent overlay open and closed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Removes all courses from the sidebar. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelectedCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelectedCourse(course: Course)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course to the one provided.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                        \n                                                                    Course\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sidebar/course-sidebar/course-sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service'; // Being used in course-sidebar.component.html (i.e. DO NOT DELETE)\nimport { Course } from '../../interfaces';\n\n/**\n * The sidebar containing selected course management and the\n * {@link CourseSelectionComponent}.\n */\n@Component({\n    selector: 'app-course-sidebar',\n    templateUrl: './course-sidebar.component.html',\n    styleUrls: ['./course-sidebar.component.css']\n})\nexport class CourseSidebarComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * Being used in course-sidebar.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService,\n        private toolService: ToolService) { }\n\n    /**\n     * Toggles the {@link CourseSelectionComponent} overlay open and closed.\n     */\n    courseOverlay() {\n        // cast the returned Element object to an HTMLElement object\n        let overlay: HTMLElement = document.querySelector('app-course-selection');\n\n        // toggle add the 'open' class to the app-course-selection component\n        if (overlay.className === 'open') {\n            overlay.className = 'close';\n        } else if (overlay.className === 'close') {\n            overlay.className = 'open';\n        } else {\n            overlay.style.display = 'block';\n            overlay.className = 'open';\n        }\n\n        this.courseService.courseSelectionOpen = !this.courseService.courseSelectionOpen;\n        // let newWidth = this.courseService.courseSelectionOpen ? '207px' : '112px';\n        // document.documentElement.style.setProperty(`--course-sidebar-width`, newWidth);\n    }\n\n    /**\n     * Sets the currently selected course to the one provided.\n     * @param {Course} course The course to set as the currently selected course.\n     */\n    setSelectedCourse(course: Course) {\n        if (window.location.href.includes('tool-view')) {\n            this.courseService.selectedCourse = course;\n        }\n    }\n\n    /** Removes all courses from the sidebar. */\n    removeAll() {\n        this.courseService.courses.forEach(c => this.courseService.removeCourse(c));\n    }\n}\n    \n\n    \n        \n    Courses\n    \n        Remove All\n        \n    \n\n    \n        \n            {{courseService.courseSelectionOpen ? 'close' : 'add'}}\n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Courses            Remove All                                    {{courseService.courseSelectionOpen ? \\'close\\' : \\'add\\'}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscoverOption.html":{"url":"interfaces/DiscoverOption.html","title":"interface - DiscoverOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DiscoverOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's discovery mode.\nDisplayed on the options page for the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not it is a required option on the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorTab.html":{"url":"interfaces/EditorTab.html","title":"interface - EditorTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tab to be generated on the HTML editor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        htmlKey\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlKey\n                                    \n                                \n                                \n                                    \n                                        htmlKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use to grab the html string off the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Determines if the user can edit the code \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tab \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/error-page/error-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                error-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error-page.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/error-page/error-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \nConstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Collects errors in Katana and allows\nthem to be read and displayed to the user. Being used in \nerror-page.component.html (i.e. DO NOT DELETE)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { KatanaService } from '../../katana.service'; // Being used in error-page.component.html (i.e. DO NOT DELETE)\n\n@Component({\n    selector: 'app-error-page',\n    templateUrl: './error-page.component.html',\n    styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent {\n    \n    /** **********************************************************\n     * Constructor\n     * @param katanaService Collects errors in Katana and allows\n     * them to be read and displayed to the user. Being used in \n     * error-page.component.html (i.e. DO NOT DELETE)\n     ************************************************************/\n    constructor(private katanaService: KatanaService) { }\n\n}\n\n    \n\n    \n        \n\n    {{katanaService.error ? katanaService.error.message : 'There isn\\'t any error information available to display'}}\n\n    Status: {{katanaService.error ? katanaService.error.status : '---'}}\n\n    If this error persists, please contact a Katana admin.\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{katanaService.error ? katanaService.error.message : \\'There isn\\\\'t any error information available to display\\'}}    Status: {{katanaService.error ? katanaService.error.status : \\'---\\'}}    If this error persists, please contact a Katana admin.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FixOption.html":{"url":"interfaces/FixOption.html","title":"interface - FixOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FixOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for an option used for a tool's fix mode.\nDisplayed on each issue discovered by the tool.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choices\n                                \n                                \n                                            Optional\n                                        defaultText\n                                \n                                \n                                        description\n                                \n                                \n                                        key\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                    \n                                \n                                \n                                    \n                                        choices:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The available choices for the option (not applicable to \"text\" type) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultText\n                                    \n                                \n                                \n                                    \n                                        defaultText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default text for \"text\" type options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description to display to the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key used to identify the option in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the option is required in the form \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title for the option \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n  Modules\n  HomePageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home-page/home-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BreadcrumbsComponent\n                            \n                            \n                                CategoriesComponent\n                            \n                            \n                                ErrorPageComponent\n                            \n                            \n                                OptionsViewComponent\n                            \n                            \n                                ToolSelectionComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BreadcrumbsComponent\n                            \n                            \n                                    ErrorPageComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\n\nimport { CategoriesComponent } from './categories/categories.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { ToolSelectionComponent } from './tool-selection/tool-selection.component';\nimport { OptionsViewComponent } from './options-view/options-view.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorPageComponent } from './error-page/error-page.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        BreadcrumbsComponent,\n        FormsModule,\n        ReactiveFormsModule,\n        ErrorPageComponent\n    ],\n    declarations: [\n        BreadcrumbsComponent,\n        CategoriesComponent,\n        ToolSelectionComponent,\n        OptionsViewComponent,\n        ErrorPageComponent\n    ]\n})\nexport class HomePageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Issue.html":{"url":"interfaces/Issue.html","title":"interface - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents a single issue in an IssueItem. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        formGroup\n                                \n                                \n                                        html\n                                \n                                \n                                            Optional\n                                        optionModel\n                                \n                                \n                                            Optional\n                                        optionValues\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tempValues\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An object containing issue-specific details \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML string used to display the contents of the issue in its IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formGroup\n                                    \n                                \n                                \n                                    \n                                        formGroup:     FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {@link FormGroup} generated for the issue's {@link FixOption}s \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If included, this is the HTML for the issue \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionModel\n                                    \n                                \n                                \n                                    \n                                        optionModel:     OptionModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OptionModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The OptionModel used to generated any FixOptions used by the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionValues\n                                    \n                                \n                                \n                                    \n                                        optionValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The results of form generated by the above OptionModel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the issue (untouched, approved, skipped, fixed, failed) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tempValues\n                                    \n                                \n                                \n                                    \n                                        tempValues:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to store the current state of the form to restore it on page reload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the issue \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCardComponent.html":{"url":"components/IssueCardComponent.html","title":"component - IssueCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-card/issue-card.component.ts\n\n\n    \n        Description\n    \n    \n        Manages the display for a single IssueItem.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-card\n            \n\n            \n                styleUrls\n                issue-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                typeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeIcon\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueItem\n                            \n                            \n                                position\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueItem\n                    \n                    \n                        The IssueItem used by this component.\n\n                            \n                            Type:    IssueItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                    \n                        The position of the component in the IssueListComponent.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTypeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTypeIcon()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            This is used to determine the icon shown at the top left of a card.\nIt is based on the IssueItem's item_type property, or the type of\nthe item in Canvas. (i.e. Page)\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The icon title to use to display the icon.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            This class implements AfterViewInit, which runs after the element\nis rendered completely on the page. This is so we can add the tooltip\ndata correctly to the type icon.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeIcon:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-card/issue-card.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the element in the view for this component that\ncontains it's item type icon (ex. Page, Discussion, Quiz).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Manages the display for a single {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-card',\n    templateUrl: './issue-card.component.html',\n    styleUrls: ['./issue-card.component.css']\n})\nexport class IssueCardComponent implements AfterViewInit {\n    /**\n     * The {@link IssueItem} used by this component.\n     */\n    @Input('issueItem') issueItem: IssueItem;\n    /**\n     * The position of the component in the {@link IssueListComponent}.\n     */\n    @Input('position') position: number;\n    /**\n     * Reference to the element in the view for this component that\n     * contains it's item type icon (ex. Page, Discussion, Quiz).\n     */\n    @ViewChild('typeIcon') typeIcon: ElementRef;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) { }\n\n    /**\n     * This class implements AfterViewInit, which runs after the element\n     * is rendered completely on the page. This is so we can add the tooltip\n     * data correctly to the type icon.\n     */\n    ngAfterViewInit() {\n        if (!this.typeIcon) return;\n        let types = {\n            'pages': 'Page',\n            'assignments': 'Assignment',\n            'discussions': 'Discussion',\n            'files': 'File',\n            'folders': 'Folder',\n            'quizzes': 'Quiz',\n            'quizQuestions': 'Quiz Question',\n            'modules': 'Module',\n            'moduleItems': 'Module Item',\n        }\n        this.typeIcon.nativeElement.setAttribute('data-tooltip', types[this.issueItem.category]);\n    }\n\n    /**\n     * This is used to determine the icon shown at the top left of a card.\n     * It is based on the IssueItem's item_type property, or the type of\n     * the item in Canvas. (i.e. Page)\n     * @returns {string} The icon title to use to display the icon.\n     */\n    getTypeIcon() {\n        let typeIcons = {\n            'pages': 'insert_drive_file',\n            'assignments': 'assignment',\n            'discussions': 'question_answer',\n            'files': 'attach_file',\n            'folders': 'folder',\n            'quizzes': 'gavel',\n            'quizQuestions': 'help_outline',\n            'modules': 'view_agenda',\n            'moduleItems': 'view_list',\n        }\n        return typeIcons[this.issueItem.category];\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{getTypeIcon()}}\n            \n            \n                {{issueItem.title}}\n            \n        \n        \n            open_in_new\n        \n    \n    \n        \n            \n                {{courseService.getStatusIcon(issue.status)}}\n            {{issue.title}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{getTypeIcon()}}                                        {{issueItem.title}}                                        open_in_new                                                    {{courseService.getStatusIcon(issue.status)}}            {{issue.title}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContainerComponent.html":{"url":"components/IssueContainerComponent.html","title":"component - IssueContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-container/issue-container.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the display of a single Issue.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-container\n            \n\n            \n                styleUrls\n                issue-container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeEditor\n                            \n                            \n                                issueDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEditorTabs\n                            \n                            \n                                getButtonClasses\n                            \n                            \n                                handleEditorSessionValues\n                            \n                            \n                                isFixed\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                setIssueStatus\n                            \n                            \n                                showEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-container/issue-container.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-container.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of the item's issues array the issue is at.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                    \n                        The issue attached to the display.\n\n                            \n                            Type:    Issue\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buildEditorTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \nbuildEditorTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Using the {@link Tab}s provided by the Node Tool, builds\nuseable tab objects for each issue.\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The tabs to use to build the editor instance.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClasses(desiredStatus: string, elType: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Determines the classes used to style buttons based on the\ncurrent status of the issue they belong to.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        desiredStatus\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                What status the issue current is.\n\n                                                        \n                                                \n                                                \n                                                        elType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Either \"button\" or \"icon\".\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The classes to apply to the element.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleEditorSessionValues\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleEditorSessionValues(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:145\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFixed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFixed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Returns whether or not the item's status is fixed or failed.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not this issue's status is fixed or failed.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Fired when the component is initialized, this manages the item's display.\nIt inserts the form for the Issue's FixOptions if available.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(optionKey: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Manages the validity of the form on each keystroke.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        optionKey\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The key of the option this came from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIssueStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIssueStatus(newStatus: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Sets the status of the issue.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newStatus\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new status to set the issue to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowEditor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:141\n                            \n                        \n\n\n                \n                    \n                            Since Object.keys does not work in angular templating, this is\na workaround. It checks if the issue has any HTML to display in\nthe editor. Used by the app-code-editor tag to determine if it\nshould display.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeEditor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        codeEditor:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueDetails:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-container/issue-container.component.ts:29\n                            \n                        \n\n                \n                    \n                        Element reference to the card containing details about the issue.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-container.component.html (i.e. DO NOT DELETE)\nimport { ToolService } from '../../tool.service';\nimport { Issue } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the display of a single {@link Issue}.\n */\n@Component({\n    selector: 'app-issue-container',\n    templateUrl: './issue-container.component.html',\n    styleUrls: ['./issue-container.component.css']\n})\nexport class IssueContainerComponent implements OnInit {\n    /**\n     * The issue attached to the display.\n     */\n    @Input('issue') issue: Issue;\n\n    /**\n     * The index of the item's issues array the issue is at.\n     */\n    @Input('index') index: number;\n\n    /**\n     * Element reference to the card containing details about the issue.\n     */\n    @ViewChild('issueDetails') issueDetails: ElementRef;\n\n    @ViewChild('codeEditor') codeEditor: ElementRef;\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-container.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(private toolService: ToolService,\n        private courseService: CourseService) { }\n\n    /**\n     * Fired when the component is initialized, this manages the item's display.\n     * It inserts the form for the {@link Issue}'s {@link FixOption}s if available.\n     */\n    ngOnInit() {\n        this.issueDetails.nativeElement.innerHTML = this.issue.display;\n        this.issue.optionModel = new OptionModel(this.toolService.selectedTool.fixOptions);\n        this.issue.formGroup = this.issue.optionModel.toGroup();\n\n        // Update option values if there are values saved for any options\n        if (this.issue.tempValues) {\n            Object.keys(this.issue.tempValues).forEach(optionKey => {\n                const control = this.issue.formGroup.get(optionKey);\n                control.setValue(this.issue.tempValues[optionKey], { onlySelf: true });\n                control.updateValueAndValidity();\n            });\n        }\n    }\n\n    /**\n     * Using the {@link Tab}s provided by the Node Tool, builds\n     * useable tab objects for each issue.\n     * @returns {Object[]} The tabs to use to build the editor instance.\n     */\n    buildEditorTabs() {\n        if (!this.toolService.selectedTool.editorTabs) return;\n        return this.toolService.selectedTool.editorTabs.map(editorTab => {\n            return {\n                title: editorTab.title,\n                htmlString: this.issue.html[editorTab.htmlKey],\n                readOnly: editorTab.readOnly\n            }\n        });\n    }\n\n    /**\n     * Sets the status of the issue.\n     * @param newStatus The new status to set the issue to.\n     */\n    setIssueStatus(newStatus) {\n        if (this.issue.status === 'fixed') {\n            return;\n        } else if (newStatus === this.issue.status) {\n            this.issue.status = 'untouched';\n        } else {\n            this.issue.status = newStatus;\n        }\n    }\n\n    /**\n     * Determines the classes used to style buttons based on the\n     * current status of the issue they belong to.\n     * @param {string} desiredStatus What status the issue current is.\n     * @param {string} elType Either \"button\" or \"icon\".\n     * @returns {string} The classes to apply to the element.\n     */\n    getButtonClasses(desiredStatus: string, elType: string) {\n        let classes = '';\n        if (elType === 'button') {\n            classes += 'waves-effect waves btn white';\n        }\n        if (this.issue.status !== 'untouched' && this.issue.status !== desiredStatus) {\n            classes += ' text-lighten-4';\n        } else if (desiredStatus === 'approved') {\n            classes += ' text-accent-4';\n        } else if (desiredStatus === 'skipped') {\n            classes += ' text-darken-2';\n        }\n        return classes;\n    }\n\n    /**\n     * Manages the validity of the form on each keystroke.\n     * @param optionKey The key of the option this came from.\n     */\n    onChange(optionKey) {\n        if (['untouched', 'fixed', 'failed'].includes(this.issue.status)) {\n            this.issue.status = 'untouched';\n        }\n        if (!this.issue.tempValues) {\n            this.issue.tempValues = {};\n        }\n        this.issue.tempValues[optionKey] = this.issue.formGroup.value[optionKey];\n    }\n\n    /**\n     * Returns whether or not the item's status is fixed or failed.\n     * @returns {boolean} Whether or not this issue's status is fixed or failed.\n     */\n    isFixed() {\n        return this.issue.status === 'fixed' || this.issue.status === 'failed';\n    }\n\n    /**\n     * Since Object.keys does not work in angular templating, this is\n     * a workaround. It checks if the issue has any HTML to display in\n     * the editor. Used by the app-code-editor tag to determine if it\n     * should display.\n     */\n    showEditor() {\n        return Object.keys(this.issue.html).length > 0;\n    }\n\n    handleEditorSessionValues(event) {\n        // attach the value to issues as needed here. Think about attaching it to the html property on the issue object.\n        console.log('eventttt:', event);\n        if (this.issue.status === 'approved') {\n            this.issue.status = 'untouched';\n        }\n        this.courseService.courses.forEach(course => {\n            course.issueItems.forEach(issueItem => {\n                if (this.toolService.selectedTool.editorTabs) {\n                    this.toolService.selectedTool.editorTabs.forEach(editorTab => {\n                        if (editorTab.readOnly === false) {\n                            issueItem.issues[0].html.updatedHtml = event;\n                        }\n                    });\n                }\n            });\n        });\n    }\n}\n\n    \n\n    \n        \n\n    \n        {{issue.title}}\n        \n\n        \n            \n                {{option.title}}\n                {{option.description}}\n                \n\n                    \n                    \n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n\n                    \n                        \n                            {{choice.text}}\n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n    \n\n    \n    \n\n        \n            \n                {{issue.status !== 'approved' ? 'check' : 'check_circle_outline'}}\n            \n            \n                block\n            \n            {{issue.status !== 'approved' ? (issue.status !== 'fixed' ? 'approve' : 'fixed') : 'approved'}}\n        \n\n        \n            \n                {{issue.status !== 'skipped' ? 'remove' : 'call_missed_outgoing'}}\n            \n\n            {{issue.status !== 'skipped' ? 'skip' : 'skipped'}}\n        \n\n        \n            FIXED {{toolService.selectedTool.fixedMessage ? ' - ' + toolService.selectedTool.fixedMessage : ''}}\n        \n        \n            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.\n        \n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{issue.title}}                                            {{option.title}}                {{option.description}}                                                                                                                                                                            {{choice.text}}                                                                                                                    {{choice.text}}                                                                                                                                                    {{issue.status !== \\'approved\\' ? \\'check\\' : \\'check_circle_outline\\'}}                                        block                        {{issue.status !== \\'approved\\' ? (issue.status !== \\'fixed\\' ? \\'approve\\' : \\'fixed\\') : \\'approved\\'}}                                            {{issue.status !== \\'skipped\\' ? \\'remove\\' : \\'call_missed_outgoing\\'}}                        {{issue.status !== \\'skipped\\' ? \\'skip\\' : \\'skipped\\'}}                            FIXED {{toolService.selectedTool.fixedMessage ? \\' - \\' + toolService.selectedTool.fixedMessage : \\'\\'}}                            FAILED - Please contact a Katana developer with the course ID, item name, and issue title.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailsComponent.html":{"url":"components/IssueDetailsComponent.html","title":"component - IssueDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-details/issue-details.component.ts\n\n\n    \n        Description\n    \n    \n        Container for all IssueContainerComponents used to display\nissues within the currently selected IssueItem.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-details\n            \n\n            \n                styleUrls\n                issue-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-details/issue-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-details/issue-details.component.ts:19\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\nBeing used in issue-details.component.html (i.e. DO NOT DELETE)\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service'; // Being used in issue-details.component.html (i.e. DO NOT DELETE)\n\n/**\n * Container for all {@link IssueContainerComponent}s used to display\n * issues within the currently selected {@link IssueItem}.\n */\n@Component({\n    selector: 'app-issue-details',\n    templateUrl: './issue-details.component.html',\n    styleUrls: ['./issue-details.component.css']\n})\nexport class IssueDetailsComponent {\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * Being used in issue-details.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        Issues\n    \n    {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : ''}}\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Issues        {{this.courseService.selectedIssueItem ? this.courseService.selectedIssueItem.title : \\'\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueItem.html":{"url":"interfaces/IssueItem.html","title":"interface - IssueItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IssueItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Represents an item in Canvas, such as a page or quiz. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        course_id\n                                \n                                \n                                        issues\n                                \n                                \n                                        item_id\n                                \n                                \n                                        item_path\n                                \n                                \n                                        link\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category the item belongs to (pages, quizzes, moduleItems, etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The course ID the item belongs to in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                    \n                                \n                                \n                                    \n                                        issues:     Issue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Issue[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Issues discovered by a tool within this item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                    \n                                \n                                \n                                    \n                                        item_id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content ID of the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_path\n                                    \n                                \n                                \n                                    \n                                        item_path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The API path to the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to view the item in Canvas \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the item in Canvas \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-list/issue-list.component.ts\n\n\n    \n        Description\n    \n    \n        Display for the list of IssueItems in the currently selected course.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                issue-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                issueItemCount\n                            \n                            \n                                issueListEl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueItems\n                            \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-list/issue-list.component.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     IssueItem[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \nonScroll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueItemCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueItemCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 15\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueListEl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        issueListEl:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-list/issue-list.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { IssueItem } from '../../interfaces';\n\n/**\n * Display for the list of {@link IssueItem}s in the currently selected course.\n */\n@Component({\n    selector: 'app-issue-list',\n    templateUrl: './issue-list.component.html',\n    styleUrls: ['./issue-list.component.css']\n})\nexport class IssueListComponent {\n\n    @ViewChild('issueList') issueListEl: ElementRef;\n\n    issueItemCount: number = 15;\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     */\n    constructor(public courseService: CourseService) {\n        this.courseService.courseChange.subscribe(() => {\n            this.issueItemCount = 15;\n            this.issueListEl.nativeElement.scrollTop = 0;\n        });\n    }\n\n    onScroll() {\n        let maxScrollTop = this.issueListEl.nativeElement.scrollHeight - this.issueListEl.nativeElement.clientHeight;\n        if (maxScrollTop - this.issueListEl.nativeElement.scrollTop  this.issueItemCount) {\n                this.issueItemCount += 15;\n            }\n        }\n    }\n\n    getIssueItems(): IssueItem[] {\n        if (this.courseService.selectedCourse.issueItems.length \n    \n\n    \n        \n    \n        Items\n        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length\n            : 0}})\n    \n    \n        \n        \n        \n            No issues were discovered in this course.\n            \n                tag_faces\n            \n        \n        \n            This course failed to process.\n            Please contact a Katana developer with the tool name and course ID.\n            \n                sentiment_very_dissatisfied\n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Items        ({{courseService.selectedCourse && courseService.selectedCourse.issueItems ? courseService.selectedCourse.issueItems.length            : 0}})                                            No issues were discovered in this course.                            tag_faces                                        This course failed to process.            Please contact a Katana developer with the tool name and course ID.                            sentiment_very_dissatisfied                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueNavComponent.html":{"url":"components/IssueNavComponent.html","title":"component - IssueNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IssueNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/issue-nav/issue-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Container for managing various actions on the tool view page,\nsuch as the \"Fix All Approved\" button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-nav\n            \n\n            \n                styleUrls\n                issue-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./issue-nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                downloadIssues\n                            \n                            \n                                getIssueItems\n                            \n                            \n                                openModal\n                            \n                            \n                                selectIssueItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService, katanaService: KatanaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Downloads a CSV to the user's computer containing all of the\ncurrently displayed issues.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueItems\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueItems(course: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Returns the user the IssueItems belonging to the provided course.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to retrieve the IssueItems from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The IssueItems belonging to the provided course.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIssueItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIssueItem(course: , issue: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Sets the currently selected course and currently selected IssueItem.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        course\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The course to set as the currently selected course.\n\n                                                        \n                                                \n                                                \n                                                        issue\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The issue to use to set the currently selected IssueItem.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:32\n                            \n                        \n\n                \n                    \n                        Provides information and management for selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:34\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:24\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/issue-nav/issue-nav.component.ts:33\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { EventEmitter } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { csvFormatRows } from 'd3-dsv';\n\n/**\n * Container for managing various actions on the tool view page,\n * such as the \"Fix All Approved\" button.\n */\n@Component({\n    selector: 'app-issue-nav',\n    templateUrl: './issue-nav.component.html',\n    styleUrls: ['./issue-nav.component.css']\n})\nexport class IssueNavComponent {\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for selected courses.\n     * @param toolService Provides information and management for available tools.\n     * @param katanaService Provides functionality to make API calls to the Katana server.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService,\n        public katanaService: KatanaService) { }\n\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal() {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Returns the user the {@link IssueItem}s belonging to the provided course.\n     * @param course The course to retrieve the IssueItems from.\n     * @returns {IssueItem[]} The IssueItems belonging to the provided course.\n     */\n    getIssueItems(course) {\n        if (!course.issueItems) return [];\n        return course.issueItems.reduce((acc, issueItem) => {\n            if (!issueItem.issues) return acc;\n            return [...acc, ...issueItem.issues];\n        }, []);\n    }\n\n    /**\n     * Sets the currently selected course and currently selected {@link IssueItem}.\n     * @param course The course to set as the currently selected course.\n     * @param issue The issue to use to set the currently selected IssueItem.\n     */\n    selectIssueItem(course, issue) {\n        this.courseService.selectedCourse = course;\n        this.courseService.selectedIssueItem = course.issueItems.find(issueItem => issueItem.issues.includes(issue));\n        this.closeModal();\n    }\n\n    /**\n     * Downloads a CSV to the user's computer containing all of the\n     * currently displayed issues.\n     */\n    downloadIssues() {\n        let csvReport = '';\n        this.courseService.courses.forEach((course, i) => {\n            course.issueItems.forEach((issueItem, j) => {\n                if (i  {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    }))) + '\\n';\n                } else {\n                    // Make the log without the header\n                    csvReport += csvFormatRows(issueItem.issues.map(issue => {\n                        var flatIssueDetails = Object.entries(issue.details).reduce((acc, pair) => {\n                            var detail = `${pair[0]}: ${pair[1]}`;\n                            return acc.concat(detail);\n                        }, []);\n                        return [\n                            issue.title,\n                            issue.status,\n                            issue.optionValues ? issue.optionValues : '',\n                            issueItem.title,\n                            issueItem.item_id,\n                            issueItem.course_id,\n                            issueItem.category,\n                            issueItem.link,\n                            ...flatIssueDetails\n                        ];\n                    })) + '\\n';\n                }\n            });\n        });\n\n        // Setup the link to download the csv report\n        let fileName = 'csvReport.csv';\n        let a = document.getElementById(\"download\");\n        var blob = new Blob([csvReport], { type: \"octet/stream\" });\n        var url = window.URL.createObjectURL(blob);\n\n        a.href = url;\n        a.download = fileName;\n    }\n}\n    \n\n    \n        \n\n    \n    \n        \n        \n            \n                build\n                Fix Approved Issues\n            \n        \n    \n\n    \n    \n        \n            \n                cloud_download\n                Download CSV\n            \n        \n    \n\n    \n    \n        \n            more_vert\n        \n    \n\n\n\n\n\n    \n        Issues\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                            {{courseService.getStatusIcon(issue.status)}}\n                        \n                    \n                    \n                        Fix\n                     -->\n                \n            \n        \n\n    \n    \n        Cancel\n        Fix All Approved Issues\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    build                Fix Approved Issues                                                                    cloud_download                Download CSV                                                    more_vert                        Issues                                                                                                                                                                            {{courseService.getStatusIcon(issue.status)}}                                                                                        Fix                     -->                                                    Cancel        Fix All Approved Issues    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KatanaService.html":{"url":"injectables/KatanaService.html","title":"injectable - KatanaService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KatanaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/katana.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides access to make calls to the Katana server.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                serverDomain\n                            \n                            \n                                sockets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                discoverIssues\n                            \n                            \n                                errorHandler\n                            \n                            \n                                fixIssues\n                            \n                            \n                                getCourses\n                            \n                            \n                                getToolList\n                            \n                            \n                                logUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toolService: ToolService, courseService: CourseService, router: Router, authGuardService: AuthGuardService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/katana.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nCurrently used to retrieve basic data from the server.\n\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information about available tools on the server.\n\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides information and management for the currently selected courses.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to navigate the user as needed.\n\n\n                                                        \n                                                \n                                                \n                                                        authGuardService\n                                                  \n                                                        \n                                                                    AuthGuardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                \nProvides toast functionality.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discoverIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \ndiscoverIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:131\n                            \n                        \n\n\n                \n                    \n                            Runs a tool on the server in discovery mode, then returns the issue items discovered.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items discovered by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nerrorHandler(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:308\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nfixIssues(courses: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:215\n                            \n                        \n\n\n                \n                    \n                            Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nArray of issue items fixed by the tool on the server\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCourses(body: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves a list of courses from Canvas.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToolList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToolList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            \nRetrieves the list of tools from the server.\n\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logUserStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogUserStatus(userEmail: string, message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/katana.service.ts:116\n                            \n                        \n\n\n                \n                    \n                            Has the server log when a user's auth status changes (log in, log out, etc.)\nDEPRECATED\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEmail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     Error\n\n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:26\n                            \n                        \n\n                \n                    \n                        If an error is returned by the server, it is stored here for public access.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serverDomain:     \n\n                    \n                \n                    \n                        \n                            Default value : window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:21\n                            \n                        \n\n                \n                    \n                        Handles formatting the correct URL for the web sockets.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sockets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sockets:     WebSocket[]\n\n                    \n                \n                    \n                        \n                            Type :     WebSocket[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/katana.service.ts:59\n                            \n                        \n\n                \n                    \n                        Currently open web sockets.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CourseService } from './course.service';\nimport { ToolService } from './tool.service';\nimport { ToastService } from './toast.service';\nimport { Router } from '@angular/router';\nimport { auth, database } from 'firebase';\nimport { AuthGuardService } from './authguard.service';\n\n/**\n * Provides access to make calls to the Katana server.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class KatanaService {\n\n    /**\n     * Handles formatting the correct URL for the web sockets.\n     */\n    serverDomain = window.location.hostname.replace(/www./, '') + (window.location.port ? ':' + window.location.port : '');\n\n    /**\n     * If an error is returned by the server, it is stored here for public access.\n     */\n    error: Error;\n\n    /**\n     * Constructor\n     * @param http - Currently used to retrieve basic data from the server.\n     * @param toolService - Provides information about available tools on the server.\n     * @param courseService  - Provides information and management for the currently selected courses.\n     * @param router - Used to navigate the user as needed.\n     * @param toastService - Provides toast functionality.\n     */\n    constructor(private http: HttpClient,\n        private toolService: ToolService,\n        private courseService: CourseService,\n        private router: Router,\n        private authGuardService: AuthGuardService,\n        private toastService: ToastService) {\n\n        // Listens to changes in the auth state, and if the user is valid,\n        // it retrieves the list of tools from the server\n        authGuardService.authState.subscribe(state => {\n            if (state) {\n                this.getToolList()\n                    .catch(console.error);\n            } else {\n                toolService.toolList = [];\n            }\n        });\n\n    }\n\n    /**\n     * Currently open web sockets.\n     */\n    sockets: WebSocket[] = [];\n\n    /** ***************************************************************\n     * Retrieves the list of tools from the server.\n     *****************************************************************/\n    getToolList() {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('ToolList: User is not authenticated.'));\n            }\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.get(`/api/tool-list?userIdToken=${userIdToken}`).subscribe(\n                        (toolList: any): any => {\n                            this.toolService.toolList = toolList;\n                            resolve();\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n\n        });\n    }\n\n    /** ***************************************************************\n     * Retrieves a list of courses from Canvas.\n     *****************************************************************/\n    getCourses(body) {\n        return new Promise((resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Course Search: User is not authenticated.'));\n            }\n            const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            headers.append('Content-Type', 'application/json');\n\n            this.authGuardService.retrieveToken()\n                .then(userIdToken => {\n                    this.http.post(`/api/course-retrieval?userIdToken=${userIdToken}`, body, { headers: headers }).subscribe(\n                        (data) => {\n                            resolve(data);\n                        },\n                        (err) => {\n                            this.errorHandler(err);\n                            reject();\n                        });\n                })\n                .catch(this.errorHandler);\n        });\n    }\n\n    /**\n     * Has the server log when a user's auth status changes (log in, log out, etc.)\n     * DEPRECATED\n     */\n    logUserStatus(userEmail: string, message: string) {\n        const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        headers.append('Content-Type', 'application/json');\n\n        this.http.post('/api/user-status', { userEmail, message }, { headers: headers }).subscribe(\n            () => { },\n            this.errorHandler);\n    }\n\n    /**\n     * Runs a tool on the server in discovery mode, then returns the issue items discovered.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items discovered by the tool on the server\n     */\n    discoverIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Discover: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Searching for Issues...';\n            this.toolService.processing = true;\n            let completed = 0;\n\n            let userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/discover?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            /* Normally, you would just listen for the 'open' event and start sending messages\n            to the server. However, the auth middleware on the server causes a delay that\n            prevents the event listeners for each particular web socket from being set up. The\n            messages sent immediately when the web socket are opened are received, but never\n            handled. Instead, it is set up here to wait for the server to tell the client that\n            it is good to go before it starts sending messages. */\n            socket.addEventListener('message', (event) => {\n                const data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    courses.forEach(course => {\n                        // Set the course processing\n                        course.processing = true;\n                        // Remove any pre-existing error\n                        delete course.error;\n\n                        let data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    const course = data;\n\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === courses.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    /**\n     * Fixes the provided issue items in Canvas by sending them to the specified tool on the server.\n     * @param {string} toolId - The ID of the tool to be run\n     * @param {object} options - An object containing the option values specific to the tool\n     * @returns {object[]} - Array of issue items fixed by the tool on the server\n     */\n    fixIssues(courses) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.authGuardService.canActivate()) {\n                return reject(new Error('Fix: User is not authenticated.'));\n            }\n\n            this.toolService.processingMessage = 'Fixing Issues...';\n            this.toolService.processing = true;\n\n            const fixables = courses.filter(course => {\n                return course.issueItems && course.issueItems.some(issueItems => {\n                    if (issueItems.issues.some(issue => issue.status === 'approved')) {\n                        course.processing = true;\n                        return true;\n                    } else {\n                        course.processing = false;\n                        return false;\n                    }\n                });\n            });\n\n            let userIdToken;\n            try {\n                userIdToken = await this.authGuardService.retrieveToken();\n            } catch (err) {\n                this.errorHandler(err);\n            }\n\n            let completed = 0;\n\n            const socket = new WebSocket(`ws://${this.serverDomain}/api/tool/fix?userIdToken=${userIdToken}`);\n            this.sockets.push(socket);\n\n            socket.addEventListener('message', (event) => {\n                const data = JSON.parse(event.data);\n                if (data.state === 'READY') {\n                    fixables.forEach(course => {\n                        course.processing = true;\n                        // Save the option values for each issue, but remove the formGroup and questionModel\n                        course.issueItems.forEach(issueItem => {\n                            issueItem.issues.forEach(issue => {\n                                if (issue.formGroup) {\n                                    issue.optionValues = issue.formGroup.value;\n                                    delete issue.formGroup;\n                                    delete issue.questionModel;\n                                }\n                            });\n                        });\n\n                        let data = JSON.stringify({\n                            tool_id: this.toolService.selectedTool.id,\n                            course: course,\n                            options: this.toolService.selectedDiscoverOptions,\n                            userEmail: auth().currentUser.email\n                        });\n                        socket.send(data);\n                    });\n                } else {\n                    const course = data;\n                    if (course.error) {\n                        console.error(`${course.course_code} (${course.id}): ${course.error}`);\n                    }\n\n                    this.courseService.coursesObj[`c${course.id}`] = course;\n                    course.processing = false;\n                    completed++;\n\n                    // Update the currently selected course, if this is the currently selected course\n                    if (course.id === this.courseService.selectedCourse.id) {\n                        this.courseService.selectedCourse = this.courseService.coursesObj[`c${course.id}`];\n                    }\n\n                    // If this was the last course, then close the socket\n                    if (completed === fixables.length) {\n                        this.toolService.processing = false;\n                        socket.close();\n                    }\n                }\n\n            });\n\n            socket.onerror = (err) => {\n                courses.forEach(course => {\n                    course.processing = false;\n                    course.error = new Error('Socket unexpectedly closed.');\n                });\n                this.toastService.toastError(err);\n                this.toolService.processing = false;\n                this.errorHandler(err);\n            };\n        });\n    }\n\n    errorHandler(e) {\n        console.error(e);\n        this.error = e;\n        this.router.navigate(['home', 'error']);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionModel.html":{"url":"classes/OptionModel.html","title":"class - OptionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes.ts\n        \n\n            \n                Description\n            \n            \n                Helper for building a reactive form. Used to create the\n{@link FormGroup} and {@link FormControl}s needed for\nboth the {@link OptionsViewComponent} and the options on\neach {@link IssueContainerComponent}.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: )\n                    \n                \n                        \n                            \n                                Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Options to build the form from.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes.ts:14\n                            \n                        \n\n                \n                    \n                        Options to build the form from.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/classes.ts:27\n                            \n                        \n\n\n                \n                    \n                            Takes the provided options and puts them into a new {@link FormGroup}.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormControl, Validators, FormGroup } from '@angular/forms';\n\n/**\n * Helper for building a reactive form. Used to create the\n * {@link FormGroup} and {@link FormControl}s needed for\n * both the {@link OptionsViewComponent} and the options on\n * each {@link IssueContainerComponent}.\n */\nexport class OptionModel {\n\n    /**\n     * Options to build the form from.\n     */\n    options = [];\n\n    /**\n     * Constructor\n     * @param options Options to build the form from.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n\n    /**\n     * Takes the provided options and puts them into a new {@link FormGroup}.\n     */\n    toGroup() {\n        const group: any = {};\n        this.options.forEach((option) => {\n            if (option.required) {\n                group[option.key] = new FormControl('', Validators.required);\n            } else {\n                group[option.key] = new FormControl('');\n            }\n        });\n        return new FormGroup(group);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionsViewComponent.html":{"url":"components/OptionsViewComponent.html","title":"component - OptionsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/options-view/options-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the options page. Holds all related\noptions components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-options-view\n            \n\n            \n                styleUrls\n                options-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./options-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                    Public\n                                katanaService\n                            \n                            \n                                modalActions\n                            \n                            \n                                optionModel\n                            \n                            \n                                options\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                modalIsOpen\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, katanaService: KatanaService, courseService: CourseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available courses.\n\n                                                        \n                                                \n                                                \n                                                        katanaService\n                                                  \n                                                        \n                                                                    KatanaService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality to make API calls to the Katana server.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncloseModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Closes the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalIsOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodalIsOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Determines the open/close status of the modal.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether or not the modal is currently open.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Actions taken when the user clicks the \"Run Tool\" button.\nGathers up the answers on the options form, then submits\nthem to the Katana Service to run the tool in discovery mode.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Opens the modal using angular2-materialize.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:33\n                            \n                        \n\n                \n                    \n                        The {@link formGroup} to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            katanaService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        katanaService:     KatanaService\n\n                    \n                \n                    \n                        \n                            Type :     KatanaService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:49\n                            \n                        \n\n                \n                    \n                        Provides functionality to make API calls to the Katana server.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalActions:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:39\n                            \n                        \n\n                \n                    \n                        From angular2-materialize,\nwhich allows the modal to open and close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optionModel:     OptionModel\n\n                    \n                \n                    \n                        \n                            Type :     OptionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:29\n                            \n                        \n\n                \n                    \n                        The OptionModel to use for the form.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     DiscoverOption[]\n\n                    \n                \n                    \n                        \n                            Type :     DiscoverOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        The options to display on the page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/options-view/options-view.component.ts:48\n                            \n                        \n\n                \n                    \n                        Provides information and management for available courses.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service';\nimport { KatanaService } from '../../katana.service';\nimport { MaterializeAction } from 'angular2-materialize';\nimport { FormGroup } from '@angular/forms';\nimport { DiscoverOption } from '../../interfaces';\nimport { OptionModel } from '../../classes';\n\n/**\n * Container for the options page. Holds all related\n * options components.\n */\n@Component({\n    selector: 'app-options-view',\n    templateUrl: './options-view.component.html',\n    styleUrls: ['./options-view.component.css']\n})\nexport class OptionsViewComponent {\n\n    /**\n     * The options to display on the page.\n     */\n    options: DiscoverOption[];\n    /**\n     * The {@link OptionModel} to use for the form.\n     */\n    optionModel: OptionModel;\n    /**\n     * The {@link formGroup} to use for the form.\n     */\n    formGroup: FormGroup;\n\n    /**\n     * From [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize},\n     * which allows the modal to open and close.\n     */\n    modalActions: EventEmitter = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param {ToolService} toolService Provides information and management for available courses.\n     * @param {KatanaService} katanaService Provides functionality to make API calls to the Katana server.\n     * @param {CourseService} courseService Provides information and management for selected courses.\n     * @param {Router} router Used to navigate the user as needed.\n     */\n    constructor(public toolService: ToolService,\n        public katanaService: KatanaService,\n        private courseService: CourseService,\n        private router: Router) {\n\n        this.optionModel = new OptionModel(this.toolService.selectedTool.discoverOptions);\n        this.formGroup = this.optionModel.toGroup();\n    }\n\n    /**\n     * Opens the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    openModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['open'] });\n    }\n\n    /**\n     * Closes the modal using [angular2-materialize]{@link https://www.npmjs.com/package/angular2-materialize}.\n     */\n    closeModal(): void {\n        this.modalActions.emit({ action: \"modal\", params: ['close'] });\n    }\n\n    /**\n     * Determines the open/close status of the modal.\n     * @returns {boolean} Whether or not the modal is currently open.\n     */\n    modalIsOpen(): boolean {\n        return !!document.querySelector('.modal-overlay');\n    }\n\n    /**\n     * Actions taken when the user clicks the \"Run Tool\" button.\n     * Gathers up the answers on the options form, then submits\n     * them to the Katana Service to run the tool in discovery mode.\n     */\n    onSubmit(): void {\n        if (this.courseService.courses.length === 0) {\n            this.openModal();\n            return;\n        }\n\n        var options = { categories: [] };\n        Object.keys(this.formGroup.controls).forEach(key => {\n            options[key] = this.formGroup.controls[key].value;\n        });\n\n        let categoryInputs = Array.from(document.querySelectorAll('.canvas-category')) as HTMLInputElement[];\n        categoryInputs.forEach(category => {\n            if (category.checked) {\n                options.categories.push(category.id);\n            }\n        });\n\n        // Send request\n        this.toolService.selectedDiscoverOptions = options;\n        this.katanaService.discoverIssues(this.courseService.courses)\n            .catch(console.error);\n        this.router.navigate([`home/tools/${this.toolService.selectedTool.id}/issues`]);\n    }\n\n}\n    \n\n    \n        \n    \n\n        \n            \n                Options\n                \n                    {{toolService.selectedTool.title}}\n                \n\n                \n                    Description\n                    {{toolService.selectedTool.description}}\n                \n\n                \n                    Categories\n                    \n                        \n                            \n                            {{category}}\n                        \n                    \n                \n\n                \n                    {{option.title}}\n                    {{option.description}}\n                    \n                        \n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                        \n                            \n                                {{choice}}\n                            \n                        \n                    \n                \n            \n\n            \n                Cancel\n                Run Tool\n            \n        \n    \n\n\n\n\n    \n        No Courses Selected\n        You must select at least one course before continuing.\n    \n    \n        Got it!\n    \n\n\n    arrow_back\n    \n        Click here to Add Courses\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Options                                    {{toolService.selectedTool.title}}                                                    Description                    {{toolService.selectedTool.description}}                                                    Categories                                                                                                    {{category}}                                                                                                {{option.title}}                    {{option.description}}                                                                                                                                                                                    {{choice}}                                                                                                                                        {{choice}}                                                                                                                                Cancel                Run Tool                                    No Courses Selected        You must select at least one course before continuing.                Got it!        arrow_back            Click here to Add Courses    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarModule.html":{"url":"modules/SidebarModule.html","title":"module - SidebarModule","body":"\n                   \n\n\n\n\n  Modules\n  SidebarModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\n\n\nSidebarModule\n\nSidebarModule\n\nSidebarModule -->\n\nCourseChipComponent->SidebarModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nSidebarModule -->\n\nCourseSelectionComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nSidebarModule -->\n\nCourseSidebarComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent \n\nCourseSidebarComponent \n\nCourseSidebarComponent  -->\n\nSidebarModule->CourseSidebarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/sidebar/sidebar.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseChipComponent\n                            \n                            \n                                CourseSelectionComponent\n                            \n                            \n                                CourseSidebarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CourseSidebarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\n\nimport { CourseSidebarComponent } from './course-sidebar/course-sidebar.component';\nimport { CourseSelectionComponent } from './course-selection/course-selection.component';\nimport { CourseChipComponent } from './course-chip/course-chip.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule\n    ],\n    exports: [\n        CourseSidebarComponent\n    ],\n    declarations: [\n        CourseSidebarComponent,\n        CourseSelectionComponent,\n        CourseChipComponent\n    ]\n})\nexport class SidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatBadgeComponent.html":{"url":"components/StatBadgeComponent.html","title":"component - StatBadgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatBadgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/stat-badge/stat-badge.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a single number and title in a pill container.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stat-badge\n            \n\n            \n                styleUrls\n                stat-badge.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stat-badge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                statCount\n                            \n                            \n                                statTitle\n                            \n                            \n                                titleColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                    \n                        The side of the pill the number should be display on.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statCount\n                    \n                    \n                        The number to display.\n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statTitle\n                    \n                    \n                        The title to display on the pill.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleColor\n                    \n                    \n                        The color of the title.\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'white'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tool-page/stat-badge/stat-badge.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * Displays a single number and title in a pill container.\n */\n@Component({\n    selector: 'app-stat-badge',\n    templateUrl: './stat-badge.component.html',\n    styleUrls: ['./stat-badge.component.css']\n})\nexport class StatBadgeComponent {\n    /**\n     * The title to display on the pill.\n     */\n    @Input('statTitle') statTitle: string;\n    /**\n     * The number to display.\n     */\n    @Input('statCount') statCount: number;\n    /**\n     * The color of the title.\n     */\n    @Input('titleColor') titleColor: string = 'white';\n    /**\n     * The side of the pill the number should be display on.\n     */\n    @Input('side') side: string = 'right';\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n}\n\n    \n\n    \n        \n\n    \n        \n            {{statTitle}}\n        \n        \n            {{statCount || '--'}}\n        \n    \n\n    \n        \n            {{statCount || '--'}}\n        \n        \n            {{statTitle}}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{statTitle}}                            {{statCount || \\'--\\'}}                                    {{statCount || \\'--\\'}}                            {{statTitle}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatBadgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides methods to notify the user of errors and various message\nvia toast notification.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toast\n                            \n                            \n                                toastError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toast\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoast(text: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Displays a message to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Message to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastError\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoastError(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/toast.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Displays an error to the user via toast notification.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Error to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { toast } from 'angular2-materialize';\n\n/**\n * Provides methods to notify the user of errors and various message\n * via toast notification.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    /**\n     * Constructor\n     */\n    constructor() { }\n\n    /**\n     * Displays an error to the user via toast notification.\n     * @param {Error} e Error to display\n     */\n    toastError(e) {\n        function buildHTML(message) {\n            console.log(typeof message, message);\n            if (typeof message === 'object') {\n                message = JSON.stringify(message);\n            }\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        // If just text is sent in\n        let text = e;\n\n        // Classic Error\n        if (e instanceof Error) {\n            text = e.message;\n\n            // If a web socket goes down unexpectedly\n        } else if (e instanceof Event && e.target instanceof WebSocket && (e.target.readyState === 3 || e.target.readyState === 2)) {\n            text = 'Websocket unexpectedly closed. Server may be down.';\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 15000);\n    }\n\n    /**\n     * Displays a message to the user via toast notification.\n     * @param {string} text Message to display\n     */\n    toast(text) {\n        function buildHTML(message) {\n            return `\n                ${JSON.stringify(message)}\n                \n                    Dismiss\n                \n            `;\n        }\n        toast(buildHTML(text));\n        setTimeout(() => {\n            document.querySelector('.toast').remove();\n        }, 5000);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tool.html":{"url":"interfaces/Tool.html","title":"interface - Tool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tool\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a tool available from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                                \n                                        description\n                                \n                                \n                                        discoverOptions\n                                \n                                \n                                            Optional\n                                        editorTabs\n                                \n                                \n                                            Optional\n                                        fixMessage\n                                \n                                \n                                            Optional\n                                        fixOptions\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                                \n                                        toolCategory\n                                \n                                \n                                        toolType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the tool's uses \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discoverOptions\n                                    \n                                \n                                \n                                    \n                                        discoverOptions:     DiscoverOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscoverOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DiscoverOptions for this tool, used to generate the options page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editorTabs\n                                    \n                                \n                                \n                                    \n                                        editorTabs:     EditorTab[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorTab[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The tabs to go into the HTML editor on the issue, if needed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixMessage\n                                    \n                                \n                                \n                                    \n                                        fixMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The message to display at the bottom of each IssueContainerComponent when the issue has been fixed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixOptions\n                                    \n                                \n                                \n                                    \n                                        fixOptions:     FixOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FixOption[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FixOptions for this tool, used to generate the options on each IssueContainerComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MCIcon used to represent the tool in the ToolSelectionComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID used to identify the tool \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the tool (displayed to the user) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolCategory\n                                    \n                                \n                                \n                                    \n                                        toolCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The category this tool belongs to and will display in through the CategoriesComponent \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolType\n                                    \n                                \n                                \n                                    \n                                        toolType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tool's type - Determines some of the actions available to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { OptionModel } from './classes';\n\n/**\n * Interface for an option used for a tool's discovery mode.\n * Displayed on the options page for the tool.\n */\nexport interface DiscoverOption {\n    /** The title of the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user for the option */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** The default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not it is a required option on the form */\n    required: boolean;\n}\n\n/**\n * Interface for an option used for a tool's fix mode.\n * Displayed on each issue discovered by the tool.\n */\nexport interface FixOption {\n    /** The title for the option */\n    title: string;\n    /** The key used to identify the option in the form */\n    key: string;\n    /** The description to display to the user */\n    description: string;\n    /** The input type. Available types are \"text\", \"dropdown\", and \"multiselect.\" */\n    type: string;\n    /** The available choices for the option (not applicable to \"text\" type) */\n    choices: object[];\n    /** Default text for \"text\" type options */\n    defaultText?: string;\n    /** Whether or not the option is required in the form */\n    required: boolean;\n}\n\n/**\n * Interface for a tab to be generated on the HTML editor\n */\nexport interface EditorTab {\n    /** The title of the tab */\n    title: string;\n    /** The key to use to grab the html string off the issue */\n    htmlKey: string;\n    /** Determines if the user can edit the code */\n    readOnly: boolean;\n}\n\n/**\n * Interface for a tool available from the server.\n */\nexport interface Tool {\n    /** The ID used to identify the tool */\n    id: string;\n    /** The title of the tool (displayed to the user) */\n    title: string;\n    /** Description of the tool's uses */\n    description: string;\n    /** The tool's type - Determines some of the actions available to the user */\n    toolType: string;\n    /** MCIcon used to represent the tool in the {@link ToolSelectionComponent} */\n    icon: string;\n    /** Categories this tool will affect in Canvas (Pages, Discussions, Quizzes, etc.)*/\n    categories: string[];\n    /** The category this tool belongs to and will display in through the {@link CategoriesComponent} */\n    toolCategory: string;\n    /** {@link DiscoverOption}s for this tool, used to generate the options page */\n    discoverOptions: DiscoverOption[];\n    /** {@link FixOption}s for this tool, used to generate the options on each {@link IssueContainerComponent} */\n    fixOptions?: FixOption[];\n    /** The message to display at the bottom of each {@link IssueContainerComponent} when the issue has been fixed */\n    fixMessage?: string;\n    /** The tabs to go into the HTML editor on the issue, if needed */\n    editorTabs?: EditorTab[];\n}\n\n/**\n * Interface for a category. Tools are categorized based\n * on their purpose. Each category is displayed on the\n * home page.\n */\nexport interface Category {\n    /** The MDIcon used to represent the category in the {@link CategoriesComponent} */\n    icon: string;\n    /** The title of the category */\n    title: string;\n    /** The string used by tools to identify the category they belong to */\n    toolCategory: string;\n}\n\n\n/** Represents a single issue in an {@link IssueItem}. */\nexport interface Issue {\n    /** The title of the issue */\n    title: string;\n    /** The status of the issue (untouched, approved, skipped, fixed, failed) */\n    status: string;\n    /** The HTML string used to display the contents of the issue in its {@link IssueContainerComponent} */\n    display: string;\n    /** An object containing issue-specific details */\n    details: object;\n    /** If included, this is the HTML for the issue */\n    html: object;\n    /** The {@link OptionModel} used to generated any {@link FixOption}s used by the tool */\n    optionModel?: OptionModel;\n    /** The {@link FormGroup} generated for the issue's {@link FixOption}s */\n    formGroup?: FormGroup;\n    /** The results of form generated by the above {@link OptionModel} */\n    optionValues?: any;\n    /** Used to store the current state of the form to restore it on page reload */\n    tempValues?: any;\n}\n\n/** Represents an item in Canvas, such as a page or quiz. */\nexport interface IssueItem {\n    /** The title of the item in Canvas */\n    title: string;\n    /** The course ID the item belongs to in Canvas */\n    course_id: number;\n    /** The content ID of the item in Canvas */\n    item_id: number,\n    /** The API path to the item in Canvas */\n    item_path: string,\n    /** The category the item belongs to (pages, quizzes, moduleItems, etc.) */\n    category: string;\n    /** Link to view the item in Canvas */\n    link: string;\n    /** {@link Issue}s discovered by a tool within this item */\n    issues: Issue[];\n}\n\n/** Represents a single course */\nexport interface Course {\n    /** The course's ID in Canvas */\n    id: number;\n    /** The name of the course in Canvas */\n    course_name: string;\n    /** The code for the course in Canvas */\n    course_code: string;\n    /** The platform it belongs to (online, campus, pathway) */\n    platform: string;\n    /** The current instructor for the course */\n    instructor: string;\n    /** The {@link IssueItem}s for this course */\n    issueItems: IssueItem[];\n    /** URL to the course in Canvas */\n    url: string;\n    /** The sub-account the course is under in Canvas */\n    account?: string;\n    /** The term the course is set to in Canvas */\n    term?: string;\n    /** Whether or not the course is a Blueprint course */\n    blueprint?: boolean;\n    /** Whether the course is currently be processed through a tool */\n    processing?: boolean;\n    /** If an error is returned by a tool, it is attached to the course here */\n    error?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToolPageModule.html":{"url":"modules/ToolPageModule.html","title":"module - ToolPageModule","body":"\n                   \n\n\n\n\n  Modules\n  ToolPageModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\n\n\nToolPageModule\n\nToolPageModule\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tool-page/tool-page.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CodeEditorComponent\n                            \n                            \n                                IssueCardComponent\n                            \n                            \n                                IssueContainerComponent\n                            \n                            \n                                IssueDetailsComponent\n                            \n                            \n                                IssueListComponent\n                            \n                            \n                                IssueNavComponent\n                            \n                            \n                                StatBadgeComponent\n                            \n                            \n                                ToolViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IssueListComponent } from './issue-list/issue-list.component';\nimport { IssueCardComponent } from './issue-card/issue-card.component';\nimport { IssueDetailsComponent } from './issue-details/issue-details.component';\nimport { IssueNavComponent } from './issue-nav/issue-nav.component';\nimport { IssueContainerComponent } from './issue-container/issue-container.component';\nimport { ToolViewComponent } from './tool-view/tool-view.component';\nimport { StatBadgeComponent } from './stat-badge/stat-badge.component';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MaterializeModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        IssueListComponent,\n        IssueCardComponent,\n        IssueDetailsComponent,\n        IssueNavComponent,\n        IssueContainerComponent,\n        ToolViewComponent,\n        StatBadgeComponent,\n        CodeEditorComponent,\n    ]\n})\nexport class ToolPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolSelectionComponent.html":{"url":"components/ToolSelectionComponent.html","title":"component - ToolSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/tool-selection/tool-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Handles the view for selecting tools.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-selection\n            \n\n            \n                styleUrls\n                tool-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-selection.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toolService: ToolService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/tool-selection/tool-selection.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for selected courses.\nBeing used in tool-selection.component.html (i.e. DO NOT DELETE)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/tool-selection/tool-selection.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ToolService } from '../../tool.service';\nimport { CourseService } from '../../course.service'; // Being used in tool-selection.component.html (i.e. DO NOT DELETE)\n\n/**\n * Handles the view for selecting tools.\n */\n@Component({\n    selector: 'app-tool-selection',\n    templateUrl: './tool-selection.component.html',\n    styleUrls: ['./tool-selection.component.css']\n})\nexport class ToolSelectionComponent {\n\n    /**\n     * Constructor\n     * @param toolService Provides information and management for available tools.\n     * @param courseService Provides information and management for selected courses.\n     * Being used in tool-selection.component.html (i.e. DO NOT DELETE)\n     */\n    constructor(public toolService: ToolService, private courseService: CourseService) { }\n}\n\n    \n\n    \n        \n    \n        {{tool.icon}}\n        {{tool.title}}\n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tool.icon}}        {{tool.title}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolService.html":{"url":"injectables/ToolService.html","title":"injectable - ToolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ToolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tool.service.ts\n        \n\n            \n                Description\n            \n            \n                The Tool Service contains information and management for\nall tools available from the service. It handles information\nlike which tool is currently selected, whether or not the user\nis currently using a tool, and what categories are available to\nthe user.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _selectedCategory\n                            \n                            \n                                _selectedTool\n                            \n                            \n                                categories\n                            \n                            \n                                processing\n                            \n                            \n                                processingMessage\n                            \n                            \n                                selectedDiscoverOptions\n                            \n                            \n                                toolList\n                            \n                            \n                                toolViewOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool.service.ts:76\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Used to navigate the user as needed.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedCategory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedCategory:     Category\n\n                    \n                \n                    \n                        \n                            Type :     Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:52\n                            \n                        \n\n                \n                    \n                        The category selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _selectedTool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _selectedTool:     Tool\n\n                    \n                \n                    \n                        \n                            Type :     Tool\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:56\n                            \n                        \n\n                \n                    \n                        The tool selected by the user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        categories:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:21\n                            \n                        \n\n                \n                    \n                        The categories available to the user. This will be replaced with\ndynamic generation at a later point.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:34\n                            \n                        \n\n                \n                    \n                        Whether or not a tool is currently doing it's magic.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processingMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        processingMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:38\n                            \n                        \n\n                \n                    \n                        The message to display on the screen while a tool is processing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDiscoverOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDiscoverOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tool.service.ts:60\n                            \n                        \n\n                \n                    \n                        The discovery options chosen by the user on the options page for the selected tool.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolList:     Tool[]\n\n                    \n                \n                    \n                        \n                            Type :     Tool[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:47\n                            \n                        \n\n                \n                    \n                        The list of available tools, as retrieved from the server.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolViewOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolViewOpen:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool.service.ts:42\n                            \n                        \n\n                \n                    \n                        Whether or not the user is currently looking at the tool view.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedCategory\n                    \n                \n\n                \n                    \n                        getselectedCategory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:62\n                                \n                            \n\n                \n                    \n                        setselectedCategory(category: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTool\n                    \n                \n\n                \n                    \n                        getselectedTool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:70\n                                \n                            \n\n                \n                    \n                        setselectedTool(tool: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/tool.service.ts:73\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            tool\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Tool, Category } from './interfaces';\n\n/**\n * The Tool Service contains information and management for\n * all tools available from the service. It handles information\n * like which tool is currently selected, whether or not the user\n * is currently using a tool, and what categories are available to\n * the user.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolService {\n\n    /**\n     * The categories available to the user. This will be replaced with\n     * dynamic generation at a later point.\n     */\n    categories = [{\n        icon: 'code',\n        title: 'HTML',\n        toolCategory: 'html'\n    }, {\n        icon: 'settings',\n        title: 'Item Settings',\n        toolCategory: 'itemSettings'\n    }];\n\n    /**\n     * Whether or not a tool is currently doing it's magic.\n     */\n    processing: boolean = false;\n    /**\n     * The message to display on the screen while a tool is processing.\n     */\n    processingMessage: string = '';\n    /**\n     * Whether or not the user is currently looking at the tool view.\n     */\n    toolViewOpen: boolean = false;\n\n    /**\n     * The list of available tools, as retrieved from the server.\n     */\n    toolList: Tool[] = [];\n\n    /**\n     * The category selected by the user.\n     */\n    _selectedCategory: Category;\n    /**\n     * The tool selected by the user.\n     */\n    _selectedTool: Tool;\n    /**\n     * The discovery options chosen by the user on the options page for the selected tool.\n     */\n    selectedDiscoverOptions;\n\n    get selectedCategory() {\n        return this._selectedCategory;\n    }\n    set selectedCategory(category) {\n        sessionStorage.selectedCategory = category.title;\n        this._selectedCategory = category;\n    }\n\n    get selectedTool() {\n        return this._selectedTool;\n    }\n    set selectedTool(tool) {\n        sessionStorage.selectedTool = tool.id;\n        this._selectedTool = tool;\n    }\n\n    /**\n     * Constructor\n     * @param router Used to navigate the user as needed.\n     */\n    constructor(private router: Router) {\n\n        const loc = window.location.href;\n\n        if (loc.includes('options') && !this._selectedTool && sessionStorage.selectedTool) {\n            this._selectedTool = this.toolList.find(tool => tool.id === sessionStorage.selectedTool);\n        }\n\n        if (loc.includes('tools') && !this._selectedCategory && sessionStorage.selectedCategory) {\n            this._selectedCategory = this.categories.find(category => category.title === sessionStorage.selectedCategory);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('options') && !this._selectedTool) {\n            router.navigate(['/']);\n        }\n\n        // I don't feel like this is the right place for this...\n        if (loc.includes('tools') && !this._selectedCategory) {\n            router.navigate(['/']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolViewComponent.html":{"url":"components/ToolViewComponent.html","title":"component - ToolViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tool-page/tool-view/tool-view.component.ts\n\n\n    \n        Description\n    \n    \n        Container for the tool view.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tool-view\n            \n\n            \n                styleUrls\n                tool-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tool-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                courseService\n                            \n                            \n                                    Public\n                                toolService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService, toolService: ToolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tool-page/tool-view/tool-view.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for the currently selected courses.\n\n                                                        \n                                                \n                                                \n                                                        toolService\n                                                  \n                                                        \n                                                                    ToolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Provides information and management for available tools.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIssueCount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIssueCount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Determines the current total count of issues from all selected courses\ndiscovered by the currently selected tool.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            courseService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseService:     CourseService\n\n                    \n                \n                    \n                        \n                            Type :     CourseService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:20\n                            \n                        \n\n                \n                    \n                        Provides information and management for the currently selected courses.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toolService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toolService:     ToolService\n\n                    \n                \n                    \n                        \n                            Type :     ToolService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tool-page/tool-view/tool-view.component.ts:21\n                            \n                        \n\n                \n                    \n                        Provides information and management for available tools.\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CourseService } from '../../course.service';\nimport { ToolService } from '../../tool.service';\n\n/**\n * Container for the tool view.\n */\n@Component({\n    selector: 'app-tool-view',\n    templateUrl: './tool-view.component.html',\n    styleUrls: ['./tool-view.component.css']\n})\nexport class ToolViewComponent {\n\n    /**\n     * Constructor\n     * @param courseService Provides information and management for the currently selected courses.\n     * @param toolService Provides information and management for available tools.\n     */\n    constructor(public courseService: CourseService,\n        public toolService: ToolService) { }\n\n    /**\n     * Determines the current total count of issues from all selected courses\n     * discovered by the currently selected tool.\n     */\n    getIssueCount() {\n        return this.courseService.courses.reduce((acc, course) => {\n            if (!course.issueItems) return acc;\n            return acc += course.issueItems.reduce((acc2, issueItem) => {\n                if (!issueItem.issues) return acc2;\n                return acc2 += issueItem.issues.length;\n            }, 0)\n        }, 0);\n    }\n\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n\n    \n        \n    \n    \n        {{toolService.processingMessage}}\n    \n\n\n\n    \n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            {{toolService.processingMessage}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbsComponent', 'selector': 'app-breadcrumbs'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CodeEditorComponent', 'selector': 'app-code-editor'},{'name': 'CourseChipComponent', 'selector': 'app-course-chip'},{'name': 'CourseSelectionComponent', 'selector': 'app-course-selection'},{'name': 'CourseSidebarComponent', 'selector': 'app-course-sidebar'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'IssueCardComponent', 'selector': 'app-issue-card'},{'name': 'IssueContainerComponent', 'selector': 'app-issue-container'},{'name': 'IssueDetailsComponent', 'selector': 'app-issue-details'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueNavComponent', 'selector': 'app-issue-nav'},{'name': 'OptionsViewComponent', 'selector': 'app-options-view'},{'name': 'StatBadgeComponent', 'selector': 'app-stat-badge'},{'name': 'ToolSelectionComponent', 'selector': 'app-tool-selection'},{'name': 'ToolViewComponent', 'selector': 'app-tool-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/authguard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuardService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/classes.ts\n            \n            \n                class\n            \n            \n                OptionModel\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                    src/app/firebase.auth.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/home-page/breadcrumbs/breadcrumbs.component.ts\n            \n            \n                component\n            \n            \n                BreadcrumbsComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/home-page/categories/categories.component.ts\n            \n            \n                component\n            \n            \n                CategoriesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/home-page/error-page/error-page.component.ts\n            \n            \n                component\n            \n            \n                ErrorPageComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/home-page/options-view/options-view.component.ts\n            \n            \n                component\n            \n            \n                OptionsViewComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/home-page/tool-selection/tool-selection.component.ts\n            \n            \n                component\n            \n            \n                ToolSelectionComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Category\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                DiscoverOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                EditorTab\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                FixOption\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Issue\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                IssueItem\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/interfaces.ts\n            \n            \n                interface\n            \n            \n                Tool\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/katana.service.ts\n            \n            \n                injectable\n            \n            \n                KatanaService\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-chip/course-chip.component.ts\n            \n            \n                component\n            \n            \n                CourseChipComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-selection/course-selection.component.ts\n            \n            \n                component\n            \n            \n                CourseSelectionComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/sidebar/course-sidebar/course-sidebar.component.ts\n            \n            \n                component\n            \n            \n                CourseSidebarComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/toast.service.ts\n            \n            \n                injectable\n            \n            \n                ToastService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/tool-page/code-editor/code-editor.component.ts\n            \n            \n                component\n            \n            \n                CodeEditorComponent\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-card/issue-card.component.ts\n            \n            \n                component\n            \n            \n                IssueCardComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-container/issue-container.component.ts\n            \n            \n                component\n            \n            \n                IssueContainerComponent\n            \n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-details/issue-details.component.ts\n            \n            \n                component\n            \n            \n                IssueDetailsComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-list/issue-list.component.ts\n            \n            \n                component\n            \n            \n                IssueListComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                    src/app/tool-page/issue-nav/issue-nav.component.ts\n            \n            \n                component\n            \n            \n                IssueNavComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/tool-page/stat-badge/stat-badge.component.ts\n            \n            \n                component\n            \n            \n                StatBadgeComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/app/tool-page/tool-view/tool-view.component.ts\n            \n            \n                component\n            \n            \n                ToolViewComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/app/tool.service.ts\n            \n            \n                injectable\n            \n            \n                ToolService\n            \n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/compiler : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @types/d3-dsv : ^1.0.33\n        \n            angular-lazy-for : ^1.1.5\n        \n            angular2-crumbs : ^1.2.1\n        \n            angular2-infinite-scroll : ^0.3.5\n        \n            angular2-materialize : ^15.1.10\n        \n            angular2-virtual-scroll : ^0.3.4\n        \n            angularfire2 : ^5.0.0-rc.11\n        \n            body-parser : ^1.18.3\n        \n            canvas-api-wrapper : github:byuitechops/canvas-api-wrapper\n        \n            chalk : ^2.4.1\n        \n            cheerio : ^1.0.0-rc.2\n        \n            core-js : ^2.5.4\n        \n            d3-dsv : ^1.0.8\n        \n            express : ^4.16.3\n        \n            express-ws : ^4.0.0\n        \n            firebase : ^5.2.0\n        \n            firebase-admin : ^5.12.1\n        \n            logger : github:byuitechops/logger\n        \n            materialize-css : ^0.100.2\n        \n            morgan : ^1.9.0\n        \n            object-sizeof : ^1.2.0\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.1\n        \n            socket.io : ^2.1.1\n        \n            ws : ^5.2.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKatana\nThis tool is built to interface with Canvas, a Learning Management System built by Instructure. It provides the framework for a development team to build and deploy mass-maintenance tools. It is not build by Instructure. It was built by Brigham Young University - Idaho, and is maintained by them.\nSetup\nTo set up your own instance of Katana, follow these steps:\n\nInstall Git and use it to clone the repository\n\nInstall NodeJS if is not installed\n\nIn the terminal, run: npm install\n\n(TEMP: Set up CANVAS_API_TOKEN environment variable | Will become canvas developer key)\n\nDeploy Firebase using the steps described in this document\n\nBuild production files with ng build --prod\n\nCopy the server directory and the contents of the /dist folder into the directory you will be deploying from\n\nUse npm start to spin up Katana\n\nFollow any additional setup processes you need\n\n\nDevelopment\nFor development, use this command to build the angular front-end and launch the server immediately after:\nnpm run fullbuild\nIt can then be accessed via localhost:8000 (or whichever port you specify in server/settings.json).\nFlags\n\n\n\nFlag\nPurpose\n\n\n\n\n--mute\nPrevents database logging from appearing in the console\n\n\n\nDocumentation\nClient (Angular)\n\nLinkName \nArchitecture\nLinkName\nHow To...\nLinkName\nFirebase Integration\nLinkName\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToolPageModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_exports\n\n\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_ToolPageModule\n\n\n\ncluster_ToolPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nAppModule -->\n\nHomePageModule->AppModule\n\n\n\n\n\nBreadcrumbsComponent \n\nBreadcrumbsComponent \n\nBreadcrumbsComponent  -->\n\nHomePageModule->BreadcrumbsComponent \n\n\n\n\n\nErrorPageComponent \n\nErrorPageComponent \n\nErrorPageComponent  -->\n\nHomePageModule->ErrorPageComponent \n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nCourseSidebarComponent \n\nCourseSidebarComponent \n\nCourseSidebarComponent  -->\n\nSidebarModule->CourseSidebarComponent \n\n\n\n\n\nToolPageModule\n\nToolPageModule\n\nAppModule -->\n\nToolPageModule->AppModule\n\n\n\n\n\nAuthGuardService\n\nAuthGuardService\n\nAppModule -->\n\nAuthGuardService->AppModule\n\n\n\n\n\nBreadcrumbsComponent\n\nBreadcrumbsComponent\n\nHomePageModule -->\n\nBreadcrumbsComponent->HomePageModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nHomePageModule -->\n\nCategoriesComponent->HomePageModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nHomePageModule -->\n\nErrorPageComponent->HomePageModule\n\n\n\n\n\nOptionsViewComponent\n\nOptionsViewComponent\n\nHomePageModule -->\n\nOptionsViewComponent->HomePageModule\n\n\n\n\n\nToolSelectionComponent\n\nToolSelectionComponent\n\nHomePageModule -->\n\nToolSelectionComponent->HomePageModule\n\n\n\n\n\nCourseChipComponent\n\nCourseChipComponent\n\nSidebarModule -->\n\nCourseChipComponent->SidebarModule\n\n\n\n\n\nCourseSelectionComponent\n\nCourseSelectionComponent\n\nSidebarModule -->\n\nCourseSelectionComponent->SidebarModule\n\n\n\n\n\nCourseSidebarComponent\n\nCourseSidebarComponent\n\nSidebarModule -->\n\nCourseSidebarComponent->SidebarModule\n\n\n\n\n\nCodeEditorComponent\n\nCodeEditorComponent\n\nToolPageModule -->\n\nCodeEditorComponent->ToolPageModule\n\n\n\n\n\nIssueCardComponent\n\nIssueCardComponent\n\nToolPageModule -->\n\nIssueCardComponent->ToolPageModule\n\n\n\n\n\nIssueContainerComponent\n\nIssueContainerComponent\n\nToolPageModule -->\n\nIssueContainerComponent->ToolPageModule\n\n\n\n\n\nIssueDetailsComponent\n\nIssueDetailsComponent\n\nToolPageModule -->\n\nIssueDetailsComponent->ToolPageModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nToolPageModule -->\n\nIssueListComponent->ToolPageModule\n\n\n\n\n\nIssueNavComponent\n\nIssueNavComponent\n\nToolPageModule -->\n\nIssueNavComponent->ToolPageModule\n\n\n\n\n\nStatBadgeComponent\n\nStatBadgeComponent\n\nToolPageModule -->\n\nStatBadgeComponent->ToolPageModule\n\n\n\n\n\nToolViewComponent\n\nToolViewComponent\n\nToolPageModule -->\n\nToolViewComponent->ToolPageModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        17 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../firebase.auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/firebase.auth.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    firebase: {\n        apiKey: 'AIzaSyBN6dkjkGHs5W2YXTkLUu8mCurFXkip3Dc',\n        authDomain: 'katana-24a36.firebaseapp.com',\n        databaseURL: 'https://katana-24a36.firebaseio.com',\n        projectId: 'katana-24a36',\n        storageBucket: 'katana-24a36.appspot.com'\n    }\n}\n                        \n                    \n\n                \n                    \n                        Used to connect the client to firebase for authentication.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture.html":{"url":"additional-documentation/architecture.html","title":"additional-page - Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture\nThese documents will cover points of Katana's architecture not covered by Compodoc.\nDocumentation\n Dataflow Diagram\n High Level Overview\n Server Endpoints\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/server-endpoints.html":{"url":"additional-documentation/architecture/server-endpoints.html","title":"additional-page - Server Endpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Endpoints\n(This will cover each server endpoint and its purpose)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/discover-&-fix-workflow.html":{"url":"additional-documentation/architecture/discover-&-fix-workflow.html","title":"additional-page - Discover & Fix Workflow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tool Discover & Fix Workflow\n(This will describe the fix/discover workflow used by the node tools)\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/data-flow-diagram.html":{"url":"additional-documentation/architecture/data-flow-diagram.html","title":"additional-page - Data Flow Diagram","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture/high-level-overview.html":{"url":"additional-documentation/architecture/high-level-overview.html","title":"additional-page - High Level Overview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup.html":{"url":"additional-documentation/setup.html","title":"additional-page - Setup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProcesses\nWith Katana setup, various processes have to occur, such as integrating a newly created Node Tool, activating a new user in Firebase, or similar. This documentation will cover each process and its best practices.\nDocumentation\n Setting Up Firebase\n Enabling Accounts on Firebase\n Node Tools\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/setting-up-firebase.html":{"url":"additional-documentation/setup/setting-up-firebase.html","title":"additional-page - Setting Up Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nA Node Tool contains a single fix for a Canvas Course (ex: Alt-Attributes). \nNode Tools are divided up into categories (HTML, item settings, etc.).\nEach Node Tool resides within it's own file, located in the /server/node_tools directory.\nEach node tool will follow the same process and have the same settings/options available. \nThese processes, settings, and options are explained below.\nSettings Object\nThe settings object determines the tool's basic information such as name, description, icon, tool type, and more. \nIt also determines the tool's behavior such as which items in Canvas should be pulled and altered.\nThe settings object should be located at the bottom of each individual tool.\nThe following table describes the settings object in detail.\nProperties that are object arrays (an array of objects) are explained in detail below the table.\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndescription\nstring\n\nThe description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\ndiscover\nfunction\n\nThe function that will tell the tool what items to get from Canvas and decide how to display them\nSee below for details\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\nfix\nfunction\n\nThe function that will tell the tool what items to fix and how to do it\nSee below for details\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should be the same text with different formats\n'the_tool_name'\ntrue\n\n\nfixMessage\nstring\n\nThe message that appears on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool has run\nSee below for details\nfalse\n\n\ntitle\nstring\n\nThe tool name formatted by capitalizing each word and using spaces. The tool filename, id, and title should be the same text with different formats\n'The Tool Name'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis determines which category the tool will show up under on the home page\n'html'\ntrue\n\n\ntoolType\nstring\nfix/search\nFix enables both the discover and fix functions. Search only enables the discover function. Users cannot approve fixes or change content when this value is set to search\n'fix'\ntrue\n\n\n\ndiscoverOptions  \nThis section details the properties found on a single object within the discoverOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'Red'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'currentColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\n\nfixOptions  \nThis section details the properties found on a single object within the fixOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'#ff0000'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'newColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\n\neditorTabs   \nThis section details the properties found on a single object within the editorTabs array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\n\nAn option to make the editor read-only\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover  \nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function. The fix function should simply make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix  \nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the status of the issue (issue.status)\nUpdate the issue status as appropriate\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible - ideally containing only the logic required to update the item in Canvas. The majority of the tool's logic should reside in the discover function, not the fix function.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything, run Katana, and your tool should appear!\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/development-environment.html":{"url":"additional-documentation/setup/development-environment.html","title":"additional-page - Development Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDevelopment Environment\nOverview\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/node-tools.html":{"url":"additional-documentation/setup/node-tools.html","title":"additional-page - Node Tools","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Tools\nOverview\nA Node Tool contains a single fix for a Canvas Course (ex: Alt-Attributes). \nNode Tools are divided up into categories (HTML, item settings, etc.).\nEach Node Tool resides within it's own file, located in the /server/node_tools directory.\nEach node tool will follow the same process and have the same settings/options available. \nThese processes, settings, and options are explained below.\nSettings Object\nThe settings object determines the tool's basic information such as name, description, icon, tool type, and more. \nIt also determines the tool's behavior such as which items in Canvas should be pulled and altered.\nThe settings object should be located at the bottom of each individual tool.\nThe following table describes the settings object in detail.\nProperties that are object arrays (an array of objects) are explained in detail below the table.\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\ncategories\nstring array\nassignments, discussions, files, moduleItems, modules, pages, quizzes, quizQuestions\nAn array of the Canvas item types to be searched for/fixed in the tool\n['assignments', 'discussions', 'pages']\ntrue\n\n\ndescription\nstring\n\nThe description of the tool that will be displayed on the options page\n'This tool allows you to...'\ntrue\n\n\ndiscover\nfunction\n\nThe function that will tell the tool what items to get from Canvas and decide how to display them\nSee below for details\ntrue\n\n\ndiscoverOptions\nobject array\n\nAn object array that describes the available discover/search options that will appear on the options page before the tool is run\nSee below for details\ntrue\n\n\neditorTabs\nobject array\n\nAn object array that determines the setup of the code editors to be seen on each issue card\nSee below for details\nfalse\n\n\nfix\nfunction\n\nThe function that will tell the tool what items to fix and how to do it\nSee below for details\ntrue\n\n\nicon\nstring\n\nAny icon name found on Material Design Icons\n'text_rotation_none'\ntrue\n\n\nid\nstring\n\nThe tool name in all lowercase letters and using underscores for spaces. The tool filename, id, and title should be the same text with different formats\n'the_tool_name'\ntrue\n\n\nfixMessage\nstring\n\nThe message that appears on each issue after the issue status has changed to 'fixed'\n'The alt attribute for this item has been updated'\nfalse\n\n\nfixOptions\nobject array\n\nAn object array that describes the available fix options that will appear on each issue card after the tool has run\nSee below for details\nfalse\n\n\ntitle\nstring\n\nThe tool name formatted by capitalizing each word and using spaces. The tool filename, id, and title should be the same text with different formats\n'The Tool Name'\ntrue\n\n\ntoolCategory\nstring\nhtml , itemSettings\nThis determines which category the tool will show up under on the home page\n'html'\ntrue\n\n\ntoolType\nstring\nfix/search\nFix enables both the discover and fix functions. Search only enables the discover function. Users cannot approve fixes or change content when this value is set to search\n'fix'\ntrue\n\n\n\ndiscoverOptions  \nThis section details the properties found on a single object within the discoverOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n['Blue', 'Red', 'Yellow']\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'Red'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'Select which color you would like to search for throughout the course's html'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'currentColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on the options page\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'multiselect'\ntrue\n\n\n\nfixOptions  \nThis section details the properties found on a single object within the fixOptions array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nchoices\nstring array\n\nAn array of options that the user may choose from if the type is multiselect or dropdown. Otherwise an empty array\n[ ]\ntrue\n\n\ndefaultText\nstring\n\nThe default text for \"text\" input options\n'#ff0000'\nfalse\n\n\ndescription\nstring\n\nA description of the option that will be displayed on the options page\n'What is the hex code of the new color you'd like to replace the current color with?'\ntrue\n\n\nkey\nstring\n\nThe unique identifier for this fixOptions object. Used within the node tool to access user input for that option\n'newColor'\ntrue\n\n\nrequired\nboolean\n\nAn option to make the input type required or not\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title of the option that will be displayed on each issue card\n'Color'\ntrue\n\n\ntype\nstring\ntext, multiselect, dropdown\nThis option will determine the input type you would like to use for the option\n'text'\ntrue\n\n\n\neditorTabs   \nThis section details the properties found on a single object within the editorTabs array.\n\n\n\n\nObject Key\nType\nOptions\nDescription\nExample\nRequired\n\n\n\n\nhtmlKey\nstring\n\nThe object key where the html for the tab must be assigned to within the tool\n'currentHtml'\ntrue\n\n\nreadOnly\nboolean\n\nAn option to make the editor read-only\ntrue\ntrue\n\n\ntitle\nstring\n\nThe title that will appear on the clickable tab of the editor. It is best to keep this title short an no more than a few  words\n'Current HTML'\ntrue\n\n\n\nNote: It is good practice to have two tabs, one that is read-only for the current html and one that is not read-only but editable for the updated html, if applicable.\nDiscover  \nThe purpose of the discover function is to:\n\nDetermine which items are to be retrieved from Canvas\nDecide how those items are to be displayed on each issue card in the 'Tool View' on the client side\nGather any details that need to be passed to the fix function\n\nThe majority of the logic behind the tool should be in this function. The fix function should simply make the change in Canvas.\nThe discover function in each node tool has a template layout as follows:\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    let title = ``;         // the title of the card on the discovered issue\n    let description = '';   // a description of the discover type that will be displayed on the issue card\n    let display = ``;       // the html that will be displayed on the issue card\n    let details = {};       // an object containing anything needing to be referenced in the fix function \n    let html = {\n        currentHtml: canvasItem.getHtml()   // set the html for the editorTab\n    };\n\n    if (/*meets condition */true) {\n\n        // Add new issues as needed\n        issueItem.newIssue(title, display, details, html);\n    }\n}Fix  \nThe purpose of the fix function is to:\n\nCheck if the canvasItem should be changed based on the status of the issue (issue.status)\nUpdate the issue status as appropriate\nUpdate the item in Canvas\n\nThe logic in the fix function should be as minimal as possible - ideally containing only the logic required to update the item in Canvas. The majority of the tool's logic should reside in the discover function, not the fix function.\nThe fix function in each node tool has a template layout as follows:\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (/*meets condition */true) {\n                issueItem.issues.forEach(issue => {\n                    if(issue.status === 'approved') {\n                        // make the changes here\n\n                        // set the issue status to 'fixed'\n                        issue.status = 'fixed';\n                    }\n                });\n                // after making the change, update the item in Canvas\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}Example (Alt Attributes Tool)\nHere is an example of a node tool that replaces Alt attributes on image html tags:\nconst cheerio = require('cheerio');\n\n/*****************************************************************\n * Discovers issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, without any issues\n * @param {object} options - Options specific to the tool selected by the user\n *****************************************************************/\nfunction discover(canvasItem, issueItem, options) {\n    if (canvasItem.getHtml() === null) return;\n    var $ = cheerio.load(canvasItem.getHtml());\n    var images = $('img');\n\n    images.each((i, image) => {\n        image = $(image);\n        var alt = image.attr('alt');\n\n        // If the option to get ALL alt attributes is selected, move forward, else check alt it is empty/missing\n        if (options.altCondition.includes('All image alt') || !alt || alt === '') {\n\n            let title = 'Existing Alt Attribute';\n            let description = 'The alt text on this image should be a good description of the image.';\n\n            if (alt === '') {\n                title = 'Empty Alt Attribute';\n                description = 'The alt text on this image is empty.';\n            } else if (!alt) {\n                title = 'Missing Alt Attribute';\n                description = 'The alt text on this image is missing.';\n            }\n\n            let display = `\n                ${description}\n                Image\n                \n                    \n                \n            `;\n\n            if (alt) {\n                display += `\n                    Current Alt Text\n                    ${alt}\n                `;\n            }\n\n            let details = {\n                image: image.attr('src'),\n                title,\n                description\n            };\n\n            issueItem.newIssue(title, display, details);\n        }\n    });\n}\n\n/*****************************************************************\n * Fixes issues in the item provided.\n * @param {object} canvasItem - Canvas item produced by the Canvas API Wrapper\n * @param {IssueItem} issueItem - The IssueItem for the item, including its issues\n * @param {object} options - Options specific to the tool selected by the user\n * @returns {array} fixedIssues - All issues discovered.\n *****************************************************************/\nfunction fix(canvasItem, issueItem, options) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            if (canvasItem.getHtml()) {\n                var $ = cheerio.load(canvasItem.getHtml());\n\n                issueItem.issues.forEach(issue => {\n                    if (issue.status === 'approved') {\n\n                        let image = $(`img[src=\"${issue.details.image}\"]`).first();\n                        if (image && issue.optionValues.newAltText) {\n                            $(image).attr('alt', issue.optionValues.newAltText);\n                            issue.status = 'fixed';\n                        }\n                    }\n                });\n\n                canvasItem.setHtml($.html());\n                await canvasItem.update();\n                resolve();\n            }\n        } catch (e) {\n            issueItem.issues.forEach(issue => {\n                if (issue.status === 'approved') {\n                    issue.status = 'failed';\n                }\n            });\n            reject(e);\n        }\n    });\n}\n\nmodule.exports = {\n    discover,\n    fix,\n    id: 'alt_attributes',\n    title: 'Alt Attributes',\n    description: 'This tool allows you to edit image alt attributes. It can provide all images in the course, or just images that have empty or missing alt attributes. Courses with a high number of images may cause delays when navigating through issues. You will NOT be able to see any of the images if you are not signed into Canvas.',\n    icon: 'text_rotation_none',\n    toolType: 'fix',\n    toolCategory: 'html',\n    fixedMessage: 'The new alt attribute has been inserted',\n    categories: [\n        'pages',\n        'assignments',\n        'discussions',\n        'quizzes',\n        'quizQuestions'\n    ],\n    discoverOptions: [{\n        title: 'Conditions',\n        key: 'altCondition',\n        description: 'Do you want to include all image alt attributes or just empty and missing alt attributes?',\n        type: 'dropdown',\n        choices: ['', 'All image alt attributes', 'Only empty and missing'],\n        required: true\n    }],\n    fixOptions: [{\n        title: 'New Alt Text',\n        key: 'newAltText',\n        description: 'Please enter the new alt text for this image.',\n        type: 'text',\n        choices: [],\n        required: true\n    }],\n};Creating a Tool\nThe process to make a new tool is fairly simple and straightforward:\n\nUnder katana/server/node_tools/ copy the contents of node_tool_template.js into a new file under the same directory\nAfter you have created your new tool file with the template, get started on the logic of the tool by filling out the settings object at the bottom of the file, as discussed earlier in this document\nOpen katana/server/node_tools.js where you will see a list of all the currently available tools in the toolList object:const toolList = {\n 'course_search': new NodeTool(require('./node_tools/course_search.js')),\n 'alt_attributes': new NodeTool(require('./node_tools/alt_attributes.js')),\n}\nAdd your tool to the list in the format 'tool_id': new NodeTool(require(./node_tools/tool_file.js))\nSave everything, run Katana, and your tool should appear!\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/setup/enabling-accounts-on-firebase.html":{"url":"additional-documentation/setup/enabling-accounts-on-firebase.html","title":"additional-page - Enabling Accounts on Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnabling an account (Firebase Admins Only)\nNew, valid accounts added to Firebase are disabled automatically by the Firebase Functions (if set up on your firebase instance).\nTo enable an account:\n\nNavigate to the Firebase Console\nLog in with a valid account that has admin access to your Katana firebase project\nSelect the Katana firebase project from the available projects\nSelect the \"Authentication\" tab under the Develop menu on the left\nSelect the \"Users\" tab on the Authentication page\nFind the user you want to enable and select the Kebob menu on the right side of their row\nSelect \"Enable Account\"\n\n\n(Selecting the Authentication Tab)\n\n\n(Enabling an Account)\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase.html":{"url":"additional-documentation/firebase.html","title":"additional-page - Firebase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase\nThe following documentation regards integration with Firebase. This covers the technical details of how it is integrated. If you're looking at setting up your instance of Katan, refer to Setting Up Firebase.\nDocumentation\n Database Structure\n Firebase Authentication\n Firebase Functions\n Firestore Wrapper\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-authentication.html":{"url":"additional-documentation/firebase/firebase-authentication.html","title":"additional-page - Firebase Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Authentication Process\nKatana uses Firebase authentication services, although this may be temporary. As it stands, a developer key is not available to the team working on the Katana project. As an alternative, which coincedently opens up several new opportunities by integrating with Google authentication, Katana uses Firebase authentication with only Google Accounts allowed. Users cannot create new accounts, and must use an existing Google account. It must be a BYUI G-Suite Account, or their google account will be removed from Katana instantaneously.\nSign-Up Process\nWhen a user accesses Katana for the first time, they will be redirected to a Google login page. It will allow them to log in with any google account, but it will keep looping them back to the login page if they use a standard gmail or non-BYUI google account. After successfully logging into a valid BYUI google account, they will be taken back to Katana, where they will be automatically logged in.\nHowever, they cannot access the tool quite yet. It may continue to loop them back to the Google login page, even with a BYUI Google account. This is because all accounts are automatically disabled on creation (see below). This helps prevent unwanted users from accessing it without being given access manually. An admin must enable their account before they can continue.\nAuthentication Process\nBelow is a diagram with a simple overview of the authentication process using Firebase. This is the flow after the user has successfully signed up with a valid account. \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/database-structure.html":{"url":"additional-documentation/firebase/database-structure.html","title":"additional-page - Database Structure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDatabase Structure\nThe structure of the database is simple. It's sole purpose is to store logs.\nThe current Katana structure uses Firestore, a product produced by Firebase. It is a cloud-hosted, NoSQL database that handles datatypes easier than Firebase database.\nKatana uses its own Firestore Wrapper to handle sending information to the database. Refer to that if you are currently developing in Katana and would like to learn more about interfacing with Firestore.\nCollections\nCollections in a NoSQL database are similar to tables. They are just a \"collection\" of \"documents.\" A document is similar to a row in a standard database table. They can also be thought of as a stored JSON object (with a bit more control over datatypes).\nThe current setup requires three collections:\n\n\n\nCollection Title\nDescription\n\n\n\n\nuser_logs\nThis can store logs for user actions. This can include users logging in and out, changing account information, and similar actions. (BYUI Katana instance currently only stores users logging in and out)\n\n\nserver_logs\nActions taken by the server or significant events that should be logged should be logged here. This might include suspicious endpoint activity, or even just any request made to the server. (BYUI Katana instance currently does not store any information in this collection)\n\n\ntool_logs\nThis should be used to store logs generated by tools being run by users. (BYUI Katana instance currently stores every tool that runs, along with any related IssueItems)\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firestore-wrapper.html":{"url":"additional-documentation/firebase/firestore-wrapper.html","title":"additional-page - Firestore Wrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirestore Wrapper\nThe Firestore Wrapper, which is built specifically for Katana, is a small, easy wrapper used to log actions to Firestore. It does nothing more.\nView firestore-wrapper.js on Github\nSetup\nIf you use this separately from Katana, which it is not built for, the structure of your database will need to match what is described in Database Structure. It also requires the firebase-admin package to properly run. To implement the wrapper in your code:\nconst firestoreWrapper = require('./firestore-wrapper.js');\nconst db = firestoreWrapper.initializeFirebase();\nFrom there on, db can be used to access all of Firestore's API.\n\nFunctions\nFour public functions are exposed by the wrapper's export:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\nserverLog(data)\ndata (object)\nvoid\nThis saves data to the server_logs collection in Firestore, such as when a specific API is being tracked.\n\n\ntoolLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically used for when tools are being ran.\n\n\nuserLog(data)\ndata (object)\nvoid\nThis saves data to the tool_logs collection in Firestore. Typically logs when users log in and out. Please note that this only logs the user's email and information pertinent to the action that occurred. No other user information is stored.\n\n\ninitializeFirebase()\nnone\nDatabase Reference\nInitializes the app and returns a reference to the database. The database reference is also used internally, so this function must be called before using any other external functions. This will also console log any database logging if the --db flag was given at startup. It will log all information provided to log, which can be quite long. It is not recommended that you use this flag. It is available for development purposes.\n\n\n\nOne private function is used internally:\n\n\n\nMethod\nParameters\nReturns\nDescription\n\n\n\n\n_log(collectionTitle, data)\ncollectionTitle(string)data (object)\nvoid\nUsed by the logging functions available externally, this just logs data to Firestore. The other functions are just wrappers for this internal function.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/firebase/firebase-functions.html":{"url":"additional-documentation/firebase/firebase-functions.html","title":"additional-page - Firebase Functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirebase Functions\nFirebase provides a service called Firebase Functions that allows functions to be written that run on key events fired on the database. This is used to control if an account is valid or not when a user signs up. Currently, only one function is deployed to the BYUI instance of Katana.\n\n\n\nFunction\nEvent\nDescription\n\n\n\n\nverifyNewUsers()\nfunctions.auth.user().onCreate(...)\nChecks whether or not the user is a BYUI Google account, and if they are not, removes their account immediately. If they are, it disables their account and revokes their refresh tokens (to disable their current session).\n\n\n\nYou must be an admin or owner on your firebase instance to deploy Firebase Functions.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
>>>>>>> 87829dc278586e4be6e3850f5d0bf22ff8824411
}
